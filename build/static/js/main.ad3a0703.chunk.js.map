{"version":3,"sources":["containers/auth/LoginForm.js","containers/auth/RegisterForm.js","lib/styles/theme.js","module/redux/theme.js","components/common/CustomSwitch.js","components/common/Header.js","containers/common/HeaderContainer.js","components/common/BodyBlock.js","pages/main/MainPage.js","pages/post/PostWritePage.js","pages/post/PostPage.js","pages/post/PostListPage.js","pages/auth/LoginPage.js","pages/auth/RegisterPage.js","pages/auth/callback/LoginWithNaverPage.js","pages/auth/callback/LoginWithKakaoPage.js","pages/wiki/WikiPage.js","pages/wiki/WikiEditPage.js","pages/wiki/WikiRequestPage.js","pages/wiki/WikiHistoryPage.js","pages/wiki/WikiListPage.js","components/common/FlexContentBlock.js","pages/profile/MyPage.js","pages/profile/SecurityPage.js","pages/profile/ActivityPage.js","pages/search/LocalSearchPage.js","App.js","serviceWorker.js","module/redux/index.js","index.js","lib/api/client.js","lib/styles/open-color.js","module/redux/auth.js","module/redux/user.js","lib/api/auth.js","lib/api/post.js","components/common/Button.js","lib/api/user.js","components/common/Responsive.js","module/redux/loading.js","module/redux/search.js","lib/createRequest.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","module/redux/wiki.js","lib/api/wiki.js","module/redux/post.js"],"names":["withRouter","history","useState","error","setError","dispatch","useDispatch","useSelector","auth","user","form","login","authError","onChange","useCallback","e","target","value","name","changeFieid","key","onSubmit","preventDefault","username","password","includes","onSocialLogin","id_token","loginWithGoogle","useEffect","response","status","check","initializeForm","replace","sessionStorage","setItem","JSON","stringify","type","register","isNotExistUsername","checkExistUsernameResult","isNotExistUsernameError","checkExistUsernameResultError","isNotExistName","checkExistNameResult","isNotExistNameError","checkExistNameResultError","registerResult","registerResultError","result","message","validUsername","setValidUsername","validName","setValidName","passwordConfirm","isLoading","useRef","current","checkExistUsername","checkExistName","lightTheme","body","text","palette","gray","hoverText","categoryBorder","cyan","themeColorBody","themeColorHoverBody","progressBar","progressBody","sliderTrack","sliderRail","hoverList","inputBody","placeholder","btnSearchBody","dropdownBody","loginBody","loginInputBorder","loginInputBorderFocus","darkThemeSwitchBody","darkThemeSwitchTrack","editorTitleBorder","editorText","editorTagComponentBorder","editorTagBoxBorder","editorTagTitle","editorTagButtonBody","editorHoverTagButtonBody","editorTagButtonText","editorTagText","footerText","btnBody","btnHoverBody","btnText","btnDisableBody","btnDisableColor","btnTransparentHoverBody","btnTransparentHoverText","postBorder","postSubInfoText","postSubInfoHoverText","postTagText","postTagHoverText","postActionButtonText","postActionButtonHoverText","postActionButtonBody","postActionButtonHoverBody","wikiMenuBorder","wikiActionButtonBody","wikiActionButtonHoverBody","wikiActionButtonText","wikitActionButtonHoverText","wikiBorder","wikiHistoryLinkText","wikiHistoryLinkHoverText","errorText","red","profileInfoValueBody","profileInputValid","profileInputInValid","searchBorder","darkTheme","violet","setTheme","createAction","theme","handleActions","state","isDarkTheme","payload","DarkThemeSwitch","styled","Switch","HeaderBlock","nav","Menu","div","SearchResponsive","SearchInputWrapper","SearchInput","input","indigo","SearchBtn","Link","MemoizedEtcDropDown","React","memo","className","to","SearchDropDown","currentPath","ProfileInfo","OptionMenu","handleDarkThemeToggle","classes","makeStyles","fontFamily","useStyles","setDarkTheme","Typography","component","Grid","container","display","alignItems","justify","style","fontSize","letterSpacing","item","checked","size","LogoutMenu","onLogout","onClick","UserDropDown","NoneUserDropDown","SearchInputPackage","searchQuery","handleSearchInput","handleSearchKeyUp","tabIndex","onKeyUp","event","keyCode","icon","Spacer","Header","library","add","faSearch","faEllipsisH","faEllipsisV","faUserCircle","etc","setEtc","search","setSearch","userinfo","setUserinfo","noneuser","setNoneUser","handleEtcToggle","prevOpen","handleEtcClose","handleSearchToggle","handleSearchClose","handleUserInfoToggle","handleUserInfoClose","handleNoneUserToggle","handleNoneUserClose","ClickAwayListener","onClickAway","aria-haspopup","justifyContent","Button","transparent","AuthTemplate","loadable","LoginForm","RegisterForm","location","query","pathname","logout","push","changeInput","localStorage","preload","BodyBlock","props","includeHeader","MainContainer","MainPage","EditorContainer","TagBoxContainer","WriteActionButtonsContainer","EditorFooter","Responsive","PostViewerContainer","PostPage","PostListContainer","PostListPage","LoginPage","RegisterPage","qs","parse","ignoreQueryPrefix","code","loginWithNaver","client_id","process","client_secret","redirect_uri","loginWithKakao","WikiViewerContainer","WikiSearchContainer","WikiPage","WikiRequestContainer","WikiRequestPage","WikiHistoryContainer","WikiHistoryPage","WikiListContainer","WikiListPage","FlexContentBlock","direction","MyPageMenuContainer","ProfileContainer","MyPage","SecurityContainer","SecurityPage","ActivityContainer","ActivityPage","LocalSearchContainer","LocalSearchPage","App","getItem","path","exact","LoginWithNaverPage","LoginWithKakaoPage","PostWritePage","WikiEditPage","Boolean","window","hostname","match","rootSaga","all","authSaga","userSaga","postSaga","wikiSaga","rootReducer","combineReducers","loading","post","wiki","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","tempSetUser","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","client","axios","create","yellow","createRequestActionTypes","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_WITH_GOOGLE","LOGIN_WITH_GOOGLE_SUCCESS","LOGIN_WITH_GOOGLE_FAILURE","LOGIN_WITH_NAVER","LOGIN_WITH_NAVER_SUCCESS","LOGIN_WITH_NAVER_FAILURE","LOGIN_WITH_KAKAO","LOGIN_WITH_KAKAO_SUCCESS","LOGIN_WITH_KAKAO_FAILURE","CHECK_EXIST_USERNAME","CHECK_EXIST_USERNAME_SUCCESS","CHECK_EXIST_USERNAME_FAILURE","CHECK_EXIST_NAME","CHECK_EXIST_NAME_SUCCESS","CHECK_EXIST_NAME_FAILURE","registerSaga","createRequestSaga","authAPI","loginSaga","loginWithGoogleSaga","loginWithNaverSaga","loginWithKakaoSaga","checkExistUsernameSaga","userAPI","checkExistNameSaga","takeLatest","debounce","initialState","produce","draft","checkFailureSaga","logoutSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","UPDATE_NAME","UPDATE_NAME_SUCCESS","UPDATE_NAME_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","changeField","updateName","id","initializeUpdateName","changePassword","newPassword","initializeChangePassword","checkSaga","updateNameSaga","changePasswordSaga","call","removeItem","checkError","updateUser","updateUserError","changePasswordResult","changePasswordError","curPassword","confirmPassword","profile","get","writePost","title","tags","readPost","updatePost","patch","removePost","delete","getList","page","tag","block","oldest","day","queryString","readComment","writeComment","updateComment","commentId","deleteComment","buttonStyle","css","fullWidth","themeColor","StyledButton","button","StyledLink","ResponsiveBlock","children","rest","startLoading","requestType","finishLoading","action","changeOption","initialize","option","totalSort","totalTerm","wikiSort","wikilength","blogSort","blogTerm","request","SUCCESS","FAILURE","put","data","meta","AuthTemplateBlock","ContentBox","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","GoogleLoginButton","socialBtnStyle","NaverLoginButton","a","KakaoLoginButton","textMap","signinGoogle","ErrorMessage","AuthForm","googleLoginBtn","auth2","loadGoogleLoginApi","load","init","cookiepolicy","scope","attachClickHandler","googleUser","getAuthResponse","onNaverLoginClick","requestUrl","onKakaoLoginClick","loadScript","script","srcValue","referenceNode","getElementsByTagName","googlejssdkNode","createElement","src","parentNode","insertBefore","removeApiScript","tagName","targetId","targetNode","map","node","indexOf","removeChild","removeTag","sdkNode","removeJssdk","autoComplete","length","ref","faGoogle","alt","GET_REQUEST_LIST","GET_REQUEST_LIST_SUCCESS","GET_REQUEST_LIST_FAILURE","SET_TITLE","WRITE_DOCUMENT","WRITE_DOCUMENT_SUCCESS","WRITE_DOCUMENT_FAILURE","READ_DOCUMENT","READ_DOCUMENT_SUCCESS","READ_DOCUMENT_FAILURE","GET_DOCUMENT_LIST","GET_DOCUMENT_LIST_SUCCESS","GET_DOCUMENT_LIST_FAILURE","GET_HISTORY_LIST","GET_HISTORY_LIST_SUCCESS","GET_HISTORY_LIST_FAILURE","GET_SEARCH_LIST","GET_SEARCH_LIST_SUCCESS","GET_SEARCH_LIST_FAILURE","GET_DIRECT_TITLE","GET_DIRECT_TITLE_SUCCESS","GET_DIRECT_TITLE_FAILURE","GET_RANDOM_TITLE","GET_RANDOM_TITLE_SUCCESS","GET_RANDOM_TITLE_FAILURE","GET_DOCUMENT_COUNT","GET_DOCUMENT_COUNT_SUCCESS","GET_DOCUMENT_COUNT_FAILURE","ADD_BARCODE_NUMBER","ADD_BARCODE_NUMBER_SUCCESS","ADD_BARCODE_NUMBER_FAILURE","getRequestList","setTitle","writeDocument","readDocument","r","unloadDocument","setOriginalDocument","getDocumentList","unloadList","getHistoryList","getSearchList","shortest","longest","getDirectTitle","getRandomTitle","getDocumentCount","addBarcodeNumber","getRequestListSaga","writeDocumentSaga","readDocumentSaga","getDocumentListSaga","getHistoryListSaga","getSearchListSaga","getDirectTitleSaga","getRandomTitleSaga","getDocumentCountSaga","addBarcodeNumberSaga","requestList","requestListError","titleError","editDocument","editDocumentError","directName","directError","randomTitle","randomTitleError","documentError","documentList","documentListError","historyList","historyListError","searchList","searchListError","lastPage","parseInt","headers","documentCount","documentCountError","addBarcodeNumberResult","addBarcodeNumberResultError","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","GET_LIST","GET_LIST_SUCCESS","GET_LIST_FAILURE","READ_POST_COMMENT","READ_POST_COMMENT_SUCCESS","READ_POST_COMMENT_FAILURE","WRITE_POST_COMMENT","WRITE_POST_COMMENT_SUCCESS","WRITE_POST_COMMENT_FAILURE","UPDATE_POST_COMMENT","UPDATE_POST_COMMENT_SUCCESS","UPDATE_POST_COMMENT_FAILURE","setOriginalPost","unloadPost","readPostComment","writePostComment","unloadPostComment","writePostSaga","postAPI","readPostSaga","updatePostSaga","getListSaga","readPostCommentSaga","writePostCommentSaga","updatePostCommentSaga","editPost","editPostError","postError","postList","postCount","postListError","targetPostId","commentList","commentCount","commentLastPage","commentListError","editComment","editCommentError","_id","neditPosttError"],"mappings":"8MAoGeA,uBAxFG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACPC,mBAAS,MADF,mBAC1BC,EAD0B,KACnBC,EADmB,KAE3BC,EAAWC,cAFgB,EAGOC,aAAY,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,MAAqB,CACvEC,KAAMF,EAAKG,MACXH,KAAMA,EAAKA,KACXI,UAAWJ,EAAKI,UAChBH,KAAMA,EAAKA,SAJLC,EAHyB,EAGzBA,KAAMF,EAHmB,EAGnBA,KAAMI,EAHa,EAGbA,UAAWH,EAHE,EAGFA,KAQzBI,EAAWC,uBACf,SAACC,GAAO,IAAD,EACmBA,EAAEC,OAAlBC,EADH,EACGA,MAAOC,EADV,EACUA,KACfb,EAASc,YAAY,CAAET,KAAM,QAASU,IAAKF,EAAMD,WACjDb,EAAS,QAEX,CAACC,IAIGgB,EAAWP,uBACf,SAACC,GACCA,EAAEO,iBADG,IAEGC,EAAuBb,EAAvBa,SAAUC,EAAad,EAAbc,SACd,CAACD,EAAUC,GAAUC,SAAS,IAChCrB,EAAS,oEAGXC,EAASM,YAAM,CAAEY,WAAUC,gBAE7B,CAACnB,EAAUK,IAIPgB,EAAgBZ,uBACpB,YAAmB,IAAhBa,EAAe,EAAfA,SACDtB,EAASuB,YAAgB,CAAED,gBAE7B,CAACtB,IAqCH,OAjCAwB,qBAAU,WAER,OAAIjB,EACgC,MAA9BA,EAAUkB,SAASC,YACrB3B,EAAS,oHAGTA,EAAS,oCAAaQ,IAKtBJ,IACFH,EAAS2B,eACT3B,EAAS4B,gBAEJ,WACL5B,EAAS4B,mBAEV,CAACzB,EAAMI,EAAWP,IAGrBwB,qBAAU,WACR,GAAIpB,EAAM,CACRR,EAAQiC,QAAQ,KAChB,IACEC,eAAeC,QAAQ,OAAQC,KAAKC,UAAU7B,IAC9C,MAAON,GACP,MAAMA,MAGT,CAACM,EAAMR,IAGR,kBAAC,IAAD,CACEsC,KAAK,QACL7B,KAAMA,EACNG,SAAUA,EACVQ,SAAUA,EACVlB,MAAOA,EACPuB,cAAeA,Q,mGC2FN1B,uBA9KM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACVC,mBAAS,MADC,mBAC7BC,EAD6B,KACtBC,EADsB,KAE9BC,EAAWC,cAFmB,EAWhCC,aAAY,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CAC7BE,KAAMF,EAAKgC,SACXC,mBAAoBjC,EAAKkC,yBACzBC,wBAAyBnC,EAAKoC,8BAC9BC,eAAgBrC,EAAKsC,qBACrBC,oBAAqBvC,EAAKwC,0BAC1BC,eAAgBzC,EAAKyC,eACrBC,oBAAqB1C,EAAK0C,wBAd1BxC,EAJkC,EAIlCA,KACA+B,EALkC,EAKlCA,mBACAE,EANkC,EAMlCA,wBACAE,EAPkC,EAOlCA,eACAE,EARkC,EAQlCA,oBACAE,EATkC,EASlCA,eACAC,EAVkC,EAUlCA,oBAVkC,EAqBMhD,mBAAS,CACjDiD,QAAQ,EACRC,QAAS,KAvByB,mBAqB7BC,EArB6B,KAqBdC,EArBc,OAyBFpD,mBAAS,CACzCiD,QAAQ,EACRC,QAAS,KA3ByB,mBAyB7BG,EAzB6B,KAyBlBC,EAzBkB,KA+B9B3C,EAAWC,uBACf,SAACC,GAAO,IAAD,EACmBA,EAAEC,OAAlBC,EADH,EACGA,MAAOC,EADV,EACUA,KACfb,EAASc,YAAY,CAAET,KAAM,WAAYU,IAAKF,EAAMD,WACpDb,EAAS,MACI,aAATc,EACFoC,EAAiB,CACfH,QAAQ,EACRC,QAAS,KAEO,SAATlC,GACTsC,EAAa,CACXL,QAAQ,EACRC,QAAS,OAIf,CAAC/C,IAIGgB,EAAWP,uBACf,SAACC,GACCA,EAAEO,iBADG,IAEGC,EAA8Cb,EAA9Ca,SAAUC,EAAoCd,EAApCc,SAAUiC,EAA0B/C,EAA1B+C,gBAAiBvC,EAASR,EAATQ,KAE7C,IAAI,CAACK,EAAUC,EAAUiC,EAAiBvC,GAAMO,SAAS,IAKzD,OAAID,IAAaiC,GACfrD,EAAS,qFACTC,EAASc,YAAY,CAAET,KAAM,WAAYU,IAAK,WAAYH,MAAO,WACjEZ,EACEc,YAAY,CAAET,KAAM,WAAYU,IAAK,kBAAmBH,MAAO,YAInEZ,EAASmC,YAAS,CAAEjB,WAAUC,WAAUN,UAZtCd,EAAS,sEAcb,CAACC,EAAUK,IAGPgD,EAAYC,kBAAO,GAsFzB,OApFA9B,qBAAU,WACRxB,EAAS4B,YAAe,aACxByB,EAAUE,SAAU,IACnB,CAACvD,IAGJwB,qBAAU,WACJ6B,EAAUE,SACQ,KAAlBlD,EAAKa,UACPlB,EAASwD,YAAmB,CAAEtC,SAAUb,EAAKa,cAE9C,CAACmC,EAAWrD,EAAUK,EAAKa,WAG9BM,qBAAU,WACR,IAAI6B,EAAUE,QAAd,CADc,IAENrC,EAAmBb,EAAnBa,SAAUL,EAASR,EAATQ,KACL,KAATA,KAEDuB,GACAA,IAAuBA,EAAmBU,OAE3CK,EAAa,CACXL,QAAQ,EACRC,QAAS,uFAIX/C,EAASyD,YAAe,CAAEvC,WAAUL,cAErC,CAACwC,EAAWrD,EAAUK,EAAM+B,IAG/BZ,qBAAU,WACR,GAAIc,EACFW,EAAiB,CACfH,QAAQ,EACRC,QAAS,2FAEN,KAAKX,EAAoB,OACvBA,EAAmBU,OAC1BG,EAAiB,CAAEH,QAAQ,EAAMC,QAAS,KAE1CE,EAAiB,CACfH,QAAQ,EACRC,QAASX,EAAqBA,EAAmBW,QAAU,QAG9D,CAACX,EAAoBE,IAGxBd,qBAAU,WACR,GAAIkB,EACFS,EAAa,CACXL,QAAQ,EACRC,QAAS,2FAEN,KAAKP,EAAgB,OACnBA,EAAeM,OACtBK,EAAa,CAAEL,QAAQ,EAAMC,QAAS,KAEtCI,EAAa,CACXL,QAAQ,EACRC,QAASP,EAAiBA,EAAeO,QAAU,QAGtD,CAACP,EAAgBE,IAEpBlB,qBAAU,WACR,GAAIqB,EAEF,OAA4C,MAAxCA,EAAoBpB,SAASC,YAC/B3B,EAAS,8EAIXA,EAAS,yCAGP6C,GACFhD,EAAQiC,QAAQ,YAEjB,CAACe,EAAgBC,EAAqBjD,IAGvC,kBAAC,IAAD,CACEsC,KAAK,WACL7B,KAAMA,EACN2C,cAAeA,EACfE,UAAWA,EACX1C,SAAUA,EACVQ,SAAUA,EACVlB,MAAOA,Q,yKCnLA4D,EAAa,CAExBC,KAAM,OACNC,KAAMC,IAAQC,KAAK,GACnBC,UAAWF,IAAQC,KAAK,GACxBE,eAAgBH,IAAQI,KAAK,GAC7BC,eAAgBL,IAAQI,KAAK,GAC7BE,oBAAqBN,IAAQI,KAAK,GAClCG,YAAaP,IAAQI,KAAK,GAC1BI,aAAcR,IAAQI,KAAK,GAC3BK,YAAaT,IAAQI,KAAK,GAC1BM,WAAYV,IAAQI,KAAK,GAEzBO,UAAWX,IAAQC,KAAK,GACxBW,UAAWZ,IAAQC,KAAK,GACxBY,YAAab,IAAQC,KAAK,GAC1Ba,cAAed,IAAQC,KAAK,GAC5Bc,aAAc,OAEdC,UAAWhB,IAAQC,KAAK,GACxBgB,iBAAkBjB,IAAQC,KAAK,GAC/BiB,sBAAuBlB,IAAQC,KAAK,GAEpCkB,oBAAqBnB,IAAQC,KAAK,GAClCmB,qBAAsBpB,IAAQC,KAAK,GAEnCoB,kBAAmBrB,IAAQC,KAAK,GAChCqB,WAAYtB,IAAQC,KAAK,GACzBsB,yBAA0BvB,IAAQC,KAAK,GACvCuB,mBAAoBxB,IAAQC,KAAK,GACjCwB,eAAgBzB,IAAQC,KAAK,GAC7ByB,oBAAqB1B,IAAQC,KAAK,GAClC0B,yBAA0B3B,IAAQC,KAAK,GACvC2B,oBAAqB,OACrBC,cAAe7B,IAAQC,KAAK,GAE5B6B,WAAY9B,IAAQC,KAAK,GAEzB8B,QAAS/B,IAAQC,KAAK,GACtB+B,aAAchC,IAAQC,KAAK,GAC3BgC,QAAS,OACTC,eAAgBlC,IAAQI,KAAK,GAC7B+B,gBAAiBnC,IAAQC,KAAK,GAC9BmC,wBAAyBpC,IAAQC,KAAK,GACtCoC,wBAAyBrC,IAAQC,KAAK,GAEtCqC,WAAYtC,IAAQC,KAAK,GACzBsC,gBAAiBvC,IAAQC,KAAK,GAC9BuC,qBAAsBxC,IAAQC,KAAK,GACnCwC,YAAazC,IAAQI,KAAK,GAC1BsC,iBAAkB1C,IAAQI,KAAK,GAC/BuC,qBAAsB3C,IAAQC,KAAK,GACnC2C,0BAA2B5C,IAAQC,KAAK,GACxC4C,qBAAsB7C,IAAQC,KAAK,GACnC6C,0BAA2B9C,IAAQC,KAAK,GAExC8C,eAAgB/C,IAAQC,KAAK,GAC7B+C,qBAAsBhD,IAAQC,KAAK,GACnCgD,0BAA2BjD,IAAQC,KAAK,GACxCiD,qBAAsBlD,IAAQC,KAAK,GACnCkD,2BAA4BnD,IAAQC,KAAK,GACzCmD,WAAYpD,IAAQC,KAAK,GACzBoD,oBAAqBrD,IAAQI,KAAK,GAClCkD,yBAA0BtD,IAAQI,KAAK,GAEvCmD,UAAWvD,IAAQwD,IAAI,GAEvBC,qBAAsBzD,IAAQI,KAAK,GACnCsD,kBAAmB1D,IAAQI,KAAK,GAChCuD,oBAAqB3D,IAAQwD,IAAI,GAEjCI,aAAc5D,IAAQC,KAAK,IAGhB4D,EAAY,CAEvB/D,KAAME,IAAQC,KAAK,GACnBF,KAAM,OACNG,UAAWF,IAAQC,KAAK,GACxBE,eAAgBH,IAAQ8D,OAAO,GAC/BzD,eAAgBL,IAAQ8D,OAAO,GAC/BxD,oBAAqBN,IAAQ8D,OAAO,GACpCvD,YAAaP,IAAQ8D,OAAO,GAC5BtD,aAAcR,IAAQ8D,OAAO,GAC7BrD,YAAaT,IAAQ8D,OAAO,GAC5BpD,WAAYV,IAAQ8D,OAAO,GAE3BnD,UAAWX,IAAQC,KAAK,GACxBW,UAAWZ,IAAQC,KAAK,GACxBY,YAAab,IAAQC,KAAK,GAC1Ba,cAAed,IAAQC,KAAK,GAC5Bc,aAAcf,IAAQC,KAAK,GAE3Be,UAAWhB,IAAQC,KAAK,GACxBgB,iBAAkBjB,IAAQC,KAAK,GAC/BiB,sBAAuBlB,IAAQC,KAAK,GAEpCkB,oBAAqB,OACrBC,qBAAsBpB,IAAQC,KAAK,GAEnCoB,kBAAmBrB,IAAQC,KAAK,GAChCqB,WAAYtB,IAAQC,KAAK,GACzBsB,yBAA0BvB,IAAQC,KAAK,GACvCuB,mBAAoBxB,IAAQC,KAAK,GACjCwB,eAAgBzB,IAAQC,KAAK,GAC7ByB,oBAAqB1B,IAAQC,KAAK,GAClC0B,yBAA0B3B,IAAQC,KAAK,GACvC2B,oBAAqB5B,IAAQC,KAAK,GAClC4B,cAAe7B,IAAQC,KAAK,GAE5B6B,WAAY9B,IAAQC,KAAK,GAEzB8B,QAAS,OACTC,aAAchC,IAAQC,KAAK,GAC3BgC,QAASjC,IAAQC,KAAK,GACtBiC,eAAgBlC,IAAQ8D,OAAO,GAC/B3B,gBAAiBnC,IAAQC,KAAK,GAC9BmC,wBAAyBpC,IAAQC,KAAK,GACtCoC,wBAAyBrC,IAAQC,KAAK,GAEtCqC,WAAYtC,IAAQC,KAAK,GACzBsC,gBAAiBvC,IAAQC,KAAK,GAC9BuC,qBAAsBxC,IAAQC,KAAK,GACnCwC,YAAazC,IAAQ8D,OAAO,GAC5BpB,iBAAkB1C,IAAQ8D,OAAO,GACjCnB,qBAAsB3C,IAAQC,KAAK,GACnC2C,0BAA2B5C,IAAQC,KAAK,GACxC4C,qBAAsB7C,IAAQC,KAAK,GACnC6C,0BAA2B9C,IAAQC,KAAK,GAExC8C,eAAgB/C,IAAQC,KAAK,GAC7B+C,qBAAsBhD,IAAQC,KAAK,GACnCgD,0BAA2BjD,IAAQC,KAAK,GACxCiD,qBAAsBlD,IAAQC,KAAK,GACnCkD,2BAA4BnD,IAAQC,KAAK,GACzCmD,WAAYpD,IAAQC,KAAK,GACzBoD,oBAAqBrD,IAAQ8D,OAAO,GACpCR,yBAA0BtD,IAAQ8D,OAAO,GAEzCP,UAAWvD,IAAQwD,IAAI,GAEvBC,qBAAsBzD,IAAQ8D,OAAO,GACrCJ,kBAAmB1D,IAAQ8D,OAAO,GAClCH,oBAAqB3D,IAAQwD,IAAI,GAEjCI,aAAc5D,IAAQC,KAAK,I,sCC7IhB8D,EAAWC,YAHN,mBAuBHC,EAVDC,YAAc,eAbV,mBAeD,SAACC,EAAD,OAAmBC,EAAnB,EAAUC,QAAV,mBAAC,eACTF,GADQ,IAEXC,mBATe,CACnBA,aAAa,I,4YCLR,IAAME,EAAkBC,YAAOC,IAAPD,CAAH,KAEJ,qBAAGN,MAAkB7C,wBAGhC,qBAAG6C,MAAkB9C,uBAGrB,qBAAG8C,MAAkB9C,uB,mhJCKlC,IAAMsD,EAAcF,IAAOG,IAAV,KAGD,qBAAGT,MAAkBnE,QA+BxB,qBAAGmE,MAAkBlE,QAGrB,qBAAGkE,MAAkBlE,QASrB,qBAAGkE,MAAkB/D,aAQnB,qBAAG+D,MAAkB/D,aAoBvB,qBAAG+D,MAAkBlE,QAShB,qBAAGkE,MAAkBlD,gBAC1B,qBAAGkD,MAAkBlE,QAGhB,kBACG,SADH,EAAGkE,MACTnE,KACF,kCACA,oCAOQE,IAAQC,KAAK,IAiBb,qBAAGgE,MAAkBtD,aAY1B,qBAAGsD,MAAkBlE,QAsBrB,qBAAGkE,MAAkBlE,QAO5B4E,EAAOJ,IAAOK,IAAV,KAaJC,EAAmBN,IAAOK,IAAV,KAeP,qBAAGX,MAAkBlE,QAIrB,qBAAGkE,MAAkB/D,aAM9B4E,EAAqBP,IAAOK,IAAV,KAQlBG,EAAcR,IAAOS,MAAV,KAOD,qBAAGf,MAAkBrD,aAC1B,qBAAGqD,MAAkBlE,QAGnB,qBAAGkE,MAAkBpD,cAGTb,IAAQiF,OAAO,IAKlCC,EAAYX,YAAOY,IAAPZ,CAAH,KAMC,qBAAGN,MAAkBnD,iBAC1B,qBAAGmD,MAAkBlE,OAIdC,IAAQC,KAAK,IAkCzBmF,EAAsBC,IAAMC,MA7Bd,SAAC,GACnB,OADiC,EAAZnB,OAGjB,yBAAKoB,UAAU,0BACb,yBAAKA,UAAU,YACb,wCACA,4BACE,kBAAC,IAAD,CAAMC,GAAG,MACP,qCAEF,kBAAC,IAAD,CAAMA,GAAG,SACP,sCAGJ,8BAEF,wBAAID,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,iBACP,8FAcNC,EAAiB,SAAC,GAA4B,IAA1BtB,EAAyB,EAAzBA,MAAOuB,EAAkB,EAAlBA,YAC/B,OACEvB,GACE,kBAAC,GAAD,CACE9F,KAAK,iCACLqH,YAAaA,KAOfC,EAAc,SAAC,GAAc,IAAZpJ,EAAW,EAAXA,KACrB,OACE,yBAAKgJ,UAAU,gBACb,2BAAIhJ,EAAKS,MACT,4BACE,kBAAC,IAAD,CAAMwI,GAAI,WACR,wBAAID,UAAU,uBAAd,eAQJK,EAAa,SAAC,GAA4C,IAA1CxB,EAAyC,EAAzCA,YAAayB,EAA4B,EAA5BA,sBAI3BC,EAHYC,aAAW,iBAAO,CAClClC,UAAW,CAAEmC,WAAY,cAEXC,GAJ6C,EAM3BjK,oBAAS,GANkB,mBAMtD6H,EANsD,KAM3CqC,EAN2C,KAc7D,OANAvI,qBAAU,WACJyG,GACF8B,GAAa,KAEd,CAAC9B,IAGF,4BACE,4BACE,kBAAC+B,EAAA,EAAD,CAAYC,UAAU,OACpB,kBAACC,EAAA,EAAD,CACED,UAAU,QACVE,WAAS,EACTC,QAAQ,OACRC,WAAW,SACXC,QAAQ,gBACRC,MAAO,CACLC,SAAU,SACVX,WAAY,aACZY,cAAe,MAGjB,kBAACP,EAAA,EAAD,CAAMd,UAAWO,EAAQjC,UAAWgD,MAAI,GAAxC,cAGA,kBAACR,EAAA,EAAD,CAAMQ,MAAI,GACR,kBAACvC,EAAD,CACEwC,QAASjD,EACTlH,SAAU,WACRkJ,EAAsBhC,GACtBqC,GAAcrC,IAEhB7G,KAAK,YACL+J,KAAK,gBAWfC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUvB,EAAb,EAAaA,YAAb,OACjB,wBAAIH,UAAU,eACZ,kBAAC,IAAD,CAAMC,GAAIE,EAAawB,QAASD,GAC9B,2DAMAE,EAAe,SAAC,GAOf,IANLhD,EAMI,EANJA,MACA5H,EAKI,EALJA,KACA0K,EAII,EAJJA,SACA7C,EAGI,EAHJA,YACAyB,EAEI,EAFJA,sBACAH,EACI,EADJA,YAEA,OACEvB,GACE,yBAAKoB,UAAU,6CACb,kBAAC,EAAD,CAAahJ,KAAMA,IACnB,6BACA,kBAAC,EAAD,CACE6H,YAAaA,EACbyB,sBAAuBA,IAEzB,6BACA,kBAAC,EAAD,CAAYoB,SAAUA,EAAUvB,YAAaA,MAO/C0B,GAAmB,SAAC,GAAmD,IAAjDjD,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,YAAayB,EAA4B,EAA5BA,sBAC9C,OACE1B,GACE,yBAAKoB,UAAU,6CACb,kBAAC,EAAD,CACEnB,YAAaA,EACbyB,sBAAuBA,MAQ3BwB,GAAqB,SAAC,GAAD,IACzBhJ,EADyB,EACzBA,KACAiJ,EAFyB,EAEzBA,YACAC,EAHyB,EAGzBA,kBACAC,EAJyB,EAIzBA,kBAJyB,OAMzB,yBAAKjC,UAAWlH,EAAMoJ,SAAS,MAC7B,kBAAC3C,EAAD,KACE,kBAACC,EAAD,CACElE,YAAY,eACZ9D,MAAOuK,EACP3K,SAAU4K,EACVG,QAAS,SAACC,GACc,KAAlBA,EAAMC,SACRJ,EAAkBF,OAK1B,kBAACpC,EAAD,CAAWM,GAAE,wBAAmB8B,IAC9B,kBAAC,IAAD,CAAiBO,KAAK,cAMtBC,GAASvD,IAAOK,IAAV,KAuJGmD,GAnJA,SAAC,GAST,IARLxL,EAQI,EARJA,KACA0K,EAOI,EAPJA,SACA7C,EAMI,EANJA,YACAsB,EAKI,EALJA,YACA4B,EAII,EAJJA,YACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,kBACA3B,EACI,EADJA,sBAEAmC,IAAQC,IAAI,CAACC,IAAUC,IAAaC,IAAaC,MAD7C,MAGkBrM,oBAAS,GAH3B,mBAGGsM,EAHH,KAGQC,EAHR,OAIwBvM,oBAAS,GAJjC,mBAIGwM,EAJH,KAIWC,EAJX,OAK4BzM,oBAAS,GALrC,mBAKG0M,EALH,KAKaC,EALb,OAM4B3M,oBAAS,GANrC,mBAMG4M,EANH,KAMaC,EANb,KAQEC,EAAkBlM,uBAAY,WAClC2L,GAAO,SAACQ,GAAD,OAAeA,OACrB,IACGC,EAAiBpM,uBAAY,WACjC2L,GAAO,KACN,IACGU,EAAqBrM,uBAAY,WACrC6L,GAAU,SAACM,GAAD,OAAeA,OACxB,IACGG,EAAoBtM,uBAAY,WACpC6L,GAAU,KACT,IACGU,EAAuBvM,uBAAY,WACvC+L,GAAY,SAACI,GAAD,OAAeA,OAC1B,IACGK,EAAsBxM,uBAAY,WACtC+L,GAAY,KACX,IACGU,EAAuBzM,uBAAY,WACvCiM,GAAY,SAACE,GAAD,OAAeA,OAC1B,IACGO,EAAsB1M,uBAAY,WACtCiM,GAAY,KACX,IAEH,OACE,oCACE,kBAACpE,EAAD,KACE,yBAAKc,UAAU,eACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,QAAvB,gBAGA,yBAAKA,UAAU,QACb,kBAACZ,EAAD,CAAMY,UAAU,aACd,kBAAC,IAAD,CAAMC,GAAG,MAAT,SAEF,kBAACb,EAAD,CAAMY,UAAU,aACd,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAEF,kBAAC+D,EAAA,EAAD,CAAmBC,YAAaR,GAC9B,kBAACrE,EAAD,KACE,kBAAC,IAAD,CACEa,GAAIE,EACJwB,QAAS4B,EACTW,gBAAc,QAEd,kBAAC,IAAD,CAAiB5B,KAAK,gBAExB,kBAACzC,EAAD,CAAqBjB,MAAOmE,QAKpC,yBAAK/C,UAAU,cACb,kBAACV,EAAD,KACE,kBAAC,GAAD,CACExG,KAAK,eACLiJ,YAAaA,EACbC,kBAAmBA,EACnBC,kBAAmBA,MAIzB,yBAAKjC,UAAU,gBACb,kBAACV,EAAD,CACE6B,MAAO,CACLH,QAAS,UACTC,WAAY,SACZkD,eAAgB,WAGlB,kBAACH,EAAA,EAAD,CAAmBC,YAAaN,GAC9B,yBAAK3D,UAAU,cACb,kBAAC,IAAD,CACEC,GAAIE,EACJ+D,gBAAc,OACdvC,QAAS+B,GAET,kBAAC,IAAD,CAAiBpB,KAAK,YAExB,kBAAC,EAAD,CAAgB1D,MAAOqE,EAAQ9C,YAAaA,OAIjDnJ,EACC,kBAACgN,EAAA,EAAD,CAAmBC,YAAaJ,GAC9B,yBAAK7D,UAAU,aACb,kBAAC,IAAD,CACEC,GAAIE,EACJ+D,gBAAc,OACdvC,QAASiC,GAET,kBAAC,IAAD,CAAiBtB,KAAK,cAAcd,KAAK,QAE3C,kBAAC,EAAD,CACE5C,MAAOuE,EACPnM,KAAMA,EACN0K,SAAUA,EACV7C,YAAaA,EACbyB,sBAAuBA,EACvBH,YAAaA,MAKnB,yBAAKH,UAAU,aACb,kBAACgE,EAAA,EAAD,CAAmBC,YAAaF,GAC9B,yBAAK/D,UAAU,IACb,kBAAC,IAAD,CAAMC,GAAIE,EAAawB,QAASmC,GAC9B,kBAAC,IAAD,CAAiBxB,KAAK,gBAExB,kBAAC,GAAD,CACE1D,MAAOyE,EACPxE,YAAaA,EACbyB,sBAAuBA,MAI7B,kBAAC8D,EAAA,EAAD,CAAQpE,UAAU,cAAcqE,YAAY,OAAOpE,GAAG,UAAtD,yBAOR,kBAACsC,GAAD,Q,kBCjkBA+B,GAAeC,cAAS,kBAC5B,2CAEIC,GAAYD,cAAS,kBAAM,2CAA2C,IACtEE,GAAeF,cAAS,kBAC5B,4CAmEahO,gBAhES,SAAC,GAA2B,IAAzBmO,EAAwB,EAAxBA,SAAUlO,EAAc,EAAdA,QAC7BI,EAAWC,cADgC,EAENC,aACzC,gBAAGE,EAAH,EAAGA,KAAM0H,EAAT,EAASA,MAAOuE,EAAhB,EAAgBA,OAAhB,MAA8B,CAC5BjM,KAAMA,EAAKA,KACX6H,YAAaH,EAAMG,YACnBkD,YAAakB,EAAO0B,UAJhB3N,EAFyC,EAEzCA,KAAM6H,EAFmC,EAEnCA,YAAakD,EAFsB,EAEtBA,YAQrB5B,EAAcuE,EAASE,SAAWF,EAASzB,OAE3CvB,EAAWrK,uBAAY,WAC3BT,EAASiO,iBACR,CAACjO,IAEEqL,EAAoB5K,uBACxB,SAAC0K,GACCvL,EAAQsO,KAAR,wBAA8B/C,MAEhC,CAACvL,IAGGwL,EAAoB3K,uBACxB,SAAC+K,GACCxL,EAASmO,aAAY3C,EAAM7K,OAAOC,UAEpC,CAACZ,IAGG0J,EAAwBjJ,uBAC5B,SAACuH,GACChI,EAAS4H,GAAUI,IACnB,IAEEoG,aAAarM,QAAQ,aAAciG,EAAQ,IAC3C,MAAOlI,GACP,MAAMA,KAGV,CAACE,IAUH,OANAwB,qBAAU,WACRkM,GAAaW,UACbT,GAAUS,UACVR,GAAaQ,YACZ,IAGD,kBAAC,GAAD,CACEjO,KAAMA,EACN0K,SAAUA,EACV7C,YAAaA,EACbsB,YAAaA,EACb4B,YAAaA,EACbC,kBAAmBA,EACnBC,kBAAmBA,EACnB3B,sBAAuBA,O,qLCtE7B,IAUe4E,GAVGlG,IAAOK,IAAV,MAEN,SAAC8F,GAAD,OAAYA,EAAMC,cAAgB,OAAS,KAIpC,qBAAG1G,MAAkBnE,QCP/B8K,GAAgBd,cAAS,kBAC7B,wDAaae,GAVE,WACf,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWF,eAAa,IACxB,kBAACC,GAAD,Q,SCNAE,GAAkBhB,cAAS,kBAC/B,wDAEIiB,GAAkBjB,cAAS,kBAC/B,kCAEIkB,GAA8BlB,cAAS,kBAC3C,kCAEImB,GAAenB,cAAS,kBAC5B,iCAsBahO,gBAnBO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAKvB,OAJiBM,aAAY,kBAAe,CAAEE,KAAjB,EAAGA,KAAyBA,SAAjDA,MAENR,EAAQiC,QAAQ,UAGhB,kBAACkN,GAAA,EAAD,KACE,kBAAC,IAAD,KACE,oEAEF,kBAAC,GAAD,MACA,kBAACJ,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,MACA,kBAACC,GAAD,UC9BAE,GAAsBrB,cAAS,kBACnC,sEAaasB,GAVE,WACf,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWT,eAAa,IACxB,kBAACQ,GAAD,QCTAE,GAAoBvB,cAAS,kBACjC,gEAaawB,GAVM,WACnB,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWX,eAAa,IACxB,kBAACU,GAAD,Q,mBCESE,GAXG,WAChB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,qEAEF,kBAAC,WAAD,Q,UCKSC,GAXM,WACnB,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,2EAEF,kBAAC,WAAD,Q,6BC0CS1P,gBA9CY,SAAC,GAA2B,IAAzBmO,EAAwB,EAAxBA,SAAUlO,EAAc,EAAdA,QAChCI,EAAWC,cADmC,EAElBC,aAAY,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,MAAqB,CACjED,KAAMA,EAAKA,KACXI,UAAWJ,EAAKI,UAChBH,KAAMA,EAAKA,SAHLD,EAF4C,EAE5CA,KAAMI,EAFsC,EAEtCA,UAAWH,EAF2B,EAE3BA,KAF2B,EAOrBkP,KAAGC,MAAMzB,EAASzB,OAAQ,CACvDmD,mBAAmB,IADbC,EAP4C,EAO5CA,KAAMzH,EAPsC,EAOtCA,MAPsC,EAO/BlI,OAInBF,EAAQiC,QAAQ,UA4BlB,OAvBAL,qBAAU,WACRxB,EAAS0P,aAAe,CAAEC,UAJVC,uBAIqBC,cAHjBD,aAGgCH,OAAMzH,aACzD,CAAChI,EALc4P,uBACIA,aAIkBH,EAAMzH,IAE9CxG,qBAAU,WACJrB,GACFH,EAAS2B,eAEPpB,GACFX,EAAQiC,QAAQ,YAEjB,CAAC7B,EAAUG,EAAMI,EAAWX,IAE/B4B,qBAAU,WACR,GAAIpB,EACF,IACE0B,eAAeC,QAAQ,OAAQC,KAAKC,UAAU7B,IAC9CR,EAAQiC,QAAQ,KAChB,MAAO/B,GACP,MAAMA,KAGT,CAACM,EAAMR,IAER,oCACE,kCCMSD,gBA/CY,SAAC,GAA2B,IAAzBmO,EAAwB,EAAxBA,SAAUlO,EAAc,EAAdA,QAChCI,EAAWC,cADmC,EAElBC,aAAY,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,MAAqB,CACjED,KAAMA,EAAKA,KACXI,UAAWJ,EAAKI,UAChBH,KAAMA,EAAKA,SAHLD,EAF4C,EAE5CA,KAAMI,EAFsC,EAEtCA,UAAWH,EAF2B,EAE3BA,KAF2B,EAO5BkP,KAAGC,MAAMzB,EAASzB,OAAQ,CAChDmD,mBAAmB,IADbC,EAP4C,EAO5CA,KAP4C,EAOtC3P,OAIZF,EAAQiC,QAAQ,UAElB,IAAM8N,EAAYC,mCAEZE,EAAeF,+CAyBrB,OAvBApO,qBAAU,WACRxB,EAAS+P,aAAe,CAAEJ,YAAWE,cAJjBD,mCAIgCE,eAAcL,YACjE,CAACzP,EAAU2P,EALQC,mCAKkBH,EAAMK,IAE9CtO,qBAAU,WACJrB,GACFH,EAAS2B,eAEPpB,GACFX,EAAQiC,QAAQ,YAEjB,CAAC7B,EAAUG,EAAMI,EAAWX,IAE/B4B,qBAAU,WACR,GAAIpB,EACF,IACE0B,eAAeC,QAAQ,OAAQC,KAAKC,UAAU7B,IAC9CR,EAAQiC,QAAQ,KAChB,MAAO/B,GACP,MAAMA,KAGT,CAACM,EAAMR,IAER,oCACE,kCC5CAoQ,GAAsBrC,cAAS,kBACnC,sEAEIsC,GAAsBtC,cAAS,kBACnC,iCAcauC,GAXE,WACf,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAW1B,eAAa,IACxB,kBAACyB,GAAD,MACA,kBAACD,GAAD,QCVArB,GAAkBhB,cAAS,kBAC/B,wDAEImB,GAAenB,cAAS,kBAC5B,iCAEIkB,GAA8BlB,cAAS,kBAC3C,kCAqBahO,gBAlBM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAKtB,OAJiBM,aAAY,kBAAe,CAAEE,KAAjB,EAAGA,KAAyBA,SAAjDA,MAENR,EAAQiC,QAAQ,UAGhB,kBAACkN,GAAA,EAAD,KACE,kBAAC,IAAD,KACE,0EAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAc7M,KAAK,SACnB,kBAAC,GAAD,UCzBAiO,GAAuBxC,cAAS,kBACpC,kCAEIsC,GAAsBtC,cAAS,kBACnC,iCAiBayC,GAdS,WACtB,OACE,oCACE,kBAAC,IAAD,KACE,qGAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAW5B,eAAa,IACxB,kBAAC,GAAD,MACA,kBAAC2B,GAAD,QChBAF,GAAsBtC,cAAS,kBACnC,iCAEI0C,GAAuB1C,cAAS,kBACpC,wDAiBa2C,GAdS,WACtB,OACE,oCACE,kBAAC,IAAD,KACE,4EAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAW9B,eAAa,IACxB,kBAAC,GAAD,MACA,kBAAC6B,GAAD,QCjBAJ,GAAsBtC,cAAS,kBACnC,iCAEI4C,GAAoB5C,cAAS,kBACjC,kCAca6C,GAXM,WACnB,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWhC,eAAa,IACxB,kBAAC,GAAD,MACA,kBAAC+B,GAAD,Q,mHCXN,IAMeE,GANUrI,YAAO2G,KAAP3G,CAAH,MAEF,SAACmG,GAAD,MACI,WAApBA,EAAMmC,UAAyB,SAAW,SCHxCC,GAAsBhD,cAAS,kBACnC,iCAEIiD,GAAmBjD,cAAS,kBAChC,kCAmBakD,GAhBA,WACb,OACE,oCACE,kBAAC,IAAD,KACE,0DAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWrC,eAAa,IACxB,kBAAC,GAAD,KACE,kBAACmC,GAAD,MACA,kBAACC,GAAD,SCjBFE,GAAoBnD,cAAS,kBACjC,kCAEIgD,GAAsBhD,cAAS,kBACnC,iCAmBaoD,GAhBM,WACnB,OACE,oCACE,kBAAC,IAAD,KACE,+DAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWvC,eAAa,IACxB,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAACsC,GAAD,SCjBFH,GAAsBhD,cAAS,kBACnC,iCAEIqD,GAAoBrD,cAAS,kBACjC,kCAmBasD,GAhBM,WACnB,OACE,oCACE,kBAAC,IAAD,KACE,4EAEF,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWzC,eAAa,IACxB,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAACwC,GAAD,SCnBFE,GAAuBvD,cAAS,kBACpC,+DAaawD,GAVS,WACtB,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAW3C,eAAa,IACxB,kBAAC0C,GAAD,QCiESE,GArDH,WAAO,IACTnJ,EAAgB/H,aAAY,kBAAgB,CAClD+H,YADkC,EAAGH,MAClBG,gBADbA,YAGFjI,EAAWC,cAajB,OAXAuB,qBAAU,WACR,IAEuB,SADA4M,aAAaiD,QAAQ,cAExCrR,EAAS4H,GAAS,IAEpB,MAAO9H,GACP,MAAMA,KAEP,CAACE,IAGF,kBAAC,IAAD,CAAe8H,MAAOG,EAAcP,EAAYhE,GAC9C,oCACE,kBAAC,IAAD,KACE,gDAEF,kBAAC,IAAD,CAAOuG,UAAWyE,GAAU4C,KAAM,CAAC,KAAMC,OAAK,IAC9C,kBAAC,IAAD,CAAOtH,UAAWmF,GAAWkC,KAAM,SAAUC,OAAK,IAClD,kBAAC,IAAD,CAAOtH,UAAWuH,GAAoBF,KAAM,iBAC5C,kBAAC,IAAD,CAAOrH,UAAWwH,GAAoBH,KAAM,iBAC5C,kBAAC,IAAD,CAAOrH,UAAWoF,GAAciC,KAAM,cACtC,kBAAC,IAAD,CACErH,UAAWkF,GACXmC,KAAM,CAAC,QAAS,oBAChBC,OAAK,IAEP,kBAAC,IAAD,CAAOtH,UAAWyH,GAAeJ,KAAM,gBACvC,kBAAC,IAAD,CAAOrH,UAAWgF,GAAUqC,KAAM,2BAA4BC,OAAK,IACnE,kBAAC,IAAD,CAAOtH,UAAWiG,GAAUoB,KAAM,CAAC,KAAM,eAAgBC,OAAK,IAC9D,kBAAC,IAAD,CAAOtH,UAAW0H,GAAcL,KAAM,aAAcC,OAAK,IACzD,kBAAC,IAAD,CAAOtH,UAAWmG,GAAiBkB,KAAM,gBAAiBC,OAAK,IAC/D,kBAAC,IAAD,CACEtH,UAAWqG,GACXgB,KAAM,yBACNC,OAAK,IAEP,kBAAC,IAAD,CAAOtH,UAAWuG,GAAcc,KAAM,aAAcC,OAAK,IACzD,kBAAC,IAAD,CAAOtH,UAAW4G,GAAQS,KAAM,UAAWC,OAAK,IAChD,kBAAC,IAAD,CAAOtH,UAAW8G,GAAcO,KAAM,mBAAoBC,OAAK,IAC/D,kBAAC,IAAD,CAAOtH,UAAWgH,GAAcK,KAAM,mBAAoBC,OAAK,IAC/D,kBAAC,IAAD,CAAOtH,UAAWkH,GAAiBG,KAAM,UAAWC,OAAK,OC7D7CK,QACW,cAA7BC,OAAO/D,SAASgE,UAEe,UAA7BD,OAAO/D,SAASgE,UAEhBD,OAAO/D,SAASgE,SAASC,MACvB,2D,4FCIWC,IAAV,SAAUA,KAAV,kEACL,OADK,SACCC,aAAI,CAACC,eAAYC,cAAYC,eAAYC,iBAD1C,wCAIQC,OAfKC,2BAAgB,CAClCC,aACArS,UACAC,SACA0H,QACA2K,UACAC,UACArG,c,UCHIsG,GAAiBC,eACjBC,GAAQC,uBACZR,GACAS,+BAAoBC,2BAAgBL,MAItCA,GAAeM,IAAIjB,KACF,WACf,IACE,IAAM5R,EAAO0B,eAAeuP,QAAQ,QACpC,IAAKjR,EAAM,OACXyS,GAAM7S,SAASkT,YAAY9S,IAC3ByS,GAAM7S,SAAS2B,eACf,MAAO7B,GACP,MAAMA,GAGVqT,GAEAC,IAASC,OACP,kBAAC,IAAD,CAAUR,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,SAINS,SAASC,eAAe,SFwFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhU,GACLiU,QAAQjU,MAAMA,EAAMiD,a,gCGzI5B,aAEMiR,EAFN,OAEeC,EAAMC,SAENF,O,+BCuEAnQ,IA3EC,CACdC,KAAM,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFuD,IAAK,CACH,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFM,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFmB,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF7E,KAAM,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFkQ,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,a,0eCsDajC,I,EA/GsCkC,YACrD,iB,mBADKC,E,KAAUC,E,KAAkBC,E,OAGWH,YAC5C,c,mBADKI,E,KAAOC,E,KAAeC,E,OAOzBN,YAAyB,0B,mBAH3BO,E,KACAC,E,KACAC,E,OAMET,YAAyB,yB,mBAH3BU,E,KACAC,E,KACAC,E,OAMEZ,YAAyB,yB,mBAH3Ba,E,KACAC,E,KACAC,E,OAOEf,YAAyB,6B,mBAH3BgB,E,KACAC,E,KACAC,E,OAOElB,YAAyB,yB,mBAH3BmB,E,KACAC,E,KACAC,E,KAIW3U,EAAc+G,YAtCN,qBAwCnB,kBAA2B,CACzBxH,KADF,EAAGA,KAEDU,IAFF,EAASA,IAGPH,MAHF,EAAcA,UAMHgB,EAAiBiG,YA7CN,wBA6CoC,SAACxH,GAAD,OAAUA,KACzD8B,GAAW0F,YACtBwM,GACA,kBAAmC,CACjCnT,SADF,EAAGA,SAEDC,SAFF,EAAaA,SAGXN,KAHF,EAAuBA,SAMZP,GAAQuH,YAAa2M,GAAO,kBAA6B,CACpEtT,SADuC,EAAGA,SAE1CC,SAFuC,EAAaA,aAIzCI,GAAkBsG,YAC7B8M,GACA,kBAAmB,CAAErT,SAArB,EAAGA,aAEQoO,GAAiB7H,YAC5BiN,GACA,kBAAgD,CAC9CnF,UADF,EAAGA,UAEDE,cAFF,EAAcA,cAGZJ,KAHF,EAA6BA,KAI3BzH,MAJF,EAAmCA,UAOxB+H,GAAiBlI,YAC5BoN,GACA,kBAAuD,CACrDtF,UADF,EAAGA,UAEDE,cAFF,EAAcA,cAGZJ,KAHF,EAA6BA,KAI3BK,aAJF,EAAmCA,iBAOxBtM,GAAqBqE,YAChCuN,GACA,SAAClU,GAAD,OAAcA,KAEHuC,GAAiBoE,YAC5B0N,GACA,kBAAyB,CAAErU,SAA3B,EAAGA,SAAkCL,KAArC,EAAaA,SAIT6U,GAAeC,YAAkBtB,EAAUuB,KAC3CC,GAAYF,YAAkBnB,EAAOoB,KACrCE,GAAsBH,YAC1BhB,EACAiB,KAEIG,GAAqBJ,YACzBb,EACAc,KAEII,GAAqBL,YACzBV,EACAW,KAEIK,GAAyBN,YAC7BP,EACAc,KAEIC,GAAqBR,YACzBJ,EACAW,KAGK,SAAUhE,KAAV,iEACL,OADK,SACCkE,YAAW/B,EAAUqB,IADtB,OAEL,OAFK,SAECU,YAAW5B,EAAOqB,IAFnB,OAGL,OAHK,SAGCO,YAAWzB,EAAmBmB,IAH/B,OAIL,OAJK,SAICM,YAAWtB,EAAkBiB,IAJ9B,OAKL,OALK,UAKCK,YAAWnB,EAAkBe,IAL9B,QAML,OANK,UAMCK,YAAS,IAAKjB,EAAsBa,IANrC,QAOL,OAPK,UAOCI,YAAS,IAAKd,EAAkBY,IAPjC,wCAWP,IAAMG,GAAe,CACnBnU,SAAU,CACRjB,SAAU,GACVC,SAAU,GACViC,gBAAiB,GACjBvC,KAAM,IAERP,MAAO,CACLY,SAAU,GACVC,SAAU,IAEZkB,yBAA0B,KAC1BE,8BAA+B,KAC/BE,qBAAsB,KACtBE,0BAA2B,KAC3BxC,KAAM,KACNI,UAAW,KACXqC,eAAgB,KAChBC,oBAAqB,MAIjB1C,GAAO4H,aAAa,mBAnJL,qBAqJD,SAACC,EAAD,WAAUE,QAAW7H,EAArB,EAAqBA,KAAMU,EAA3B,EAA2BA,IAAKH,EAAhC,EAAgCA,MAAhC,OACd2V,YAAQvO,GAAO,SAACwO,GACdA,EAAMnW,GAAMU,GAAOH,QAJD,cAlJF,wBAwJD,SAACoH,EAAD,SAAmB3H,EAAnB,EAAU6H,QAAV,mBAAC,eACfF,GADc,uBAEhB3H,EAAOiW,GAAajW,IAFJ,yCAGS,MAHT,8CAIc,MAJd,qCAKK,MALL,0CAMU,MANV,+BAOD,MAPC,oCAQI,MARJ,OANG,cAgBrBiU,GAAmB,SAACtM,EAAD,OAAmBpF,EAAnB,EAAUsF,QAAV,mBAAC,eAChBF,GADe,IAElBnF,oBAAqB,KACrBD,sBAnBoB,cAqBrB2R,GAAmB,SAACvM,EAAD,OAAmBnF,EAAnB,EAAUqF,QAAV,mBAAC,eAChBF,GADe,IAElBpF,eAAgB,KAChBC,2BAxBoB,cA0BrB4R,GAAgB,SAACzM,EAAD,OAAmB7H,EAAnB,EAAU+H,QAAV,mBAAC,eACbF,GADY,IAEfzH,UAAW,KACXJ,YA7BoB,cA+BrBuU,GAAgB,SAAC1M,EAAD,OAAmBlI,EAAnB,EAAUoI,QAAV,mBAAC,eACbF,GADY,IAEf7H,KAAM,KACNI,UAAWT,OAlCS,cAoCrB8U,GAA4B,SAAC5M,EAAD,OAAmB7H,EAAnB,EAAU+H,QAAV,mBAAC,eACzBF,GADwB,IAE3BzH,UAAW,KACXJ,YAvCoB,cAyCrB0U,GAA4B,SAAC7M,EAAD,OAAmBlI,EAAnB,EAAUoI,QAAV,mBAAC,eACzBF,GADwB,IAE3B7H,KAAM,KACNI,UAAWT,OA5CS,cA8CrBiV,GAA2B,SAAC/M,EAAD,OAAmB7H,EAAnB,EAAU+H,QAAV,mBAAC,eACxBF,GADuB,IAE1BzH,UAAW,KACXJ,YAjDoB,cAmDrB6U,GAA2B,SAAChN,EAAD,OAAmBlI,EAAnB,EAAUoI,QAAV,mBAAC,eACxBF,GADuB,IAE1B7H,KAAM,KACNI,UAAWT,OAtDS,cAwDrBoV,GAA2B,SAAClN,EAAD,OAAmB7H,EAAnB,EAAU+H,QAAV,mBAAC,eACxBF,GADuB,IAE1BzH,UAAW,KACXJ,YA3DoB,cA6DrBgV,GAA2B,SAACnN,EAAD,OAAmBlI,EAAnB,EAAUoI,QAAV,mBAAC,eACxBF,GADuB,IAE1B7H,KAAM,KACNI,UAAWT,OAhES,cAkErBuV,GAA+B,SAC9BrN,EAD8B,OAEnB3F,EAFmB,EAE5B6F,QAF4B,mBAAC,eAI5BF,GAJ2B,IAK9B3F,2BACAE,8BAA+B,UAxEX,cA0ErB+S,GAA+B,SAC9BtN,EAD8B,OAEnBzF,EAFmB,EAE5B2F,QAF4B,mBAAC,eAI5BF,GAJ2B,IAK9B3F,yBAA0B,KAC1BE,qCAhFoB,cAkFrBiT,GAA2B,SAACxN,EAAD,OAAmBvF,EAAnB,EAAUyF,QAAV,mBAAC,eACxBF,GADuB,IAE1BvF,uBACAE,0BAA2B,UArFP,cAuFrB8S,GAA2B,SAC1BzN,EAD0B,OAEfrF,EAFe,EAExBuF,QAFwB,mBAAC,eAIxBF,GAJuB,IAK1BvF,qBAAsB,KACtBE,iCA7FoB,GAgGxB2T,IAGanW,Q,meCtLLsW,G,WASAC,G,WASOvE,I,EAlF6BiC,YAC5C,c,mBADKuC,E,KAAOC,E,KAAeC,E,OAUzBzC,YAAyB,yB,mBAH3BmB,E,KACAC,E,KACAC,E,OAQErB,YAAyB,oB,mBAH3B0C,E,KACAC,E,KACAC,E,OAQE5C,YAAyB,wB,mBAH3B6C,E,KACAC,E,KACAC,E,KAKWxV,EAAQkG,YAAa8O,GACrB1I,EAASpG,YA1BP,eA2BFqL,EAAcrL,YA1BL,sBA2BTpE,EAAiBoE,YAC5B0N,GACA,kBAAyB,CAAErU,SAA3B,EAAGA,SAAkCL,KAArC,EAAaA,SAEFuW,EAAcvP,YAxBN,qBA0BnB,kBAA2B,CAAExH,KAA7B,EAAGA,KAAgCU,IAAnC,EAASA,IAA+BH,MAAxC,EAAcA,UAEHyW,EAAaxP,YAAaiP,GAAa,kBAAmB,CACrEQ,GADkD,EAAGA,GAErDzW,KAFkD,EAAOA,SAI9C0W,EAAuB1P,YAzBL,+BA0BlB2P,EAAiB3P,YAC5BoP,GACA,kBAAoC,CAAEK,GAAtC,EAAGA,GAAuCnW,SAA1C,EAAOA,SAA6CsW,YAApD,EAAiBA,gBAENC,EAA2B7P,YAvBL,mCA4B7B8P,EAAYhC,YAAkBgB,EAAOf,KACrCO,EAAqBR,YACzBJ,EACAW,KAEI0B,EAAiBjC,YAAkBmB,EAAaZ,KAChD2B,EAAqBlC,YACzBsB,EACAf,KAGF,SAAUO,IAAV,iEAEI,OAFJ,kBAEUqB,YAAKlC,KAFf,OAGI9T,eAAeiW,WAAW,QAH9B,8GASA,SAAUrB,IAAV,iEAEI,OAFJ,kBAEUoB,YAAKlC,KAFf,OAGI9T,eAAeiW,WAAW,QAH9B,8GASO,SAAU5F,KAAV,iEACL,OADK,SACCiE,YAAWO,EAAOgB,GADnB,OAEL,OAFK,SAECvB,YAAWS,EAAeJ,GAF3B,OAGL,OAHK,SAGCL,YAlFO,cAkFYM,GAHpB,OAIL,OAJK,SAICN,YAAWb,EAAkBY,GAJ9B,OAKL,OALK,UAKCC,YAAWU,EAAac,GALzB,QAML,OANK,UAMCxB,YAAWa,EAAiBY,GAN7B,wCA8BQ9P,iBAAa,mBA5GN,sBA8GD,SAACC,EAAD,OAAmB5H,EAAnB,EAAU8H,QAAV,mBAAC,eACbF,GADY,IAEf5H,YAJsB,cAMvBwW,GAAgB,SAAC5O,EAAD,OAAmB5H,EAAnB,EAAU8H,QAAV,mBAAC,eACbF,GADY,IAEf5H,OACA4X,WAAY,UATU,cAWvBnB,GAAgB,SAAC7O,EAAD,OAAmBlI,EAAnB,EAAUoI,QAAV,mBAAC,eACbF,GADY,IAEf5H,KAAM,KACN4X,WAAYlY,OAdU,cA7Gb,eA6HD,SAACkI,GAAD,mBAAC,eACNA,GADK,IAER5H,KAAM,UAlBgB,cArGP,qBAyHD,SAAC4H,EAAD,WAAUE,QAAW7H,EAArB,EAAqBA,KAAMU,EAA3B,EAA2BA,IAAKH,EAAhC,EAAgCA,MAAhC,OACd2V,YAAQvO,GAAO,SAACwO,GACdA,EAAMnW,GAAMU,GAAOH,QAtBC,cAwBvB4U,GAA2B,SAACxN,EAAD,OAAmBvF,EAAnB,EAAUyF,QAAV,mBAAC,eACxBF,GADuB,IAE1BvF,uBACAE,0BAA2B,UA3BL,cA6BvB8S,GAA2B,SAC1BzN,EAD0B,OAEfrF,EAFe,EAExBuF,QAFwB,mBAAC,eAIxBF,GAJuB,IAK1BvF,qBAAsB,KACtBE,iCAnCsB,cAqCvBoU,GAAsB,SAAC/O,EAAD,OAAmBiQ,EAAnB,EAAU/P,QAAV,mBAAC,eACnBF,GADkB,IAErBiQ,aACAC,gBAAiB,UAxCK,cA0CvBlB,GAAsB,SAAChP,EAAD,OAAmBkQ,EAAnB,EAAUhQ,QAAV,mBAAC,eACnBF,GADkB,IAErBiQ,WAAY,KACZC,uBA7CsB,cA9FG,+BA6ID,SAAClQ,GAAD,mBAAC,eACtBA,GADqB,IAExBiQ,WAAY,KACZC,gBAAiB,KACjBzV,qBAAsB,KACtBE,0BAA2B,UApDL,cAsDvBuU,GAA0B,SAAClP,EAAD,OAAmBmQ,EAAnB,EAAUjQ,QAAV,mBAAC,eACvBF,GADsB,IAEzBmQ,uBAAwBA,EACxBC,oBAAqB,UAzDC,cA2DvBjB,GAA0B,SAACnP,EAAD,OAAmBoQ,EAAnB,EAAUlQ,QAAV,mBAAC,eACvBF,GADsB,IAEzBmQ,sBAAsB,EACtBC,2BA9DsB,cAvFO,mCAuJD,SAACpQ,GAAD,mBAAC,eAC1BA,GADyB,IAE5BmQ,qBAAsB,KACtBC,oBAAqB,KACrBjX,SAAU,CACRkX,YAAa,GACbZ,YAAa,GACba,gBAAiB,SAvEG,GApBP,CACnBlY,KAAM,KACN4X,WAAY,KACZO,QAAS,CACP1X,KAAM,IAERM,SAAU,CACRkX,YAAa,GACbZ,YAAa,GACba,gBAAiB,IAEnB7V,qBAAsB,KACtBE,0BAA2B,KAC3BsV,WAAY,KACZC,gBAAiB,KACjBC,qBAAsB,KACtBC,oBAAqB,Q,gCCvHvB,0PAEajW,EAAW,SAAC,GAAD,IAAGjB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUN,EAAvB,EAAuBA,KAAvB,OACtBmT,IAAOvB,KAAK,qBAAsB,CAAEvR,WAAUC,WAAUN,UAE7CP,EAAQ,SAAC,GAAD,IAAGY,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACnB6S,IAAOvB,KAAK,kBAAmB,CAAEvR,WAAUC,cAEhCI,EAAkB,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAH,OAC7B0S,IAAOvB,KAAK,yBAA0B,CAAEnR,cAE7BoO,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWE,EAAd,EAAcA,cAAeJ,EAA7B,EAA6BA,KAAMzH,EAAnC,EAAmCA,MAAnC,OAC5BgM,IAAOvB,KAAK,wBAAyB,CACnC9C,YACAE,gBACAJ,OACAzH,WAGS+H,EAAiB,SAAC,GAAD,IAC5BJ,EAD4B,EAC5BA,UACAE,EAF4B,EAE5BA,cACAJ,EAH4B,EAG5BA,KACAK,EAJ4B,EAI5BA,aAJ4B,OAM5BkE,IAAOvB,KAAK,wBAAyB,CACnC9C,YACAE,gBACAJ,OACAK,kBAGSnO,EAAQ,kBAAMqS,IAAOwE,IAAI,oBAEzBvK,EAAS,kBAAM+F,IAAOvB,KAAK,sB,gCClCxC,+UAGagG,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAO/U,EAAV,EAAUA,KAAMgV,EAAhB,EAAgBA,KAAhB,OACvB3E,IAAOvB,KAAK,kBAAmB,CAAEiG,QAAO/U,OAAMgV,UAEnCC,EAAW,SAACtB,GAAD,OAAQtD,IAAOwE,IAAP,oBAAwBlB,KAE3CuB,EAAa,SAAC,GAAD,IAAGvB,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,MAAO/U,EAAd,EAAcA,KAAMgV,EAApB,EAAoBA,KAApB,OACxB3E,IAAO8E,MAAP,oBAA0BxB,GAAM,CAAEoB,QAAO/U,OAAMgV,UAEpCI,EAAa,SAACzB,GAAD,OAAQtD,IAAOgF,OAAP,oBAA2B1B,KAEhD2B,EAAU,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,IAAKjY,EAA0C,EAA1CA,SAAU6M,EAAgC,EAAhCA,MAAOqL,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IAC7DC,EAAcjK,IAAGrN,UAAU,CAC/BiX,OACAC,MACAjY,WACA6M,QACAqL,QACAC,SACAC,QAEF,OAAOtF,IAAOwE,IAAP,yBAA6Be,KAGzBC,EAAc,SAAC,GAAyB,IAAvBlC,EAAsB,EAAtBA,GAAI4B,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MAChCG,EAAcjK,IAAGrN,UAAU,CAAEiX,OAAME,UACzC,OAAOpF,IAAOwE,IAAP,oBAAwBlB,EAAxB,oBAAsCiC,KAGlCE,EAAe,SAAC,GAAD,IAAGnC,EAAH,EAAGA,GAAI3T,EAAP,EAAOA,KAAP,OAC1BqQ,IAAOvB,KAAP,oBAAyB6E,EAAzB,YAAuC,CAAE3T,UAE9B+V,EAAgB,SAAC,GAAD,IAAGpC,EAAH,EAAGA,GAAIqC,EAAP,EAAOA,UAAWhW,EAAlB,EAAkBA,KAAlB,OAC3BqQ,IAAO8E,MAAP,oBAA0BxB,EAA1B,oBAAwCqC,GAAa,CAAEhW,UAE5CiW,EAAgB,SAAC,GAAD,IAAGtC,EAAH,EAAGA,GAAIqC,EAAP,EAAOA,UAAP,OAC3B3F,IAAOgF,OAAP,oBAA2B1B,EAA3B,oBAAyCqC,M,srEC5BpC,IAAME,EAAcC,YAAH,KAOb,qBAAGhS,MAAkBhC,WAGhB,qBAAGgC,MAAkBlC,WAGnB,qBAAGkC,MAAkBjC,gBAMrB,qBAAGiC,MAAkB/B,kBAC1B,qBAAG+B,MAAkB9B,mBAEd,qBAAG8B,MAAkB/B,kBAIrC,SAACwI,GAAD,OACAA,EAAMwL,WACND,YADA,QAUA,SAACvL,GAAD,OACAA,EAAMzF,QACNgR,YADA,IAEgBjW,IAAQiF,OAAO,GAEbjF,IAAQiF,OAAO,OAGjC,SAACyF,GAAD,OACAA,EAAM5G,QACNmS,YADA,IAEgBjW,IAAQ8D,OAAO,GAGb9D,IAAQ8D,OAAO,OAIjC,SAAC4G,GAAD,OACAA,EAAMlH,KACNyS,YADA,IAEgBjW,IAAQwD,IAAI,GAEVxD,IAAQwD,IAAI,OAI9B,SAACkH,GAAD,OACAA,EAAMtK,MACN6V,YADA,IAEgBjW,IAAQI,KAAK,GAEXJ,IAAQI,KAAK,OAG/B,SAACsK,GAAD,OACAA,EAAM4F,QACN2F,YADA,IAEgBjW,IAAQsQ,OAAO,GAEbtQ,IAAQsQ,OAAO,OAGjC,SAAC5F,GAAD,OACAA,EAAMd,aACNqM,YADA,KAGW,qBAAGhS,MAAkBlE,QACV,qBAAGkE,MAAkBlE,QAEzB,qBAAGkE,MAAkB7B,2BAC1B,qBAAG6B,MAAkB5B,8BAIlC,SAACqI,GAAD,OACAA,EAAMyL,YACNF,YADA,KAEgB,qBAAGhS,MAAkB5D,iBAC1BL,IAAQC,KAAK,IAEN,qBAAGgE,MAAkB3D,0BAKrC8V,EAAe7R,IAAO8R,OAAV,IACdL,GAGEM,EAAa/R,YAAOY,IAAPZ,CAAH,IACZyR,GAOWrM,IAJA,SAACe,GACd,OAAOA,EAAMlF,GAAK,kBAAC8Q,EAAe5L,GAAY,kBAAC0L,EAAiB1L,K,gCC1HlE,oJAEa/K,EAAqB,SAAC,GAAD,IAAGtC,EAAH,EAAGA,SAAH,OAChC8S,IAAOvB,KAAK,2BAA4B,CAAEvR,cAE/BuC,EAAiB,SAAC,GAAD,IAAGvC,EAAH,EAAGA,SAAUL,EAAb,EAAaA,KAAb,OAC5BmT,IAAOvB,KAAK,uBAAwB,CAAEvR,WAAUL,UAErCwW,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIzW,EAAP,EAAOA,KAAP,OACxBmT,IAAO8E,MAAM,oBAAqB,CAAExB,KAAIzW,UAE7B2W,EAAiB,SAAC,GAAD,IAAGF,EAAH,EAAGA,GAAInW,EAAP,EAAOA,SAAUsW,EAAjB,EAAiBA,YAAjB,OAC5BzD,IAAO8E,MAAM,qBAAsB,CAAExB,KAAInW,WAAUsW,kB,0UCLrD,IAAM2C,E,MAAkBhS,EAAOK,IAAV,KAiBNsG,IAJI,SAAC,GAA2B,IAAzBsL,EAAwB,EAAxBA,SAAaC,EAAW,4BAC5C,OAAO,kBAACF,EAAoBE,EAAOD,K,wIChBxBE,EAAe1S,YAHN,yBAKpB,SAAA2S,GAAW,OAAIA,KAGJC,EAAgB5S,YAPN,0BASrB,SAAA2S,GAAW,OAAIA,KAKXhI,EAAUzK,aAAa,mBAfP,yBAiBD,SAACC,EAAO0S,GAAR,mBAAC,eAAwB1S,GAAzB,kBAAiC0S,EAAOxS,SAAU,OAF1C,cAdN,0BAiBD,SAACF,EAAO0S,GAAR,mBAAC,eACd1S,GADa,kBAEf0S,EAAOxS,SAAU,OALK,GAFR,IAaNsK,O,kLClBFrE,EAActG,YANN,uBAMiC,SAACjH,GAAD,OAAWA,KACpD+Z,EAAe9S,YANN,wBAMkC,kBAAqB,CAC3E9G,IADsD,EAAGA,IAEzDH,MAFsD,EAAQA,UAInDga,EAAa/S,YATP,qBAabyO,GAH0BzO,YATN,4BAYL,CACnBkG,MAAO,GACP8M,OAAQ,CACNC,UAAW,GACXC,UAAW,GACXC,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,SAAU,MAKR9O,EAAStE,aAAa,mBA5BP,uBA8BD,SAACC,EAAD,OAAmBpH,EAAnB,EAAUsH,QAAV,mBAAC,eAAoCF,GAArC,IAA4C+F,MAAOnN,OAF3C,cA3BN,wBA8BD,SAACoH,EAAD,WAAUE,QAAWnH,EAArB,EAAqBA,IAAKH,EAA1B,EAA0BA,MAA1B,OACf2V,YAAQvO,GAAO,SAACwO,GACdA,EAAMqE,OAAO9Z,GAAOH,QALA,cA1BT,qBAiCD,kBAAM0V,KAPI,cAzBF,4BAiCD,SAACtO,GAAD,mBAAC,eACjBA,GADgB,IAEnB6S,OAAQvE,EAAauE,YAVC,GAa1BvE,GAGajK,O,wIC7CF+H,EAA2B,SAAClS,GAGvC,MAAO,CAACA,EAFK,UAAMA,EAAN,YACA,UAAMA,EAAN,cAIFyT,EAAoB,SAACzT,EAAMkZ,GACtC,IAAMC,EAAO,UAAMnZ,EAAN,YACPoZ,EAAO,UAAMpZ,EAAN,YAEb,iBAAO,WAAWwY,GAAX,uEACL,OADK,SACCa,YAAIhB,YAAarY,IADlB,OAGc,OAHd,kBAGoB4V,YAAKsD,EAASV,EAAOxS,SAHzC,OAIH,OADMzG,EAHH,gBAIG8Z,YAAI,CACRrZ,KAAMmZ,EACNnT,QAASzG,EAAS+Z,KAClBC,KAAMha,IAPL,+BAUH,OAVG,oCAUG8Z,YAAI,CACRrZ,KAAMoZ,EACNpT,QAAQ,EAAD,GACPpI,OAAO,IAbN,QAgBL,OAhBK,UAgBCyb,YAAId,YAAcvY,IAhBnB,2D,yvBCLT,IAAMwZ,EAAoBtT,IAAOK,IAAV,KAMP,qBAAGX,MAAkBjD,aAO/B8W,EAAavT,IAAOK,IAAV,KASH,qBAAGX,MAAkBlE,QAGrB,qBAAGkE,MAAkB/D,aAG5B,kBACe,SADf,EAAG+D,MACGnE,KAAkB,sBAAwB,wBAGtC,qBAAGmE,MAAkBnE,QAiBtB+J,UAbM,SAAC,GAAkB,IAAhB2M,EAAe,EAAfA,SACtB,OACE,kBAACqB,EAAD,KACE,kBAACC,EAAD,KACE,yBAAKvS,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,iBAEDgR,M,suEC3CT,IAAMuB,EAAgBxT,IAAOK,IAAV,KAGN,qBAAGX,MAAkBlE,QAMR,qBAAGkE,MAAkBhD,oBAWhB,qBAAGgD,MAAkBP,qBAGrB,qBAAGO,MAAkBN,uBAGvC,qBAAGM,MAAkBV,aAM5ByU,EAAczT,IAAOS,MAAV,KAGY,qBAAGf,MAAkBhD,oBAElC,qBAAGgD,MAAkBnE,QAC1B,qBAAGmE,MAAkBlE,QAID,qBAAGkE,MAAkB/C,yBAa9C+W,EAAS1T,IAAOK,IAAV,KAIC,qBAAGX,MAAkBlE,QAEnB,qBAAGkE,MAAkB/D,aAM9BgY,EAAsB3T,YAAOoF,IAAPpF,CAAH,KAInB4T,EAAoB5T,IAAO8R,OAAV,IACnBL,KAOEoC,EAAiBnC,YAAH,KAcdoC,EAAmB9T,IAAO+T,EAAV,IAClBtC,IACAoC,GAGEG,EAAmBhU,IAAO8R,OAAV,IAClBL,IACAoC,GAGEI,EAAU,CACd/b,MAAO,qBACPgc,aAAc,wCACdna,SAAU,4BAGNoa,EAAenU,IAAOK,IAAV,IACP5E,IAAQwD,IAAI,IAiQRmV,IA3PE,SAAC,GASX,IARLta,EAQI,EARJA,KACA7B,EAOI,EAPJA,KACAG,EAMI,EANJA,SACAQ,EAKI,EALJA,SACAlB,EAII,EAJJA,MACAuB,EAGI,EAHJA,cACA2B,EAEI,EAFJA,cACAE,EACI,EADJA,UAEMU,EAAOyY,EAAQna,GAGfua,EAAiBnZ,iBAAO,MACxBoZ,EAAQpZ,iBAAO,MAGfqZ,EAAqBlc,uBAAY,WAuBrCoR,OAAM,gBAAsB,WAC1BA,OAAM,KAAS+K,KAAK,SAAS,WAC3BF,EAAMnZ,QAAUsO,OAAM,KAAS6K,MAAMG,KAAK,CACxClN,UAAWC,2EACXkN,aAAc,qBACdC,MAAO,kBAzBXL,EAAMnZ,QAAQyZ,mBACZP,EAAelZ,QACf,IACA,SAAC0Z,GAQC,IAAM3b,EAAW2b,EAAWC,kBAAkB5b,SAC9CD,EAAc,CAAEC,gBAElB,SAACxB,aAgBJ,CAACuB,IAGE8b,EAAoB1c,uBAAY,WASpCoR,OAAO/D,SADPsP,sNAEC,IAGGC,EAAoB5c,uBAAY,WASpCoR,OAAO/D,SADPsP,iOAEC,IAGGE,EAAa7c,uBAAY,SAAC6S,EAAUiK,EAAQjG,EAAIkG,GACpD,IAAMC,EAAgBnK,EAASoK,qBAAqBH,GAAQ,GAC5D,IAAIjK,EAASC,eAAe+D,GAA5B,CAGA,IAAMqG,EAAkBrK,EAASsK,cAAcL,GAC/CI,EAAgBrG,GAAKA,EACrBqG,EAAgBE,IAAML,EACtBC,EAAcK,WAAWC,aAAaJ,EAAiBF,MACtD,IAGGO,EAAkBvd,uBAAY,YAChB,SAACwd,EAASC,GAC1B,IAAMC,EAAa7K,SAASoK,qBAAqBO,GACjD,YAAIE,GAAYC,KACd,SAACC,GAAD,OACEA,EAAKR,IAAIS,QAAQJ,IAAa,GAAKG,EAAKP,WAAWS,YAAYF,MAIrEG,CAAU,SAAU,oBAEA,SAAClH,GACnB,IAAMmH,EAAUnL,SAASC,eAAe+D,GACpCmH,GACFA,EAAQX,WAAWS,YAAYE,GAInCC,CAAY,kBACX,IAkBH,OAdAld,qBAAU,WASR,OARA8b,EACEhK,SACA,SACA,eACA,iEAEFqJ,IAEO,WACLqB,OAED,CAACV,EAAYU,EAAiBrB,IAG/B,kBAACf,EAAD,KACE,4BAAKhY,GACL,0BAAM5C,SAAUA,GACd,kBAAC6a,EAAD,CACE8C,aAAa,WACbvV,UACW,aAATlH,KAC0B,IAAzBc,EAAcF,OACX,WAC0B,KAA1BE,EAAcD,SAAkB,cAEtClC,KAAK,WACL6D,YAAY,4BACZ9D,MAAOP,EAAKa,SACZV,SAAUA,IAEF,aAAT0B,GACCc,EAAcD,SACY,KAA1BC,EAAcD,SACZ,0BAAMqG,UAAU,mBAAmBpG,EAAcD,SAErD,kBAAC8Y,EAAD,CACE3Z,KAAK,WACLyc,aAAa,eACbvV,UACW,aAATlH,IACC7B,EAAKc,SAASyd,QAAU,EACrB,WACkB,KAAlBve,EAAKc,UAAmB,cAE9BN,KAAK,WACL6D,YAAY,2BACZ9D,MAAOP,EAAKc,SACZX,SAAUA,IAEF,aAAT0B,GACC7B,EAAKc,SAASyd,OAAS,GACvBve,EAAKc,SAASyd,OAAS,GACrB,0BAAMxV,UAAU,mBAAhB,qEAEM,aAATlH,GACC,oCACE,kBAAC2Z,EAAD,CACE3Z,KAAK,WACLyc,aAAa,eACbvV,UACE/I,EAAK+C,gBAAgBwb,QAAU,GAC/Bve,EAAK+C,kBAAoB/C,EAAKc,SAC1B,WACyB,KAAzBd,EAAK+C,iBAA0B,aAErCvC,KAAK,kBACL6D,YAAY,wCACZ9D,MAAOP,EAAK+C,gBACZ5C,SAAUA,IAEXH,EAAK+C,gBAAgBwb,QAAU,GAC9Bve,EAAK+C,kBAAoB/C,EAAKc,UAC5B,0BAAMiI,UAAU,mBAAhB,qFAIJ,kBAACyS,EAAD,CACE3Z,KAAK,OACLkH,UACW,aAATlH,KACsB,IAArBgB,EAAUJ,OACP,WACsB,KAAtBI,EAAUH,SAAkB,cAElClC,KAAK,OACL6D,YAAY,qBACZ9D,MAAOP,EAAKQ,KACZL,SAAUA,IAEF,aAAT0B,GACCgB,EAAUH,SACY,KAAtBG,EAAUH,SACR,0BAAMqG,UAAU,mBAAmBlG,EAAUH,UAIpDjD,GAAS,kBAACyc,EAAD,KAAezc,GACzB,kBAACic,EAAD,CAAqB9X,MAAI,EAAC8V,WAAS,GAChCnW,IAGK,UAAT1B,GACC,yBAAKkH,UAAU,gBACb,6BACA,kBAAC4S,EAAD,CAAmBjC,WAAS,EAACjR,QAAM,EAAC+V,IAAKpC,GACvC,kBAAC,IAAD,CAAiB/Q,KAAMoT,MACtB,IAAMzC,EAAO,aACd,oCAEF,kBAACH,EAAD,CAAkBzO,aAAW,EAAC1C,QAAS,kBAAMoS,MAC3C,yBACEU,IAA8B,mCAC9BkB,IAAI,qBAGR,kBAAC3C,EAAD,CAAkB3O,aAAW,EAAC1C,QAAS,kBAAMsS,MAC3C,yBACEQ,IAA8B,mCAC9BkB,IAAI,qBAGR,8BAIJ,kBAACjD,EAAD,KACY,UAAT5Z,EACC,kBAAC,IAAD,CAAMmH,GAAG,aAAT,4BAEA,kBAAC,IAAD,CAAMA,GAAG,UAAT,0B,suBCrMOgJ,I,EA7Jb+B,YAAyB,yB,mBAH3B4K,E,KACAC,E,KACAC,E,KAGIC,EAAY/K,YAAyB,kB,EAUvCA,YAAyB,uB,mBAH3BgL,E,KACAC,E,KACAC,E,OAOElL,YAAyB,sB,mBAH3BmL,E,KACAC,E,KACAC,E,OASErL,YAAyB,0B,mBAH3BsL,E,KACAC,E,KACAC,E,OAQExL,YAAyB,yB,mBAH3ByL,E,KACAC,E,KACAC,E,OAOE3L,YAAyB,wB,mBAH3B4L,E,KACAC,E,KACAC,E,OAOE9L,YAAyB,yB,mBAH3B+L,E,KACAC,E,KACAC,E,OAOEjM,YAAyB,yB,oBAH3BkM,G,MACAC,G,MACAC,G,SAOEpM,YAAyB,2B,qBAH3BqM,G,MACAC,G,MACAC,G,SAOEvM,YAAyB,2B,qBAH3BwM,G,MACAC,G,MACAC,G,MAIWC,GAAiBlZ,YAAamX,GAC9BgC,GAAWnZ,YAAasX,GAAW,SAACzG,GAAD,OAAWA,KAC9CkC,GAAa/S,YAhEP,mBAiENuP,GAAcvP,YA/DN,qBA+DiC,kBAAqB,CACzE9G,IADoD,EAAGA,IAEvDH,MAFoD,EAAQA,UAIjDqgB,GAAgBpZ,YAAauX,GAAgB,kBAAmB,CAC3E9H,GADwD,EAAGA,GAE3D3T,KAFwD,EAAOA,SAIpDud,GAAerZ,YAAa0X,GAAe,kBAAgB,CACtEjI,GADsD,EAAGA,GAEzD6J,EAFsD,EAAOA,MAIlDC,GAAiBvZ,YA9DN,wBA+DXwZ,GAAsBxZ,YA9DL,8BAgE5B,SAACyL,GAAD,OAAcA,KAEHgO,GAAkBzZ,YAC7B6X,GACA,SAACtG,GAAD,OAAWA,KAEAmI,GAAa1Z,YA/DN,oBAgEP2Z,GAAiB3Z,YAAagY,GAAkB,kBAAa,CACxEvI,GAD2D,EAAGA,OAGnDmK,GAAgB5Z,YAC3BmY,GACA,kBAAwD,CACtDjS,MADF,EAAGA,MAEDsL,OAFF,EAAUA,OAGRqI,SAHF,EAAkBA,SAIhBC,QAJF,EAA4BA,QAK1BzI,KALF,EAAqCA,KAMnCE,MANF,EAA2CA,UAShCwI,GAAiB/Z,YAAasY,GAAkB,kBAAgB,CAC3EpS,MAD2D,EAAGA,UAGnD8T,GAAiBha,YAAayY,IAC9BwB,GAAmBja,YAC9B4Y,IACA,kBAAmB,CAAEvf,SAArB,EAAGA,aAEQ6gB,GAAmBla,YAC9B+Y,IACA,kBAAsB,CAAElI,MAAxB,EAAGA,MAA4BjJ,KAA/B,EAAUA,SAINuS,GAAqBrM,YACzBqJ,GCnI6B,kBAAMhL,IAAOwE,IAAI,wBDsI1CyJ,GAAoBtM,YACxByJ,GCrI2B,SAAC,GAAD,IAAG9H,EAAH,EAAGA,GAAI3T,EAAP,EAAOA,KAAP,OAC3BqQ,IAAOvB,KAAP,0BAA+B6E,GAAM,CAAE3T,YDuInCue,GAAmBvM,YAAkB4J,GCrIf,SAAC,GAAe,IAAbjI,EAAY,EAAZA,GAAI6J,EAAQ,EAARA,EAC3B5H,EAAcjK,IAAGrN,UAAU,CAAEkf,MACnC,OAAOnN,IAAOwE,IAAP,oBAAwBlB,EAAxB,YAA8BiC,ODoIjC4I,GAAsBxM,YAC1B+J,GClI6B,SAACtG,GAC9B,IAAMG,EAAcjK,IAAGrN,UAAU,CAAEmX,UACnC,OAAOpF,IAAOwE,IAAP,yBAA6Be,ODmIhC6I,GAAqBzM,YACzBkK,GCjI4B,SAAC,GAAD,IAAGvI,EAAH,EAAGA,GAAH,OAAYtD,IAAOwE,IAAP,oBAAwBlB,EAAxB,gBDoIpC+K,GAAoB1M,YACxBqK,GCnI2B,SAAC,GAOvB,IANLjS,EAMI,EANJA,MACAsL,EAKI,EALJA,OACAqI,EAII,EAJJA,SACAC,EAGI,EAHJA,QACAzI,EAEI,EAFJA,KACAE,EACI,EADJA,MAEMG,EAAcjK,IAAGrN,UAAU,CAC/B8L,QACAsL,SACAqI,WACAC,UACAzI,OACAE,UAEF,OAAOpF,IAAOwE,IAAP,2BAA+Be,ODsHlC+I,GAAqB3M,YACzBwK,GCpH4B,SAAC,GAAe,IAAbpS,EAAY,EAAZA,MACzBwL,EAAcjK,IAAGrN,UAAU,CAAE8L,UACnC,OAAOiG,IAAOwE,IAAP,kCAAsCe,ODqHzCgJ,GAAqB5M,YACzB2K,ICnH4B,kBAAMtM,IAAOwE,IAAI,8BDsHzCgK,GAAuB7M,YAC3B8K,ICrH8B,SAAC,GAAD,IAAGvf,EAAH,EAAGA,SAAH,OAC9B8S,IAAOvB,KAAK,sBAAuB,CAAEvR,gBDuHjCuhB,GAAuB9M,YAC3BiL,ICtH8B,SAAC,GAAD,IAAGlI,EAAH,EAAGA,MAAOjJ,EAAV,EAAUA,KAAV,OAC9BuE,IAAO8E,MAAP,oBAA0BJ,EAA1B,YAA2C,CAAEjJ,YDyHxC,SAAU4C,KAAV,iEACL,OADK,SACC+D,YAAW4I,EAAkBgD,IAD9B,OAEL,OAFK,SAEC5L,YAAWgJ,EAAgB6C,IAF5B,OAGL,OAHK,SAGC7L,YAAWmJ,EAAe2C,IAH3B,OAIL,OAJK,SAIC9L,YAAWsJ,EAAmByC,IAJ/B,OAKL,OALK,UAKC/L,YAAWyJ,EAAkBuC,IAL9B,QAML,OANK,UAMChM,YAAW4J,EAAiBqC,IAN7B,QAOL,OAPK,UAOCjM,YAAW+J,EAAkBmC,IAP9B,QAQL,OARK,UAQClM,YAAWkK,GAAkBiC,IAR9B,QASL,OATK,UASCnM,YAAWqK,GAAoB+B,IAThC,QAUL,OAVK,UAUCpM,YAAWwK,GAAoB6B,IAVhC,wCAcP,IA6BM/P,GAAO3K,aAAa,mBAErBkX,GAA2B,SAACjX,EAAD,OAAmB0a,EAAnB,EAAUxa,QAAV,mBAAC,eACxBF,GADuB,IAE1B0a,cACAC,iBAAkB,UALE,cAOrBzD,GAA2B,SAAClX,EAAD,OAAmB2a,EAAnB,EAAUza,QAAV,mBAAC,eACxBF,GADuB,IAE1B0a,YAAa,GACbC,wBAVoB,cAYrBxD,GAAY,SAACnX,EAAD,OAAmB0Q,EAAnB,EAAUxQ,QAAV,mBAAC,eACTF,GADQ,IAEX0Q,aAdoB,cApMP,mBAoND,SAAC1Q,GAAD,mBAAC,eACVA,GADS,IAEZ0Q,MAAO,KACPkK,WAAY,KACZjf,KAAM,GACNkf,aAAc,KACdC,kBAAmB,KACnB/U,MAAO,GACPgV,WAAY,KACZC,YAAa,KACbC,YAAa,KACbC,iBAAkB,UA3BE,cAlML,qBA+ND,SAAClb,EAAD,WAAUE,QAAWnH,EAArB,EAAqBA,IAAKH,EAA1B,EAA0BA,MAA1B,mBAAC,eACZoH,GADW,kBAEbjH,EAAMH,OA/Ba,cAiCrBye,GAAyB,SAACrX,EAAD,OAAmB6a,EAAnB,EAAU3a,QAAV,mBAAC,eACtBF,GADqB,IAExB6a,eACAC,kBAAmB,UApCC,cAsCrBxD,GAAyB,SAACtX,EAAD,OAAmB8a,EAAnB,EAAU5a,QAAV,mBAAC,eACtBF,GADqB,IAExB6a,aAAc,KACdC,yBAzCoB,cA2CrBtD,GAAwB,SAACxX,EAAD,OAAmBsL,EAAnB,EAAUpL,QAAV,mBAAC,eACrBF,GADoB,IAEvBsL,WACA6P,cAAe,UA9CK,cAgDrB1D,GAAwB,SAACzX,EAAD,OAAmBmb,EAAnB,EAAUjb,QAAV,mBAAC,eACrBF,GADoB,IAEvBsL,SAAU,KACV6P,qBAnDoB,cArLF,wBA0OD,SAACnb,GAAD,mBAAC,eACfA,GADc,IAEjBsL,SAAU,KACV6P,cAAe,UAxDK,cApLI,8BA8OD,SAACnb,EAAD,OAAmBsL,EAAnB,EAAUpL,QAAV,mBAAC,eACrBF,GADoB,IAEvB0Q,MAAOpF,EAASoF,MAChB/U,KAAM2P,EAAS3P,KACfkf,aAAc,KACdC,kBAAmB,UA/DC,cAiErBnD,GAA4B,SAAC3X,EAAD,OAAmBob,EAAnB,EAAUlb,QAAV,mBAAC,eACzBF,GADwB,IAE3Bob,eACAC,kBAAmB,UApEC,cAsErBzD,GAA4B,SAAC5X,EAAD,OAAmBqb,EAAnB,EAAUnb,QAAV,mBAAC,eACzBF,GADwB,IAE3Bob,aAAc,KACdC,yBAzEoB,cA7KN,oBAwPD,SAACrb,GAAD,mBAAC,eACXA,GADU,IAEbob,aAAc,KACdC,kBAAmB,UA9EC,cAgFrBvD,GAA2B,SAAC9X,EAAD,OAAmBsb,EAAnB,EAAUpb,QAAV,mBAAC,eACxBF,GADuB,IAE1Bsb,cACAC,iBAAkB,UAnFE,cAqFrBxD,GAA2B,SAAC/X,EAAD,OAAmBub,EAAnB,EAAUrb,QAAV,mBAAC,eACxBF,GADuB,IAE1Bsb,YAAa,KACbC,wBAxFoB,cA0FrBtD,GAA0B,SACzBjY,EADyB,OAEdwb,EAFc,EAEvBtb,QAA2BzG,EAFJ,EAEFga,KAFE,mBAAC,eAIvBzT,GAJsB,IAKzBwb,aACAC,gBAAiB,KACjBC,SAAUC,SAASliB,EAASmiB,QAAQ,6BAA8B,WAjG9C,cAmGrB1D,GAA0B,SAAClY,EAAD,OAAmByb,EAAnB,EAAUvb,QAAV,mBAAC,eACvBF,GADsB,IAEzBwb,WAAY,GACZC,uBAtGoB,cAwGrBrD,GAA2B,SAACpY,EAAD,OAAmBsL,EAAnB,EAAUpL,QAAV,mBAAC,eACxBF,GADuB,IAE1B+a,WAAYzP,EAASoF,MAAM7X,KAC3BmiB,YAAa,UA3GO,cA6GrB3C,GAA2B,SAACrY,EAAD,OAAmBgb,EAAnB,EAAU9a,QAAV,mBAAC,eACxBF,GADuB,IAE1B+a,WAAY,KACZC,mBAhHoB,cAkHrBzC,IAA2B,SAACvY,EAAD,OAAmB0Q,EAAnB,EAAUxQ,QAAV,mBAAC,eACxBF,GADuB,IAE1Bib,YAAavK,EAAM7X,KACnBqiB,iBAAkB,UArHE,cAuHrB1C,IAA2B,SAACxY,EAAD,OAAmBkb,EAAnB,EAAUhb,QAAV,mBAAC,eACxBF,GADuB,IAE1Bib,YAAa,KACbC,wBA1HoB,cA4HrBxC,IAA6B,SAAC1Y,EAAD,OAAmB6b,EAAnB,EAAU3b,QAAV,mBAAC,eAC1BF,GADyB,IAE5B6b,gBACAC,mBAAoB,UA/HA,cAiIrBnD,IAA6B,SAAC3Y,EAAD,OAAmB8b,EAAnB,EAAU5b,QAAV,mBAAC,eAC1BF,GADyB,IAE5B6b,cAAe,EACfC,0BApIoB,cAsIrBjD,IAA6B,SAC5B7Y,EAD4B,OAEjB+b,EAFiB,EAE1B7b,QAF0B,mBAAC,eAI1BF,GAJyB,IAK5B+b,yBACAC,4BAA6B,UA5IT,cA8IrBlD,IAA6B,SAC5B9Y,EAD4B,OAEjBgc,EAFiB,EAE1B9b,QAF0B,mBAAC,eAI1BF,GAJyB,IAK5B+b,uBAAwB,KACxBC,mCApJoB,GA7BL,CACnBtL,MAAO,KACPkK,WAAY,KACZjf,KAAM,GACN2P,SAAU,KACV6P,cAAe,KACfN,aAAc,KACdC,kBAAmB,KACnBJ,YAAa,GACbC,iBAAkB,KAClBS,aAAc,KACdC,kBAAmB,KACnBC,YAAa,KACbC,iBAAkB,KAClBxV,MAAO,GACPyV,WAAY,GACZC,gBAAiB,KACjBC,SAAU,EACVX,WAAY,KACZC,YAAa,KACbC,YAAa,KACbC,iBAAkB,KAClBW,cAAe,EACfC,mBAAoB,KACpBC,uBAAwB,KACxBC,4BAA6B,OA8JhBtR,Q,ikBEvPEN,I,EAtGbgC,YAAyB,mB,mBAH3B6P,E,KACAC,E,KACAC,E,OAOE/P,YAAyB,kB,mBAH3BgQ,E,KACAC,E,KACAC,E,OAOElQ,YAAyB,oB,mBAH3BmQ,E,KACAC,E,KACAC,E,OAGqDrQ,YACrD,iB,mBADKsQ,E,KAAUC,E,KAAkBC,E,OAQ/BxQ,YAAyB,0B,mBAH3ByQ,E,KACAC,E,KACAC,E,OAME3Q,YAAyB,2B,mBAH3B4Q,E,KACAC,E,KACAC,E,OAME9Q,YAAyB,4B,mBAH3B+Q,E,KACAC,E,KACAC,E,KAKWzK,EAAa/S,YA7CP,mBA8CNuP,EAAcvP,YA7CN,qBA6CiC,kBAAqB,CACzE9G,IADoD,EAAGA,IAEvDH,MAFoD,EAAQA,UAIjD0kB,EAAkBzd,YAhDL,0BAgDqC,SAAC4K,GAAD,OAAUA,KAC5D8S,EAAa1d,YAhDN,oBAiDP4Q,GAAY5Q,YAAaoc,GAAY,kBAA4B,CAC5EvL,MADgD,EAAGA,MAEnD/U,KAFgD,EAAUA,KAG1DgV,KAHgD,EAAgBA,SAKrDC,GAAW/Q,YAAauc,GAAW,SAAC9M,GAAD,OAAQA,KAC3CuB,GAAahR,YACxB0c,GACA,kBAAgC,CAAEjN,GAAlC,EAAGA,GAAmCoB,MAAtC,EAAOA,MAAsC/U,KAA7C,EAAcA,KAAqCgV,KAAnD,EAAoBA,SAETM,GAAUpR,YACrB6c,GACA,kBAAyD,CACvDxL,KADF,EAAGA,KAEDC,IAFF,EAASA,IAGPjY,SAHF,EAAcA,SAIZ6M,MAJF,EAAwBA,MAKtBqL,MALF,EAA+BA,MAM7BC,OANF,EAAsCA,OAOpCC,IAPF,EAA8CA,QAUnCiI,GAAa1Z,YAhDN,oBAiDP2d,GAAkB3d,YAC7Bgd,GACA,kBAA0B,CACxBvN,GADF,EAAGA,GAED4B,KAFF,EAAOA,KAGLE,MAHF,EAAaA,UAMFqM,GAAmB5d,YAC9Bmd,GACA,kBAAmB,CAAE1N,GAArB,EAAGA,GAAsB3T,KAAzB,EAAOA,SAMI+hB,IAJoB7d,YAC/Bsd,GACA,kBAA8B,CAAE7N,GAAhC,EAAGA,GAAiCqC,UAApC,EAAOA,UAAwChW,KAA/C,EAAkBA,SAEakE,YAjDL,6BAoDtB8d,GAAgBhQ,YAAkBsO,EAAY2B,KAC9CC,GAAelQ,YAAkByO,EAAWwB,KAC5CE,GAAiBnQ,YAAkB4O,EAAaqB,KAChDG,GAAcpQ,YAAkB+O,EAAUkB,KAC1CI,GAAsBrQ,YAC1BkP,EACAe,KAEIK,GAAuBtQ,YAC3BqP,EACAY,KAEIM,GAAwBvQ,YAC5BwP,EACAS,KAGK,SAAUxT,KAAV,iEACL,OADK,SACCgE,YAAW6N,EAAY0B,IADxB,OAEL,OAFK,SAECvP,YAAWgO,EAAWyB,IAFvB,OAGL,OAHK,SAGCzP,YAAWmO,EAAauB,IAHzB,OAIL,OAJK,SAIC1P,YAAWsO,EAAUqB,IAJtB,OAKL,OALK,UAKC3P,YAAWyO,EAAmBmB,IAL/B,QAML,OANK,UAMC5P,YAAW4O,EAAoBiB,IANhC,QAOL,OAPK,UAOC7P,YAAW+O,EAAqBe,IAPjC,wCAWP,IAAM5P,GAAe,CACnBoC,MAAO,GACP/U,KAAM,GACNgV,KAAM,GACNwN,SAAU,KACVC,cAAe,KACf3T,KAAM,KACN4T,UAAW,KACXC,SAAU,GACV5C,SAAU,EACV6C,UAAW,EACXC,cAAe,KACfC,aAAc,KACdC,YAAa,GACbC,aAAc,EACdC,gBAAiB,EACjBC,iBAAkB,KAClBC,YAAa,KACbC,iBAAkB,MAIdtU,GAAO1K,aAAa,mBAhJP,mBAkJD,kBAAMuO,MAFE,cA/IL,qBAkJD,SAACtO,EAAD,WAAUE,QAAWnH,EAArB,EAAqBA,IAAKH,EAA1B,EAA0BA,MAA1B,mBAAC,eACZoH,GADW,kBAEbjH,EAAMH,OALa,cA9IA,0BAqJD,SAACoH,EAAD,OAAmByK,EAAnB,EAAUvK,QAAV,mBAAC,eACjBF,GADgB,IAEnB0Q,MAAOjG,EAAKiG,MACZ/U,KAAM8O,EAAK9O,KACXgV,KAAMlG,EAAKkG,KACX8N,aAAchU,EAAKuU,SAZC,cA7IN,oBA2JD,SAAChf,GAAD,mBAAC,eACXA,GADU,IAEbyK,KAAM,KACN4T,UAAW,UAjBS,cAmBrBpC,GAAa,SAACjc,GAAD,mBAAC,eACVA,GADS,IAEZme,SAAU,KACVc,gBAAiB,UAtBG,cAwBrB/C,GAAqB,SAAClc,EAAD,OAAmBme,EAAnB,EAAUje,QAAV,mBAAC,eAClBF,GADiB,IAEpBme,WACAC,cAAe,UA3BK,cA6BrBjC,GAAqB,SAACnc,EAAD,OAAmBoe,EAAnB,EAAUle,QAAV,mBAAC,eAClBF,GADiB,IAEpBme,SAAU,KACVC,qBAhCoB,cAkCrB/B,GAAoB,SAACrc,EAAD,OAAmByK,EAAnB,EAAUvK,QAAV,mBAAC,eACjBF,GADgB,IAEnByK,OACA4T,UAAW,UArCS,cAuCrB/B,GAAoB,SAACtc,EAAD,OAAmBqe,EAAnB,EAAUne,QAAV,mBAAC,eACjBF,GADgB,IAEnByK,KAAM,KACN4T,iBA1CoB,cA4CrB7B,GAAsB,SAACxc,EAAD,OAAmBme,EAAnB,EAAUje,QAAV,mBAAC,eACnBF,GADkB,IAErBme,WACAC,cAAe,UA/CK,cAiDrB3B,GAAsB,SAACzc,EAAD,OAAmBoe,EAAnB,EAAUle,QAAV,mBAAC,eACnBF,GADkB,IAErBme,SAAU,KACVC,qBApDoB,cAsDrBzB,GAAmB,SAAC3c,EAAD,OAAmBse,EAAnB,EAAUpe,QAAyBzG,EAAnC,EAA6Bga,KAA7B,mBAAC,eAChBzT,GADe,IAElBse,WACAC,UAAW5C,SAASliB,EAASmiB,QAAQ,yBAA0B,MAC/DF,SAAUC,SAASliB,EAASmiB,QAAQ,6BAA8B,WA1D9C,cA4DrBgB,GAAmB,SAAC5c,EAAD,OAAmBwe,EAAnB,EAAUte,QAAV,mBAAC,eAChBF,GADe,IAElBse,SAAU,GACVE,qBA/DoB,cAtHN,oBAuLD,SAACxe,GAAD,mBAAC,eACXA,GADU,IAEbse,SAAU,GACVE,cAAe,UApEK,cAsErB1B,GAA4B,SAC3B9c,EAD2B,OAEhB0e,EAFgB,EAEzBxe,QAA4BzG,EAFH,EAEHga,KAFG,mBAAC,eAIzBzT,GAJwB,IAK3B0e,cACAC,aAAchD,SACZliB,EAASmiB,QAAQ,iCACjB,MAEFgD,gBAAiBjD,SACfliB,EAASmiB,QAAQ,qCACjB,MAEFiD,iBAAkB,UApFE,cAsFrB9B,GAA4B,SAAC/c,EAAD,OAAmB6e,EAAnB,EAAU3e,QAAV,mBAAC,eACzBF,GADwB,IAE3B0e,YAAa,GACbG,wBAzFoB,cA2FrB5B,GAA6B,SAACjd,EAAD,OAAmB8e,EAAnB,EAAU5e,QAAV,mBAAC,eAC1BF,GADyB,IAE5B8e,cACAC,iBAAkB,UA9FE,cAgGrB7B,GAA6B,SAACld,EAAD,OAAmB+e,EAAnB,EAAU7e,QAAV,mBAAC,eAC1BF,GADyB,IAE5B8e,YAAa,KACbC,wBAnGoB,cAqGrB3B,GAA8B,SAACpd,EAAD,OAAmB8e,EAAnB,EAAU5e,QAAV,mBAAC,eAC3BF,GAD0B,IAE7B8e,cACAC,iBAAkB,UAxGE,cA0GrB1B,GAA8B,SAACrd,EAAD,OAAmB+e,EAAnB,EAAU7e,QAAV,mBAAC,eAC3BF,GAD0B,IAE7B8e,YAAa,KACbC,wBA7GoB,cAtGE,4BAqND,SAAC/e,GAAD,mBAAC,eACnBA,GADkB,IAErB0e,YAAa,GACbG,iBAAkB,KAClBF,aAAc,EACdC,gBAAiB,EACjBE,YAAa,KACbC,iBAAkB,UAtHE,GAyHxBzQ,IAGa7D,S","file":"static/js/main.ad3a0703.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  login,\r\n  loginWithGoogle,\r\n  initializeForm,\r\n} from '../../module/redux/auth';\r\nimport { check } from '../../module/redux/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  // 폼 데이터 변경 이벤트\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      dispatch(changeFieid({ form: 'login', key: name, value }));\r\n      setError(null);\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // submit 이벤트\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const { username, password } = form;\r\n      if ([username, password].includes('')) {\r\n        setError('빈 칸을 모두 입력하세요.');\r\n        return;\r\n      }\r\n      dispatch(login({ username, password }));\r\n    },\r\n    [dispatch, form],\r\n  );\r\n\r\n  // 구글 로그인 이벤트\r\n  const onSocialLogin = useCallback(\r\n    ({ id_token }) => {\r\n      dispatch(loginWithGoogle({ id_token }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // 로그인 성공/실페에 따른 처리\r\n  useEffect(() => {\r\n    // 로그인 실패 시 에러 메시지 출력\r\n    if (authError) {\r\n      if (authError.response.status === 401) {\r\n        setError('계정 또는 비밀번호가 일치하지 않습니다.');\r\n        return;\r\n      } else {\r\n        setError('로그인 실패: ' + authError);\r\n        return;\r\n      }\r\n    }\r\n    // 로그인 성공 시 check 액션을 통해 유저 정보를 리덕스 상태에 업데이트\r\n    if (auth) {\r\n      dispatch(check());\r\n      dispatch(initializeForm()); // 폼 입력 초기화\r\n    }\r\n    return () => {\r\n      dispatch(initializeForm()); // 언마운트 시 폼 입력 초기화\r\n    };\r\n  }, [auth, authError, dispatch]);\r\n\r\n  // 로그인 성공시 유저 정보 세션에 저장 후 페이지 리다이렉션\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/');\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n      onSocialLogin={onSocialLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  register,\r\n  initializeForm,\r\n  checkExistUsername,\r\n  checkExistName,\r\n} from '../../module/redux/auth';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    form,\r\n    isNotExistUsername,\r\n    isNotExistUsernameError,\r\n    isNotExistName,\r\n    isNotExistNameError,\r\n    registerResult,\r\n    registerResultError,\r\n  } = useSelector(({ auth }) => ({\r\n    form: auth.register,\r\n    isNotExistUsername: auth.checkExistUsernameResult,\r\n    isNotExistUsernameError: auth.checkExistUsernameResultError,\r\n    isNotExistName: auth.checkExistNameResult,\r\n    isNotExistNameError: auth.checkExistNameResultError,\r\n    registerResult: auth.registerResult,\r\n    registerResultError: auth.registerResultError,\r\n  }));\r\n\r\n  const [validUsername, setValidUsername] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n  const [validName, setValidName] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n\r\n  // 폼 데이터 변경 이벤트\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      dispatch(changeFieid({ form: 'register', key: name, value }));\r\n      setError(null);\r\n      if (name === 'username') {\r\n        setValidUsername({\r\n          result: false,\r\n          message: '',\r\n        });\r\n      } else if (name === 'name') {\r\n        setValidName({\r\n          result: false,\r\n          message: '',\r\n        });\r\n      }\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // submit 이벤트\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const { username, password, passwordConfirm, name } = form;\r\n      // 하나라도 비어 있다면\r\n      if ([username, password, passwordConfirm, name].includes('')) {\r\n        setError('빈 칸을 모두 입력하세요.');\r\n        return;\r\n      }\r\n      // 비밀번호가 일치하지 않는다면\r\n      if (password !== passwordConfirm) {\r\n        setError('비밀번호가 일치하지 않습니다.');\r\n        dispatch(changeFieid({ form: 'register', key: 'password', value: '' }));\r\n        dispatch(\r\n          changeFieid({ form: 'register', key: 'passwordConfirm', value: '' }),\r\n        );\r\n        return;\r\n      }\r\n      dispatch(register({ username, password, name }));\r\n    },\r\n    [dispatch, form],\r\n  );\r\n\r\n  const isLoading = useRef(true);\r\n  // 컴포넌트가 처음 렌더링 될 때  form을 초기화함\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n    isLoading.current = false;\r\n  }, [dispatch]);\r\n\r\n  // 비동기 계정명 중복 체크\r\n  useEffect(() => {\r\n    if (isLoading.current) return;\r\n    if (form.username !== '') {\r\n      dispatch(checkExistUsername({ username: form.username }));\r\n    }\r\n  }, [isLoading, dispatch, form.username]);\r\n\r\n  // 비동기 이름 중복 체크\r\n  useEffect(() => {\r\n    if (isLoading.current) return;\r\n    const { username, name } = form;\r\n    if (name === '') return;\r\n    if (\r\n      !isNotExistUsername ||\r\n      (isNotExistUsername && !isNotExistUsername.result)\r\n    ) {\r\n      setValidName({\r\n        result: false,\r\n        message: '계정 이름이 유효하지 않습니다.',\r\n      });\r\n      return;\r\n    } else {\r\n      dispatch(checkExistName({ username, name }));\r\n    }\r\n  }, [isLoading, dispatch, form, isNotExistUsername]);\r\n\r\n  // 계정명 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistUsernameError) {\r\n      setValidUsername({\r\n        result: false,\r\n        message: '인증 서버 연결에 실패했습니다.',\r\n      });\r\n    } else if (!isNotExistUsername) return;\r\n    else if (isNotExistUsername.result) {\r\n      setValidUsername({ result: true, message: '' });\r\n    } else {\r\n      setValidUsername({\r\n        result: false,\r\n        message: isNotExistUsername ? isNotExistUsername.message : '',\r\n      });\r\n    }\r\n  }, [isNotExistUsername, isNotExistUsernameError]);\r\n\r\n  // 이름 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistNameError) {\r\n      setValidName({\r\n        result: false,\r\n        message: '인증 서버 연결에 실패했습니다.',\r\n      });\r\n    } else if (!isNotExistName) return;\r\n    else if (isNotExistName.result) {\r\n      setValidName({ result: true, message: '' });\r\n    } else {\r\n      setValidName({\r\n        result: false,\r\n        message: isNotExistName ? isNotExistName.message : '',\r\n      });\r\n    }\r\n  }, [isNotExistName, isNotExistNameError]);\r\n  // 회원가입 성공/실패 처리\r\n  useEffect(() => {\r\n    if (registerResultError) {\r\n      // 계정명이 이미 존재할 때\r\n      if (registerResultError.response.status === 409) {\r\n        setError('이미 존재하는 계정입니다.');\r\n        return;\r\n      }\r\n      // 기타 이유\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n    if (registerResult) {\r\n      history.replace('/login');\r\n    }\r\n  }, [registerResult, registerResultError, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      validUsername={validUsername}\r\n      validName={validName}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import palette from './open-color';\r\n\r\nexport const lightTheme = {\r\n  /* Common */\r\n  body: '#fff',\r\n  text: palette.gray[9],\r\n  hoverText: palette.gray[6],\r\n  categoryBorder: palette.cyan[7],\r\n  themeColorBody: palette.cyan[7],\r\n  themeColorHoverBody: palette.cyan[5],\r\n  progressBar: palette.cyan[3],\r\n  progressBody: palette.cyan[1],\r\n  sliderTrack: palette.cyan[3],\r\n  sliderRail: palette.cyan[1],\r\n  /* Header */\r\n  hoverList: palette.gray[2],\r\n  inputBody: palette.gray[1],\r\n  placeholder: palette.gray[7],\r\n  btnSearchBody: palette.gray[1],\r\n  dropdownBody: '#fff',\r\n  /* AuthForm */\r\n  loginBody: palette.gray[2],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[7],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: palette.gray[7],\r\n  darkThemeSwitchTrack: palette.gray[5],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[4],\r\n  editorText: palette.gray[8],\r\n  editorTagComponentBorder: palette.gray[4],\r\n  editorTagBoxBorder: palette.gray[9],\r\n  editorTagTitle: palette.gray[8],\r\n  editorTagButtonBody: palette.gray[8],\r\n  editorHoverTagButtonBody: palette.gray[6],\r\n  editorTagButtonText: '#fff',\r\n  editorTagText: palette.gray[6],\r\n  /* Footer */\r\n  footerText: palette.gray[8],\r\n  /* Button */\r\n  btnBody: palette.gray[9],\r\n  btnHoverBody: palette.gray[7],\r\n  btnText: '#fff',\r\n  btnDisableBody: palette.cyan[2],\r\n  btnDisableColor: palette.gray[9],\r\n  btnTransparentHoverBody: palette.gray[1],\r\n  btnTransparentHoverText: palette.gray[7],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[4],\r\n  postSubInfoText: palette.gray[6],\r\n  postSubInfoHoverText: palette.gray[7],\r\n  postTagText: palette.cyan[7],\r\n  postTagHoverText: palette.cyan[5],\r\n  postActionButtonText: palette.gray[7],\r\n  postActionButtonHoverText: palette.gray[6],\r\n  postActionButtonBody: palette.gray[2],\r\n  postActionButtonHoverBody: palette.gray[1],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[5],\r\n  wikiActionButtonBody: palette.gray[2],\r\n  wikiActionButtonHoverBody: palette.gray[1],\r\n  wikiActionButtonText: palette.gray[7],\r\n  wikitActionButtonHoverText: palette.gray[6],\r\n  wikiBorder: palette.gray[4],\r\n  wikiHistoryLinkText: palette.cyan[7],\r\n  wikiHistoryLinkHoverText: palette.cyan[5],\r\n  /* Error */\r\n  errorText: palette.red[5],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.cyan[0],\r\n  profileInputValid: palette.cyan[2],\r\n  profileInputInValid: palette.red[3],\r\n  /* Searck */\r\n  searchBorder: palette.gray[4],\r\n};\r\n\r\nexport const darkTheme = {\r\n  /* Common */\r\n  body: palette.gray[9],\r\n  text: '#fff',\r\n  hoverText: palette.gray[3],\r\n  categoryBorder: palette.violet[5],\r\n  themeColorBody: palette.violet[5],\r\n  themeColorHoverBody: palette.violet[3],\r\n  progressBar: palette.violet[3],\r\n  progressBody: palette.violet[1],\r\n  sliderTrack: palette.violet[3],\r\n  sliderRail: palette.violet[1],\r\n  /* Header */\r\n  hoverList: palette.gray[7],\r\n  inputBody: palette.gray[7],\r\n  placeholder: palette.gray[2],\r\n  btnSearchBody: palette.gray[8],\r\n  dropdownBody: palette.gray[9],\r\n  /* AuthForm */\r\n  loginBody: palette.gray[7],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[3],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: '#fff',\r\n  darkThemeSwitchTrack: palette.gray[2],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[5],\r\n  editorText: palette.gray[5],\r\n  editorTagComponentBorder: palette.gray[5],\r\n  editorTagBoxBorder: palette.gray[5],\r\n  editorTagTitle: palette.gray[6],\r\n  editorTagButtonBody: palette.gray[2],\r\n  editorHoverTagButtonBody: palette.gray[4],\r\n  editorTagButtonText: palette.gray[9],\r\n  editorTagText: palette.gray[4],\r\n  /* Footer */\r\n  footerText: palette.gray[2],\r\n  /* Button */\r\n  btnBody: '#fff',\r\n  btnHoverBody: palette.gray[4],\r\n  btnText: palette.gray[9],\r\n  btnDisableBody: palette.violet[3],\r\n  btnDisableColor: palette.gray[9],\r\n  btnTransparentHoverBody: palette.gray[7],\r\n  btnTransparentHoverText: palette.gray[1],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[5],\r\n  postSubInfoText: palette.gray[5],\r\n  postSubInfoHoverText: palette.gray[4],\r\n  postTagText: palette.violet[7],\r\n  postTagHoverText: palette.violet[5],\r\n  postActionButtonText: palette.gray[5],\r\n  postActionButtonHoverText: palette.gray[3],\r\n  postActionButtonBody: palette.gray[8],\r\n  postActionButtonHoverBody: palette.gray[7],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[7],\r\n  wikiActionButtonBody: palette.gray[8],\r\n  wikiActionButtonHoverBody: palette.gray[7],\r\n  wikiActionButtonText: palette.gray[5],\r\n  wikitActionButtonHoverText: palette.gray[3],\r\n  wikiBorder: palette.gray[5],\r\n  wikiHistoryLinkText: palette.violet[7],\r\n  wikiHistoryLinkHoverText: palette.violet[5],\r\n  /* Error */\r\n  errorText: palette.red[9],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.violet[5],\r\n  profileInputValid: palette.violet[3],\r\n  profileInputInValid: palette.red[3],\r\n  /* Searck */\r\n  searchBorder: palette.gray[5],\r\n};\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\n/* action type */\r\nconst SET_THEME = 'theme/SET_THEME';\r\n\r\n/* action */\r\nexport const setTheme = createAction(SET_THEME);\r\n\r\n/* redux-saga */\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  isDarkTheme: false,\r\n};\r\n\r\n/* reducer */\r\nconst theme = handleActions(\r\n  {\r\n    [SET_THEME]: (state, { payload: isDarkTheme }) => ({\r\n      ...state,\r\n      isDarkTheme,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default theme;\r\n","import styled from 'styled-components';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n/**\r\n * 커스텀 스위치(Dark Theme)\r\n */\r\n\r\nexport const DarkThemeSwitch = styled(Switch)`\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n    background-color: ${({ theme }) => theme.darkThemeSwitchTrack};\r\n  }\r\n  .MuiSwitch-switchBase {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faEllipsisH,\r\n  faEllipsisV,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Button from './Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DarkThemeSwitch } from './CustomSwitch';\r\n\r\n// Header 컴포넌트의 css 정의\r\nconst HeaderBlock = styled.nav`\r\n  position: fixed;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.body};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  z-index: 10;\r\n  li {\r\n    list-style-type: none !important;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n  }\r\n  .header-left {\r\n    align-items: center;\r\n  }\r\n  .header-mid {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .header-right {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .logo {\r\n    margin-left: 0.25rem;\r\n    margin-right: 0.25rem;\r\n    font-size: 1rem;\r\n    letter-spacing: 0.5px;\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .menu {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .main-menu {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .menu div > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .main-menu {\r\n      display: none;\r\n    }\r\n    .all-menu p {\r\n      margin: 0.5rem 0.5rem 0;\r\n      color: ${({ theme }) => theme.hoverText};\r\n      font-family: 'Raleway';\r\n      font-weight: 600;\r\n    }\r\n    .all-menu li {\r\n      margin: 0;\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n  }\r\n  @media screen and (min-width: 501px) {\r\n    .all-menu {\r\n      display: none;\r\n    }\r\n  }\r\n  .btn-sign-in {\r\n    margin-right: 0.5rem;\r\n    margin-left: 1rem;\r\n  }\r\n  .user-info {\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .dropdown {\r\n    position: fixed;\r\n    z-index: 2000;\r\n  }\r\n  .dropdown.dropdown-menu {\r\n    width: 14rem;\r\n    top: 2.5rem;\r\n    background: ${({ theme }) => theme.dropdownBody};\r\n    color: ${({ theme }) => theme.text};\r\n    border: none;\r\n    border-radius: 3px;\r\n    box-shadow: ${({ theme }) =>\r\n      theme.body === '#fff'\r\n        ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n        : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n    font-size: 0.8rem;\r\n  }\r\n  .dropdown.dropdown-menu hr {\r\n    margin: 0 0.25rem;\r\n    border: 0;\r\n    height: 1px;\r\n    background: ${palette.gray[5]};\r\n  }\r\n  .dropdown.dropdown-menu ul {\r\n    padding: 0.5rem 0.25rem;\r\n    margin: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li {\r\n    margin-top: 0.25rem;\r\n    padding: 0.5rem;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  .dropdown.dropdown-menu li:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  .dropdown.dropdown-menu.dropdown-user-info {\r\n    width: 16rem;\r\n    right: 0.5rem;\r\n  }\r\n  .etc-menu,\r\n  .logout-menu {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .profile-menu p {\r\n    margin: 0.5rem 0.5rem 0;\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: 'Raleway';\r\n    font-weight: 600;\r\n  }\r\n  .profile-menu li {\r\n    margin: 0;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n  .profile-menu-mypage {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .logout-menu {\r\n    font-size: 0.9rem;\r\n  }\r\n  .dropdown.dropdown-search-input {\r\n    display: flex;\r\n    top: 2.75rem;\r\n    right: 6.625rem;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.55);\r\n  }\r\n  .none-user {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n// 메뉴 영역 컴포넌트\r\nconst Menu = styled.div`\r\n  &:first-child {\r\n    margin-left: 1rem;\r\n  }\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n  &:last-child {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\n// 반응형 검색 컴포넌트\r\nconst SearchResponsive = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    .search-input {\r\n      display: flex;\r\n    }\r\n    .search-btn {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    .search-input {\r\n      display: none;\r\n    }\r\n    .search-btn {\r\n      display: inherit;\r\n      color: ${({ theme }) => theme.text};\r\n      margin: 0 1rem;\r\n    }\r\n    .search-btn > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\n// 검색 컴포넌트 Wrapper\r\nconst SearchInputWrapper = styled.div`\r\n  height: 2rem;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n// 검색 컴포넌트의 input style 정의\r\nconst SearchInput = styled.input`\r\n  height: 1.875rem;\r\n  border: none;\r\n  border-top-left-radius: 3px;\r\n  border-bottom-left-radius: 3px;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  background: ${({ theme }) => theme.inputBody};\r\n  color: ${({ theme }) => theme.text};\r\n  &::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  &:focus {\r\n    outline: 2px solid ${palette.indigo[9]};\r\n  }\r\n`;\r\n\r\n// 검색 컴포넌트 드롭다운 버튼\r\nconst SearchBtn = styled(Link)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.btnSearchBody};\r\n  color: ${({ theme }) => theme.text};\r\n  border-top-right-radius: 3px;\r\n  border-bottom-right-radius: 3px;\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n`;\r\n\r\n// 기타메뉴 드롭다운 컴포넌트\r\nconst EtcDropDown = ({ state }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu\">\r\n        <div className=\"all-menu\">\r\n          <p>MAIN MENU</p>\r\n          <ul>\r\n            <Link to=\"/w\">\r\n              <li>WIKI</li>\r\n            </Link>\r\n            <Link to=\"/blog\">\r\n              <li>blog</li>\r\n            </Link>\r\n          </ul>\r\n          <hr />\r\n        </div>\r\n        <ul className=\"etc-menu\">\r\n          <Link to=\"/wiki/request\">\r\n            <li>작성이 필요한 문서[WIKI]</li>\r\n          </Link>\r\n          {/* <li>외부사이트 검색(구현 중...)</li>\r\n          <li>바코드 / QR코드 만들기(구현 중...)</li>\r\n          <li>실시간 검색어 순위(구현 중...)</li>\r\n          <li>TODO(구현 중...)</li> */}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nconst MemoizedEtcDropDown = React.memo(EtcDropDown);\r\n\r\n// 검색 컴포넌트 드롭다운 처리\r\nconst SearchDropDown = ({ state, currentPath }) => {\r\n  return (\r\n    state && (\r\n      <SearchInputPackage\r\n        type=\"dropdown dropdown-search-input\"\r\n        currentPath={currentPath}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\n// 유저 정보 드롭다운\r\nconst ProfileInfo = ({ user }) => {\r\n  return (\r\n    <div className=\"profile-menu\">\r\n      <p>{user.name}</p>\r\n      <ul>\r\n        <Link to={'/mypage'}>\r\n          <li className=\"profile-menu-mypage\">My Page</li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 옵션 메뉴 드롭다운\r\nconst OptionMenu = ({ isDarkTheme, handleDarkThemeToggle }) => {\r\n  const useStyles = makeStyles(() => ({\r\n    darkTheme: { fontFamily: 'Raleway' },\r\n  }));\r\n  const classes = useStyles();\r\n  // 다크 모드 상태 저장\r\n  const [darkTheme, setDarkTheme] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isDarkTheme) {\r\n      setDarkTheme(true);\r\n    }\r\n  }, [isDarkTheme]);\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Typography component=\"div\">\r\n          <Grid\r\n            component=\"label\"\r\n            container\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            style={{\r\n              fontSize: '0.9rem',\r\n              fontFamily: 'sans-serif',\r\n              letterSpacing: '0',\r\n            }}\r\n          >\r\n            <Grid className={classes.darkTheme} item>\r\n              DARK THEME\r\n            </Grid>\r\n            <Grid item>\r\n              <DarkThemeSwitch\r\n                checked={darkTheme}\r\n                onChange={() => {\r\n                  handleDarkThemeToggle(darkTheme);\r\n                  setDarkTheme(!darkTheme);\r\n                }}\r\n                name=\"darkTheme\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\n// 로그아웃 메뉴\r\nconst LogoutMenu = ({ onLogout, currentPath }) => (\r\n  <ul className=\"logout-menu\">\r\n    <Link to={currentPath} onClick={onLogout}>\r\n      <li>로그아웃</li>\r\n    </Link>\r\n  </ul>\r\n);\r\n\r\n// 로그인 상태일 때 옵션 메뉴\r\nconst UserDropDown = ({\r\n  state,\r\n  user,\r\n  onLogout,\r\n  isDarkTheme,\r\n  handleDarkThemeToggle,\r\n  currentPath,\r\n}) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <ProfileInfo user={user} />\r\n        <hr />\r\n        <OptionMenu\r\n          isDarkTheme={isDarkTheme}\r\n          handleDarkThemeToggle={handleDarkThemeToggle}\r\n        />\r\n        <hr />\r\n        <LogoutMenu onLogout={onLogout} currentPath={currentPath} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\n// 비로그인 상태일 때 옵션 메뉴\r\nconst NoneUserDropDown = ({ state, isDarkTheme, handleDarkThemeToggle }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <OptionMenu\r\n          isDarkTheme={isDarkTheme}\r\n          handleDarkThemeToggle={handleDarkThemeToggle}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\n// 검색 input과 액션 버튼을 패키징\r\nconst SearchInputPackage = ({\r\n  type,\r\n  searchQuery,\r\n  handleSearchInput,\r\n  handleSearchKeyUp,\r\n}) => (\r\n  <div className={type} tabIndex=\"-1\">\r\n    <SearchInputWrapper>\r\n      <SearchInput\r\n        placeholder=\"검색\"\r\n        value={searchQuery}\r\n        onChange={handleSearchInput}\r\n        onKeyUp={(event) => {\r\n          if (event.keyCode === 13) {\r\n            handleSearchKeyUp(searchQuery);\r\n          }\r\n        }}\r\n      />\r\n    </SearchInputWrapper>\r\n    <SearchBtn to={`/search?query=${searchQuery}`}>\r\n      <FontAwesomeIcon icon=\"search\" />\r\n    </SearchBtn>\r\n  </div>\r\n);\r\n\r\n// Header는 position 처리했으므로 공간을 띄워준다\r\nconst Spacer = styled.div`\r\n  height: 3rem;\r\n`;\r\n\r\nconst Header = ({\r\n  user,\r\n  onLogout,\r\n  isDarkTheme,\r\n  currentPath,\r\n  searchQuery,\r\n  handleSearchInput,\r\n  handleSearchKeyUp,\r\n  handleDarkThemeToggle,\r\n}) => {\r\n  library.add([faSearch, faEllipsisH, faEllipsisV, faUserCircle]);\r\n  // 드롭다운 관련 핸들러\r\n  const [etc, setEtc] = useState(false);\r\n  const [search, setSearch] = useState(false);\r\n  const [userinfo, setUserinfo] = useState(false);\r\n  const [noneuser, setNoneUser] = useState(false);\r\n\r\n  const handleEtcToggle = useCallback(() => {\r\n    setEtc((prevOpen) => !prevOpen);\r\n  }, []);\r\n  const handleEtcClose = useCallback(() => {\r\n    setEtc(false);\r\n  }, []);\r\n  const handleSearchToggle = useCallback(() => {\r\n    setSearch((prevOpen) => !prevOpen);\r\n  }, []);\r\n  const handleSearchClose = useCallback(() => {\r\n    setSearch(false);\r\n  }, []);\r\n  const handleUserInfoToggle = useCallback(() => {\r\n    setUserinfo((prevOpen) => !prevOpen);\r\n  }, []);\r\n  const handleUserInfoClose = useCallback(() => {\r\n    setUserinfo(false);\r\n  }, []);\r\n  const handleNoneUserToggle = useCallback(() => {\r\n    setNoneUser((prevOpen) => !prevOpen);\r\n  }, []);\r\n  const handleNoneUserClose = useCallback(() => {\r\n    setNoneUser(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\" className=\"logo\">\r\n            MAKE UP HARA\r\n          </Link>\r\n          <div className=\"menu\">\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/w\">WIKI</Link>\r\n            </Menu>\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/blog\">Blog</Link>\r\n            </Menu>\r\n            <ClickAwayListener onClickAway={handleEtcClose}>\r\n              <Menu>\r\n                <Link\r\n                  to={currentPath}\r\n                  onClick={handleEtcToggle}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </Link>\r\n                <MemoizedEtcDropDown state={etc} />\r\n              </Menu>\r\n            </ClickAwayListener>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-mid\">\r\n          <SearchResponsive>\r\n            <SearchInputPackage\r\n              type=\"search-input\"\r\n              searchQuery={searchQuery}\r\n              handleSearchInput={handleSearchInput}\r\n              handleSearchKeyUp={handleSearchKeyUp}\r\n            />\r\n          </SearchResponsive>\r\n        </div>\r\n        <div className=\"header-rigit\">\r\n          <SearchResponsive\r\n            style={{\r\n              display: 'inherit',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ClickAwayListener onClickAway={handleSearchClose}>\r\n              <div className=\"search-btn\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleSearchToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"search\" />\r\n                </Link>\r\n                <SearchDropDown state={search} currentPath={currentPath} />\r\n              </div>\r\n            </ClickAwayListener>\r\n          </SearchResponsive>\r\n          {user ? (\r\n            <ClickAwayListener onClickAway={handleUserInfoClose}>\r\n              <div className=\"user-info\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleUserInfoToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"user-circle\" size=\"lg\" />\r\n                </Link>\r\n                <UserDropDown\r\n                  state={userinfo}\r\n                  user={user}\r\n                  onLogout={onLogout}\r\n                  isDarkTheme={isDarkTheme}\r\n                  handleDarkThemeToggle={handleDarkThemeToggle}\r\n                  currentPath={currentPath}\r\n                />\r\n              </div>\r\n            </ClickAwayListener>\r\n          ) : (\r\n            <div className=\"none-user\">\r\n              <ClickAwayListener onClickAway={handleNoneUserClose}>\r\n                <div className=\"\">\r\n                  <Link to={currentPath} onClick={handleNoneUserToggle}>\r\n                    <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n                  </Link>\r\n                  <NoneUserDropDown\r\n                    state={noneuser}\r\n                    isDarkTheme={isDarkTheme}\r\n                    handleDarkThemeToggle={handleDarkThemeToggle}\r\n                  />\r\n                </div>\r\n              </ClickAwayListener>\r\n              <Button className=\"btn-sign-in\" transparent=\"true\" to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../module/redux/user';\r\nimport { setTheme } from '../../module/redux/theme';\r\nimport Header from '../../components/common/Header';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { changeInput } from '../../module/redux/search';\r\nimport loadable from '@loadable/component';\r\n\r\nconst AuthTemplate = loadable(() =>\r\n  import('../../components/auth/AuthTemplate'),\r\n);\r\nconst LoginForm = loadable(() => import('../../containers/auth/LoginForm'), {});\r\nconst RegisterForm = loadable(() =>\r\n  import('../../containers/auth/RegisterForm'),\r\n);\r\n\r\nconst HeaderContainer = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { user, isDarkTheme, searchQuery } = useSelector(\r\n    ({ user, theme, search }) => ({\r\n      user: user.user,\r\n      isDarkTheme: theme.isDarkTheme,\r\n      searchQuery: search.query,\r\n    }),\r\n  );\r\n\r\n  const currentPath = location.pathname + location.search;\r\n\r\n  const onLogout = useCallback(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n\r\n  const handleSearchKeyUp = useCallback(\r\n    (searchQuery) => {\r\n      history.push(`/search?query=${searchQuery}`);\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const handleSearchInput = useCallback(\r\n    (event) => {\r\n      dispatch(changeInput(event.target.value));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const handleDarkThemeToggle = useCallback(\r\n    (state) => {\r\n      dispatch(setTheme(!state));\r\n      try {\r\n        // 로컬스토리지에 다크모드 상태값 저장\r\n        localStorage.setItem('darkTheme', !state + '');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // 사용자 인증 관련 컴포넌트를 미리 로딩\r\n  useEffect(() => {\r\n    AuthTemplate.preload();\r\n    LoginForm.preload();\r\n    RegisterForm.preload();\r\n  }, []);\r\n\r\n  return (\r\n    <Header\r\n      user={user}\r\n      onLogout={onLogout}\r\n      isDarkTheme={isDarkTheme}\r\n      currentPath={currentPath}\r\n      searchQuery={searchQuery}\r\n      handleSearchInput={handleSearchInput}\r\n      handleSearchKeyUp={handleSearchKeyUp}\r\n      handleDarkThemeToggle={handleDarkThemeToggle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import styled from 'styled-components';\r\n\r\n/**\r\n * 다크모드 활성화에 따른 배경색 변경을 위한 컴포넌트\r\n */\r\n\r\nconst BodyBlock = styled.div`\r\n  position: fixed;\r\n  top: ${(props) => (props.includeHeader ? '3rem' : 0)};\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: ${({ theme }) => theme.body};\r\n  z-index: -1;\r\n`;\r\n\r\nexport default BodyBlock;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst MainContainer = loadable(() =>\r\n  import('../../containers/main/MainContainer'),\r\n);\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <MainContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport loadable from '@loadable/component';\r\n\r\nconst EditorContainer = loadable(() =>\r\n  import('../../containers/post/write/EditorContainer'),\r\n);\r\nconst TagBoxContainer = loadable(() =>\r\n  import('../../containers/post/write/TagBoxContainer'),\r\n);\r\nconst WriteActionButtonsContainer = loadable(() =>\r\n  import('../../containers/post/write/WriteActionButtonsContainer'),\r\n);\r\nconst EditorFooter = loadable(() =>\r\n  import('../../components/common/editor/EditorFooter'),\r\n);\r\n\r\nconst PostWritePage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>POST 작성 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <TagBoxContainer />\r\n      <WriteActionButtonsContainer />\r\n      <EditorFooter />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(PostWritePage);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PostViewerContainer = loadable(() =>\r\n  import('../../containers/post/PostViewerContainer'),\r\n);\r\n\r\nconst PostPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PostListContainer = loadable(() =>\r\n  import('../../containers/post/PostListContainer'),\r\n);\r\n\r\nconst PostListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostListPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport LoginForm from '../../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>로그인 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport RegisterForm from '../../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>회원가입 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithNaver } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithNaverPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, state, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_NAVER_CLIENT_SECRET;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithNaver({ client_id, client_secret, code, state }));\r\n  }, [dispatch, client_id, client_secret, code, state]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithNaverPage);\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithKakao } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithKakaoPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_KAKAO_CLIENT_SECRET;\r\n  const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithKakao({ client_id, client_secret, redirect_uri, code }));\r\n  }, [dispatch, client_id, client_secret, code, redirect_uri]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithKakaoPage);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst WikiViewerContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiViewerContainer'),\r\n);\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\n\r\nconst WikiPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiPage;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst EditorContainer = loadable(() =>\r\n  import('../../containers/wiki/edit/EditorContainer'),\r\n);\r\nconst EditorFooter = loadable(() =>\r\n  import('../../components/common/editor/EditorFooter'),\r\n);\r\nconst WriteActionButtonsContainer = loadable(() =>\r\n  import('../../containers/wiki/edit/WriteActionButtonsContainer'),\r\n);\r\n\r\nconst WikiEditPage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>WIKI 에디터 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <EditorFooter type=\"wiki\" />\r\n      <WriteActionButtonsContainer />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiEditPage);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst WikiRequestContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiRequestContainer'),\r\n);\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\n\r\nconst WikiRequestPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>작성이 필요한 문서 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiRequestContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiRequestPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\nconst WikiHistoryContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiHistoryContainer'),\r\n);\r\n\r\nconst WikiHistoryPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>문서 역사 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiHistoryContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiHistoryPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\nconst WikiListContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiListContainer'),\r\n);\r\n\r\nconst WikiListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiListPage;\r\n","import styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\n\r\n/**\r\n * 최상의 flex 컴포넌트\r\n */\r\n\r\nconst FlexContentBlock = styled(Responsive)`\r\n  display: flex;\r\n  flex-direction: ${(props) =>\r\n    props.direction === 'column' ? 'column' : 'row'};\r\n`;\r\n\r\nexport default FlexContentBlock;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\nconst ProfileContainer = loadable(() =>\r\n  import('../../containers/profile/ProfileContainer'),\r\n);\r\n\r\nconst MyPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>MY PAGE - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ProfileContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst SecurityContainer = loadable(() =>\r\n  import('../../containers/profile/SecurityContainer'),\r\n);\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\n\r\nconst SecurityPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>보안 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <SecurityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SecurityPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\nconst ActivityContainer = loadable(() =>\r\n  import('../../containers/profile/ActivityContainer'),\r\n);\r\n\r\nconst ActivityPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>활동 기록 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ActivityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst LocalSearchContainer = loadable(() =>\r\n  import('../../containers/search/LocalSearchContainer'),\r\n);\r\n\r\nconst LocalSearchPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <LocalSearchContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LocalSearchPage;\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme } from './lib/styles/theme';\r\nimport { darkTheme } from './lib/styles/theme';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setTheme } from './module/redux/theme';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport MainPage from './pages/main/MainPage';\r\nimport PostWritePage from './pages/post/PostWritePage';\r\nimport PostPage from './pages/post/PostPage';\r\nimport PostListPage from './pages/post/PostListPage';\r\nimport LoginPage from './pages/auth/LoginPage';\r\nimport RegisterPage from './pages/auth/RegisterPage';\r\nimport LoginWithNaverPage from './pages/auth/callback/LoginWithNaverPage';\r\nimport LoginWithKakaoPage from './pages/auth/callback/LoginWithKakaoPage';\r\nimport WikiPage from './pages/wiki/WikiPage';\r\nimport WikiEditPage from './pages/wiki/WikiEditPage';\r\nimport WikiRequestPage from './pages/wiki/WikiRequestPage';\r\nimport WikiHistoryPage from './pages/wiki/WikiHistoryPage';\r\nimport WikiListPage from './pages/wiki/WikiListPage';\r\nimport MyPage from './pages/profile/MyPage';\r\nimport SecurityPage from './pages/profile/SecurityPage';\r\nimport ActivityPage from './pages/profile/ActivityPage';\r\nimport LocalSearchPage from './pages/search/LocalSearchPage';\r\n\r\nconst App = () => {\r\n  const { isDarkTheme } = useSelector(({ theme }) => ({\r\n    isDarkTheme: theme.isDarkTheme,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const storageTheme = localStorage.getItem('darkTheme');\r\n      if (storageTheme === 'true') {\r\n        dispatch(setTheme(true));\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\r\n      <>\r\n        <Helmet>\r\n          <title>MAKE UP HARA</title>\r\n        </Helmet>\r\n        <Route component={MainPage} path={['/']} exact />\r\n        <Route component={LoginPage} path={'/login'} exact />\r\n        <Route component={LoginWithNaverPage} path={'/login/naver'} />\r\n        <Route component={LoginWithKakaoPage} path={'/login/kakao'} />\r\n        <Route component={RegisterPage} path={'/register'} />\r\n        <Route\r\n          component={PostListPage}\r\n          path={['/blog', '/blog/@:username']}\r\n          exact\r\n        />\r\n        <Route component={PostWritePage} path={'/blog/write'} />\r\n        <Route component={PostPage} path={'/blog/@:username/:postId'} exact />\r\n        <Route component={WikiPage} path={['/w', '/w/:docName']} exact />\r\n        <Route component={WikiEditPage} path={'/wiki/edit'} exact />\r\n        <Route component={WikiRequestPage} path={'/wiki/request'} exact />\r\n        <Route\r\n          component={WikiHistoryPage}\r\n          path={'/wiki/history/:docName'}\r\n          exact\r\n        />\r\n        <Route component={WikiListPage} path={'/wiki/list'} exact />\r\n        <Route component={MyPage} path={'/mypage'} exact />\r\n        <Route component={SecurityPage} path={'/mypage/security'} exact />\r\n        <Route component={ActivityPage} path={'/mypage/activity'} exact />\r\n        <Route component={LocalSearchPage} path={'/search'} exact />\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport post, { postSaga } from './post';\r\nimport wiki, { wikiSaga } from './wiki';\r\nimport theme from './theme';\r\nimport search from './search';\r\n\r\n/* root reducer */\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n  theme,\r\n  post,\r\n  wiki,\r\n  search,\r\n});\r\n\r\n/* root saga */\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), postSaga(), wikiSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer, { rootSaga } from './module/redux/index';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport { tempSetUser, check } from './module/redux/user';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n  // applyMiddleware(sagaMiddleware);\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\nconst loadUser = () => {\r\n  try {\r\n    const user = sessionStorage.getItem('user');\r\n    if (!user) return;\r\n    store.dispatch(tempSetUser(user));\r\n    store.dispatch(check());\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\nloadUser();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <HelmetProvider>\r\n        <App />\r\n      </HelmetProvider>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","const palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n  red: [\r\n    '#fff5f5',\r\n    '#ffe3e3',\r\n    '#ffc9c9',\r\n    '#ffa8a8',\r\n    '#ff8787',\r\n    '#ff6b6b',\r\n    '#fa5252',\r\n    '#f03e3e',\r\n    '#e03131',\r\n    '#c92a2a',\r\n  ],\r\n  violet: [\r\n    '#f3f0ff',\r\n    '#e5dbff',\r\n    '#d0bfff',\r\n    '#b197fc',\r\n    '#9775fa',\r\n    '#845ef7',\r\n    '#7950f2',\r\n    '#7048e8',\r\n    '#6741d9',\r\n    '#5f3dc4',\r\n  ],\r\n  indigo: [\r\n    '#edf2ff',\r\n    '#dbe4ff',\r\n    '#bac8ff',\r\n    '#91a7ff',\r\n    '#748ffc',\r\n    '#5c7cfa',\r\n    '#4c6ef5',\r\n    '#4263eb',\r\n    '#3b5bdb',\r\n    '#364fc7',\r\n  ],\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '#0b7285',\r\n  ],\r\n  yellow: [\r\n    '#fff9db',\r\n    '#fff3bf',\r\n    '#ffec99',\r\n    '#ffe066',\r\n    '#ffd43b',\r\n    '#fcc419',\r\n    '#fab005',\r\n    '#f59f00',\r\n    '#f08c00',\r\n    '#e67700',\r\n  ]\r\n};\r\n\r\nexport default palette;","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, debounce } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n  'auth/REGISTER',\r\n);\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n  'auth/LOGIN',\r\n);\r\nconst [\r\n  LOGIN_WITH_GOOGLE,\r\n  LOGIN_WITH_GOOGLE_SUCCESS,\r\n  LOGIN_WITH_GOOGLE_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_GOOGLE');\r\nconst [\r\n  LOGIN_WITH_NAVER,\r\n  LOGIN_WITH_NAVER_SUCCESS,\r\n  LOGIN_WITH_NAVER_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_NAVER');\r\nconst [\r\n  LOGIN_WITH_KAKAO,\r\n  LOGIN_WITH_KAKAO_SUCCESS,\r\n  LOGIN_WITH_KAKAO_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_KAKAO');\r\n// api - check username\r\nconst [\r\n  CHECK_EXIST_USERNAME,\r\n  CHECK_EXIST_USERNAME_SUCCESS,\r\n  CHECK_EXIST_USERNAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_USERNAME');\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_NAME');\r\n\r\n/* action */\r\nexport const changeFieid = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // register, login\r\n    key, // username, password, passwordConfirm\r\n    value, // 변경 하려는 값\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\nexport const register = createAction(\r\n  REGISTER,\r\n  ({ username, password, name }) => ({\r\n    username,\r\n    password,\r\n    name,\r\n  }),\r\n);\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const loginWithGoogle = createAction(\r\n  LOGIN_WITH_GOOGLE,\r\n  ({ id_token }) => ({ id_token }),\r\n);\r\nexport const loginWithNaver = createAction(\r\n  LOGIN_WITH_NAVER,\r\n  ({ client_id, client_secret, code, state }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  }),\r\n);\r\nexport const loginWithKakao = createAction(\r\n  LOGIN_WITH_KAKAO,\r\n  ({ client_id, client_secret, code, redirect_uri }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  }),\r\n);\r\nexport const checkExistUsername = createAction(\r\n  CHECK_EXIST_USERNAME,\r\n  (username) => username,\r\n);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\n\r\n/* redux-saga */\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nconst loginWithGoogleSaga = createRequestSaga(\r\n  LOGIN_WITH_GOOGLE,\r\n  authAPI.loginWithGoogle,\r\n);\r\nconst loginWithNaverSaga = createRequestSaga(\r\n  LOGIN_WITH_NAVER,\r\n  authAPI.loginWithNaver,\r\n);\r\nconst loginWithKakaoSaga = createRequestSaga(\r\n  LOGIN_WITH_KAKAO,\r\n  authAPI.loginWithKakao,\r\n);\r\nconst checkExistUsernameSaga = createRequestSaga(\r\n  CHECK_EXIST_USERNAME,\r\n  userAPI.checkExistUsername,\r\n);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(LOGIN_WITH_GOOGLE, loginWithGoogleSaga);\r\n  yield takeLatest(LOGIN_WITH_NAVER, loginWithNaverSaga);\r\n  yield takeLatest(LOGIN_WITH_KAKAO, loginWithKakaoSaga);\r\n  yield debounce(500, CHECK_EXIST_USERNAME, checkExistUsernameSaga);\r\n  yield debounce(500, CHECK_EXIST_NAME, checkExistNameSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    name: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  checkExistUsernameResult: null,\r\n  checkExistUsernameResultError: null,\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  auth: null,\r\n  authError: null,\r\n  registerResult: null,\r\n  registerResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n      registerResult: null,\r\n      registerResultError: null, // 폼 전환 시 회원인증 에러 초기화\r\n    }),\r\n    [REGISTER_SUCCESS]: (state, { payload: registerResult }) => ({\r\n      ...state,\r\n      registerResultError: null,\r\n      registerResult,\r\n    }),\r\n    [REGISTER_FAILURE]: (state, { payload: registerResultError }) => ({\r\n      ...state,\r\n      registerResult: null,\r\n      registerResultError,\r\n    }),\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      auth: null,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      auth: null,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_NAVER_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_NAVER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      auth: null,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      auth: null,\r\n      authError: error,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_SUCCESS]: (\r\n      state,\r\n      { payload: checkExistUsernameResult },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult,\r\n      checkExistUsernameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistUsernameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError,\r\n    }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('user/CHECK_EXIST_NAME');\r\nconst CHANGE_FIELD = 'user/CHANGE_FIELD';\r\n// api- update name\r\nconst [\r\n  UPDATE_NAME,\r\n  UPDATE_NAME_SUCCESS,\r\n  UPDATE_NAME_FAILURE,\r\n] = createRequestActionTypes('user/UPDATE_NAME');\r\nconst INITIALIZE_UPDATE_NAME = 'user/INITIALIZE_UPDATE_NAME';\r\n// api - change password\r\nconst [\r\n  CHANGE_PASSWORD,\r\n  CHANGE_PASSWORD_SUCCESS,\r\n  CHANGE_PASSWORD_FAILURE,\r\n] = createRequestActionTypes('user/CHANGE_PASSWORD');\r\nconst INITIALIZE_CHANGE_PASSWORD = 'user/INITIALIZE_CHANGE_PASSWORD';\r\n\r\n/* action */\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\nexport const tempSetUser = createAction(TEMP_SET_USER);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({ form, key, value }),\r\n);\r\nexport const updateName = createAction(UPDATE_NAME, ({ id, name }) => ({\r\n  id,\r\n  name,\r\n}));\r\nexport const initializeUpdateName = createAction(INITIALIZE_UPDATE_NAME);\r\nexport const changePassword = createAction(\r\n  CHANGE_PASSWORD,\r\n  ({ id, password, newPassword }) => ({ id, password, newPassword }),\r\n);\r\nexport const initializeChangePassword = createAction(\r\n  INITIALIZE_CHANGE_PASSWORD,\r\n);\r\n\r\n/* redux-saga */\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\nconst updateNameSaga = createRequestSaga(UPDATE_NAME, userAPI.updateName);\r\nconst changePasswordSaga = createRequestSaga(\r\n  CHANGE_PASSWORD,\r\n  userAPI.changePassword,\r\n);\r\n\r\nfunction* checkFailureSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n  yield takeLatest(CHECK_EXIST_NAME, checkExistNameSaga);\r\n  yield takeLatest(UPDATE_NAME, updateNameSaga);\r\n  yield takeLatest(CHANGE_PASSWORD, changePasswordSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n  profile: {\r\n    name: '',\r\n  },\r\n  password: {\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  updateUser: null,\r\n  updateUserError: null,\r\n  changePasswordResult: null,\r\n  changePasswordError: null,\r\n};\r\n\r\n/* reducer */\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError,\r\n    }),\r\n    [UPDATE_NAME_SUCCESS]: (state, { payload: updateUser }) => ({\r\n      ...state,\r\n      updateUser,\r\n      updateUserError: null,\r\n    }),\r\n    [UPDATE_NAME_FAILURE]: (state, { payload: updateUserError }) => ({\r\n      ...state,\r\n      updateUser: null,\r\n      updateUserError,\r\n    }),\r\n    [INITIALIZE_UPDATE_NAME]: (state) => ({\r\n      ...state,\r\n      updateUser: null,\r\n      updateUserError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHANGE_PASSWORD_SUCCESS]: (state, { payload: changePasswordResult }) => ({\r\n      ...state,\r\n      changePasswordResult: !!changePasswordResult,\r\n      changePasswordError: null,\r\n    }),\r\n    [CHANGE_PASSWORD_FAILURE]: (state, { payload: changePasswordError }) => ({\r\n      ...state,\r\n      changePasswordResult: false,\r\n      changePasswordError,\r\n    }),\r\n    [INITIALIZE_CHANGE_PASSWORD]: (state) => ({\r\n      ...state,\r\n      changePasswordResult: null,\r\n      changePasswordError: null,\r\n      password: {\r\n        curPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import client from './client';\r\n\r\nexport const register = ({ username, password, name }) =>\r\n  client.post('/api/auth/register', { username, password, name });\r\n\r\nexport const login = ({ username, password }) =>\r\n  client.post('/api/auth/login', { username, password });\r\n\r\nexport const loginWithGoogle = ({ id_token }) =>\r\n  client.post('/api/auth/login/google', { id_token });\r\n\r\nexport const loginWithNaver = ({ client_id, client_secret, code, state }) =>\r\n  client.post('/api/auth/login/naver', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  });\r\n\r\nexport const loginWithKakao = ({\r\n  client_id,\r\n  client_secret,\r\n  code,\r\n  redirect_uri,\r\n}) =>\r\n  client.post('/api/auth/login/kakao', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  });\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const writePost = ({ title, body, tags }) =>\r\n  client.post('/api/post/write', { title, body, tags });\r\n\r\nexport const readPost = (id) => client.get(`/api/post/${id}`);\r\n\r\nexport const updatePost = ({ id, title, body, tags }) =>\r\n  client.patch(`/api/post/${id}`, { title, body, tags });\r\n\r\nexport const removePost = (id) => client.delete(`/api/post/${id}`);\r\n\r\nexport const getList = ({ page, tag, username, query, block, oldest, day }) => {\r\n  const queryString = qs.stringify({\r\n    page,\r\n    tag,\r\n    username,\r\n    query,\r\n    block,\r\n    oldest,\r\n    day,\r\n  });\r\n  return client.get(`/api/post/list?${queryString}`);\r\n};\r\n\r\nexport const readComment = ({ id, page, block }) => {\r\n  const queryString = qs.stringify({ page, block });\r\n  return client.get(`/api/post/${id}/comment?${queryString}`);\r\n};\r\n\r\nexport const writeComment = ({ id, body }) =>\r\n  client.post(`/api/post/${id}/comment`, { body });\r\n\r\nexport const updateComment = ({ id, commentId, body }) =>\r\n  client.patch(`/api/post/${id}/comment/${commentId}`, { body });\r\n\r\nexport const deleteComment = ({ id, commentId }) =>\r\n  client.delete(`/api/post/${id}/comment/${commentId}`);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 소셜 로그인 버튼에서 css를 사용하기 위해 export\r\n * 소셜 로그인은 ref를 설정해주어야 하기 때문에 prop 전달이 어려움\r\n */\r\n\r\nexport const buttonStyle = css`\r\n  border: none;\r\n  border-radius: 2px;\r\n  font-size: 1rem;\r\n  font-family:'NanumBarunGothic';\r\n  font-weight: normal;\r\n  padding: 0.25rem 1rem;\r\n  color: ${({ theme }) => theme.btnText};\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: ${({ theme }) => theme.btnBody};\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.btnHoverBody};\r\n  }\r\n\r\n  &:disabled,\r\n  &[disabled] {\r\n    cursor: default;\r\n    background: ${({ theme }) => theme.btnDisableBody};\r\n    color: ${({ theme }) => theme.btnDisableColor};\r\n    &:hover{\r\n      background: ${({ theme }) => theme.btnDisableBody};\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      display: inline-block;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.indigo &&\r\n    css`\r\n      background: ${palette.indigo[9]};\r\n      &:hover {\r\n        background: ${palette.indigo[7]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.violet &&\r\n    css`\r\n      background: ${palette.violet[9]};\r\n      color: #fff;\r\n      &:hover {\r\n        background: ${palette.violet[7]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.red &&\r\n    css`\r\n      background: ${palette.red[8]};\r\n      &:hover {\r\n        background: ${palette.red[6]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[6]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.yellow &&\r\n    css`\r\n      background: ${palette.yellow[5]};\r\n      &:hover {\r\n        background: ${palette.yellow[3]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.transparent &&\r\n    css`\r\n      background: none;\r\n      color: ${({ theme }) => theme.text};\r\n      border: 1px solid ${({ theme }) => theme.text};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.btnTransparentHoverBody};\r\n        color: ${({ theme }) => theme.btnTransparentHoverText};\r\n      }\r\n    `}\r\n    \r\n  ${(props) =>\r\n    props.themeColor &&\r\n    css`\r\n      background: ${({ theme }) => theme.themeColorBody};\r\n      color: ${palette.gray[1]};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.themeColorHoverBody};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? <StyledLink {...props} /> : <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","import client from './client';\r\n\r\nexport const checkExistUsername = ({ username }) =>\r\n  client.post('/api/user/check/username', { username });\r\n\r\nexport const checkExistName = ({ username, name }) =>\r\n  client.post('/api/user/check/name', { username, name });\r\n\r\nexport const updateName = ({ id, name }) =>\r\n  client.patch('/api/user/profile', { id, name });\r\n\r\nexport const changePassword = ({ id, password, newPassword }) =>\r\n  client.patch('/api/user/password', { id, password, newPassword });\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/**\r\n * viewport에 따른 컨테이너 width 제어\r\n */\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  padding: 0, 1rem;\r\n  width: 986px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 748px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 98%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({ ...state, [action.payload]: true }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_INPUT = 'search/CHANGE_INPUT';\r\nconst CHANGE_OPTION = 'search/CHANGE_OPTION';\r\nconst INITIALIZE = 'search/INITIALIZE';\r\nconst INITIALIZE_OPTION = 'search/INITIALIZE_OPTION';\r\n\r\n/* action */\r\nexport const changeInput = createAction(CHANGE_INPUT, (value) => value);\r\nexport const changeOption = createAction(CHANGE_OPTION, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const initializeOption = createAction(INITIALIZE_OPTION);\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  query: '',\r\n  option: {\r\n    totalSort: '',\r\n    totalTerm: '',\r\n    wikiSort: '',\r\n    wikilength: '',\r\n    blogSort: '',\r\n    blogTerm: '',\r\n  },\r\n};\r\n\r\n/* reducer */\r\nconst search = handleActions(\r\n  {\r\n    [CHANGE_INPUT]: (state, { payload: value }) => ({ ...state, query: value }),\r\n    [CHANGE_OPTION]: (state, { payload: { key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft.option[key] = value;\r\n      }),\r\n    [INITIALIZE]: () => initialState,\r\n    [INITIALIZE_OPTION]: (state) => ({\r\n      ...state,\r\n      option: initialState.option,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default search;\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../module/redux/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport const createRequestSaga = (type, request) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function* (action) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n        meta: response,\r\n      });\r\n    } catch (error) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: error,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type));\r\n  };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 로그인/회원가입 공통 컴포넌트\r\n */\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: ${({ theme }) => theme.loginBody};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    text-align: center;\r\n    padding-bottom: 2rem;\r\n    font-size: 1.25rem;\r\n    letter-spacing: 1px;\r\n  }\r\n  .logo-area > a {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .logo-area > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  box-shadow: 0 0 8px\r\n    ${({ theme }) =>\r\n      theme.body === '#fff' ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.5)'};\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: ${({ theme }) => theme.body};\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <ContentBox>\r\n        <div className=\"logo-area\">\r\n          <Link to=\"/\">MAKE UP HARA</Link>\r\n        </div>\r\n        {children}\r\n      </ContentBox>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React, { useEffect, useRef, useCallback } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Button, { buttonStyle } from '../common/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport palette from '../../lib/styles/open-color';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.text};\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.loginInputBorder};\r\n  }\r\n  .social-login {\r\n    button + a {\r\n      margin-top: 0.5rem;\r\n    }\r\n    a + button {\r\n      margin-top: 0.5rem;\r\n    }\r\n  }\r\n  input.possible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  input.impossible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    color: ${({ theme }) => theme.errorText};\r\n    font-size: 0.75rem;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 2px solid ${({ theme }) => theme.loginInputBorder};\r\n  padding-bottom: 0.5rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    border-bottom: 2px solid ${({ theme }) => theme.loginInputBorderFocus};\r\n    -webkit-transition: all 0.3s ease;\r\n    transition: all 0.3s ease;\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 1rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      text-decoration: underline !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst GoogleLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  border-radius: 0.375rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst socialBtnStyle = css`\r\n  border: none;\r\n  padding: 0;\r\n  display: block;\r\n  border-radius: 0.5rem;\r\n  img {\r\n    width: 100%;\r\n    display: flex;\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NaverLoginButton = styled.a`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst KakaoLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  signinGoogle: '구글로 로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${palette.red[9]};\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  error,\r\n  onSocialLogin,\r\n  validUsername,\r\n  validName,\r\n}) => {\r\n  const text = textMap[type];\r\n\r\n  // Login with Google\r\n  const googleLoginBtn = useRef(null);\r\n  const auth2 = useRef(null);\r\n\r\n  // Config Google Login API\r\n  const loadGoogleLoginApi = useCallback(() => {\r\n    // 로그인 버튼 이벤트 주입\r\n    const prepareLoginButton = () => {\r\n      auth2.current.attachClickHandler(\r\n        googleLoginBtn.current,\r\n        {},\r\n        (googleUser) => {\r\n          // const profile = googleUser.getBasicProfile();\r\n          // console.log('Token || ' + googleUser.getAuthResponse().id_token);\r\n          // console.log('ID: ' + profile.getId());\r\n          // console.log('Name: ' + profile.getName());\r\n          // console.log('Image URL: ' + profile.getImageUrl());\r\n          // console.log('Email: ' + profile.getEmail());\r\n\r\n          const id_token = googleUser.getAuthResponse().id_token;\r\n          onSocialLogin({ id_token });\r\n        },\r\n        (error) => {\r\n          // console.log(JSON.stringify(error, undefined, 2));\r\n        },\r\n      );\r\n    };\r\n\r\n    window['googleSDKLoaded'] = () => {\r\n      window['gapi'].load('auth2', () => {\r\n        auth2.current = window['gapi'].auth2.init({\r\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          cookiepolicy: 'single_host_origin',\r\n          scope: 'profile email',\r\n        });\r\n        prepareLoginButton();\r\n      });\r\n    };\r\n  }, [onSocialLogin]);\r\n\r\n  // 네이버 로그인 클릭 이벤트\r\n  const onNaverLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_NAVER_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_NAVER_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://nid.naver.com/oauth2.0/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // 카카오 로그인 클릭 이벤트\r\n  const onKakaoLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_KAKAO_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://kauth.kakao.com/oauth/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // Load Script\r\n  const loadScript = useCallback((document, script, id, srcValue) => {\r\n    const referenceNode = document.getElementsByTagName(script)[0];\r\n    if (document.getElementById(id)) {\r\n      return;\r\n    }\r\n    const googlejssdkNode = document.createElement(script);\r\n    googlejssdkNode.id = id;\r\n    googlejssdkNode.src = srcValue;\r\n    referenceNode.parentNode.insertBefore(googlejssdkNode, referenceNode);\r\n  }, []);\r\n\r\n  // 언마운트시 API 스크립트 제거\r\n  const removeApiScript = useCallback(() => {\r\n    const removeTag = (tagName, targetId) => {\r\n      const targetNode = document.getElementsByTagName(tagName);\r\n      [...targetNode].map(\r\n        (node) =>\r\n          node.src.indexOf(targetId) >= 0 && node.parentNode.removeChild(node),\r\n      );\r\n    };\r\n\r\n    removeTag('script', 'apis.google.com');\r\n\r\n    const removeJssdk = (id) => {\r\n      const sdkNode = document.getElementById(id);\r\n      if (sdkNode) {\r\n        sdkNode.parentNode.removeChild(sdkNode);\r\n      }\r\n    };\r\n\r\n    removeJssdk('google-jssdk');\r\n  }, []);\r\n\r\n  // 컴포넌트 업데이트시 소셜로그인 스크립트 로딩\r\n  // 언마운트시 스크립트 제거\r\n  useEffect(() => {\r\n    loadScript(\r\n      document,\r\n      'script',\r\n      'google-jssdk',\r\n      'https://apis.google.com/js/platform.js?onload=googleSDKLoaded',\r\n    );\r\n    loadGoogleLoginApi();\r\n\r\n    return () => {\r\n      removeApiScript();\r\n    };\r\n  }, [loadScript, removeApiScript, loadGoogleLoginApi]);\r\n\r\n  return (\r\n    <AuthFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          className={\r\n            type === 'register' &&\r\n            (validUsername.result === true\r\n              ? 'possible'\r\n              : validUsername.message !== '' && 'impossible')\r\n          }\r\n          name=\"username\"\r\n          placeholder=\"계정 이름\"\r\n          value={form.username}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' &&\r\n          validUsername.message &&\r\n          validUsername.message !== '' && (\r\n            <span className=\"invalid-message\">{validUsername.message}</span>\r\n          )}\r\n        <StyledInput\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          className={\r\n            type === 'register' &&\r\n            (form.password.length >= 8\r\n              ? 'possible'\r\n              : form.password !== '' && 'impossible')\r\n          }\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={form.password}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' &&\r\n          form.password.length < 8 &&\r\n          form.password.length > 0 && (\r\n            <span className=\"invalid-message\">8자 이상 입력해야 합니다.</span>\r\n          )}\r\n        {type === 'register' && (\r\n          <>\r\n            <StyledInput\r\n              type=\"password\"\r\n              autoComplete=\"new-password\"\r\n              className={\r\n                form.passwordConfirm.length >= 8 &&\r\n                form.passwordConfirm === form.password\r\n                  ? 'possible'\r\n                  : form.passwordConfirm !== '' && 'impossible'\r\n              }\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"비밀번호 확인\"\r\n              value={form.passwordConfirm}\r\n              onChange={onChange}\r\n            />\r\n            {form.passwordConfirm.length >= 8 &&\r\n              form.passwordConfirm !== form.password && (\r\n                <span className=\"invalid-message\">\r\n                  비밀번호가 일치하지 않습니다.\r\n                </span>\r\n              )}\r\n            <StyledInput\r\n              type=\"text\"\r\n              className={\r\n                type === 'register' &&\r\n                (validName.result === true\r\n                  ? 'possible'\r\n                  : validName.message !== '' && 'impossible')\r\n              }\r\n              name=\"name\"\r\n              placeholder=\"활동명\"\r\n              value={form.name}\r\n              onChange={onChange}\r\n            />\r\n            {type === 'register' &&\r\n              validName.message &&\r\n              validName.message !== '' && (\r\n                <span className=\"invalid-message\">{validName.message}</span>\r\n              )}\r\n          </>\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonWithMarginTop cyan fullWidth>\r\n          {text}\r\n        </ButtonWithMarginTop>\r\n      </form>\r\n      {type === 'login' && (\r\n        <div className=\"social-login\">\r\n          <hr />\r\n          <GoogleLoginButton fullWidth indigo ref={googleLoginBtn}>\r\n            <FontAwesomeIcon icon={faGoogle} />\r\n            {' ' + textMap['signinGoogle']}\r\n            <span> </span>\r\n          </GoogleLoginButton>\r\n          <NaverLoginButton transparent onClick={() => onNaverLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/naver_login_btn.png'}\r\n              alt=\"naver-login-btn\"\r\n            />\r\n          </NaverLoginButton>\r\n          <KakaoLoginButton transparent onClick={() => onKakaoLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/kakao_login_btn.png'}\r\n              alt=\"kakao-login-btn\"\r\n            />\r\n          </KakaoLoginButton>\r\n          <hr />\r\n        </div>\r\n      )}\r\n\r\n      <Footer>\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as wikiAPI from '../../lib/api/wiki';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// api - request list\r\nconst [\r\n  GET_REQUEST_LIST,\r\n  GET_REQUEST_LIST_SUCCESS,\r\n  GET_REQUEST_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_REQUEST_LIST');\r\n// edit - set title\r\nconst SET_TITLE = createRequestActionTypes('wiki/SET_TITLE');\r\n// edit - initialize\r\nconst INITIALIZE = 'wiki/INITIALIZE';\r\n// edit - change field\r\nconst CHANGE_FIELD = 'wiki/CHANGE_FIELD';\r\n// edit - write document\r\nconst [\r\n  WRITE_DOCUMENT,\r\n  WRITE_DOCUMENT_SUCCESS,\r\n  WRITE_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/WRITE_DOCUMENT');\r\n// api - read\r\nconst [\r\n  READ_DOCUMENT,\r\n  READ_DOCUMENT_SUCCESS,\r\n  READ_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/READ_DOCUMENT');\r\nconst UNLOAD_DOCUMENT = 'wiki/UNLOAD_DOCUMENT'; // 위키 문서 뷰 언마운트시 문서 정보 제거\r\nconst SET_ORIGINAL_DOCUMENT = 'wiki/SET_ORIGINAL_DOCUMENT'; // 위키 문서 편집 시 에디터에 문서 세팅\r\n// api - list\r\nconst [\r\n  GET_DOCUMENT_LIST,\r\n  GET_DOCUMENT_LIST_SUCCESS,\r\n  GET_DOCUMENT_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_LIST');\r\nconst UNLOAD_LIST = 'wiki/UNLOAD_LIST'; // 위키 리스트 뷰 언마운트시 document list 정보 제거\r\n// api - history list\r\nconst [\r\n  GET_HISTORY_LIST,\r\n  GET_HISTORY_LIST_SUCCESS,\r\n  GET_HISTORY_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_HISTORY_LIST');\r\n// api - search\r\nconst [\r\n  GET_SEARCH_LIST,\r\n  GET_SEARCH_LIST_SUCCESS,\r\n  GET_SEARCH_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_SEARCH_LIST');\r\n// api- search/direct\r\nconst [\r\n  GET_DIRECT_TITLE,\r\n  GET_DIRECT_TITLE_SUCCESS,\r\n  GET_DIRECT_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DIRECT_TITLE');\r\n// api - search/random\r\nconst [\r\n  GET_RANDOM_TITLE,\r\n  GET_RANDOM_TITLE_SUCCESS,\r\n  GET_RANDOM_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_RANDOM_TITLE');\r\n// api - document count\r\nconst [\r\n  GET_DOCUMENT_COUNT,\r\n  GET_DOCUMENT_COUNT_SUCCESS,\r\n  GET_DOCUMENT_COUNT_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_COUNT');\r\n// api = add barcode to document\r\nconst [\r\n  ADD_BARCODE_NUMBER,\r\n  ADD_BARCODE_NUMBER_SUCCESS,\r\n  ADD_BARCODE_NUMBER_FAILURE,\r\n] = createRequestActionTypes('wiki/ADD_BARCODE_NUMBER');\r\n\r\n/* action */\r\nexport const getRequestList = createAction(GET_REQUEST_LIST);\r\nexport const setTitle = createAction(SET_TITLE, (title) => title);\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writeDocument = createAction(WRITE_DOCUMENT, ({ id, body }) => ({\r\n  id,\r\n  body,\r\n}));\r\nexport const readDocument = createAction(READ_DOCUMENT, ({ id, r }) => ({\r\n  id,\r\n  r,\r\n}));\r\nexport const unloadDocument = createAction(UNLOAD_DOCUMENT);\r\nexport const setOriginalDocument = createAction(\r\n  SET_ORIGINAL_DOCUMENT,\r\n  (document) => document,\r\n);\r\nexport const getDocumentList = createAction(\r\n  GET_DOCUMENT_LIST,\r\n  (block) => block,\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\nexport const getHistoryList = createAction(GET_HISTORY_LIST, ({ id }) => ({\r\n  id,\r\n}));\r\nexport const getSearchList = createAction(\r\n  GET_SEARCH_LIST,\r\n  ({ query, oldest, shortest, longest, page, block }) => ({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  }),\r\n);\r\nexport const getDirectTitle = createAction(GET_DIRECT_TITLE, ({ query }) => ({\r\n  query,\r\n}));\r\nexport const getRandomTitle = createAction(GET_RANDOM_TITLE);\r\nexport const getDocumentCount = createAction(\r\n  GET_DOCUMENT_COUNT,\r\n  ({ username }) => ({ username }),\r\n);\r\nexport const addBarcodeNumber = createAction(\r\n  ADD_BARCODE_NUMBER,\r\n  ({ title, code }) => ({ title, code }),\r\n);\r\n\r\n/* redux-saga */\r\nconst getRequestListSaga = createRequestSaga(\r\n  GET_REQUEST_LIST,\r\n  wikiAPI.requestDocument,\r\n);\r\nconst writeDocumentSaga = createRequestSaga(\r\n  WRITE_DOCUMENT,\r\n  wikiAPI.writeDocument,\r\n);\r\nconst readDocumentSaga = createRequestSaga(READ_DOCUMENT, wikiAPI.readDocument);\r\nconst getDocumentListSaga = createRequestSaga(\r\n  GET_DOCUMENT_LIST,\r\n  wikiAPI.getDocumentList,\r\n);\r\nconst getHistoryListSaga = createRequestSaga(\r\n  GET_HISTORY_LIST,\r\n  wikiAPI.getHistoryList,\r\n);\r\nconst getSearchListSaga = createRequestSaga(\r\n  GET_SEARCH_LIST,\r\n  wikiAPI.getSearchList,\r\n);\r\nconst getDirectTitleSaga = createRequestSaga(\r\n  GET_DIRECT_TITLE,\r\n  wikiAPI.getDirectTitle,\r\n);\r\nconst getRandomTitleSaga = createRequestSaga(\r\n  GET_RANDOM_TITLE,\r\n  wikiAPI.getRandomTitle,\r\n);\r\nconst getDocumentCountSaga = createRequestSaga(\r\n  GET_DOCUMENT_COUNT,\r\n  wikiAPI.getDocumentCount,\r\n);\r\nconst addBarcodeNumberSaga = createRequestSaga(\r\n  ADD_BARCODE_NUMBER,\r\n  wikiAPI.addBarcodeNumber,\r\n);\r\n\r\nexport function* wikiSaga() {\r\n  yield takeLatest(GET_REQUEST_LIST, getRequestListSaga);\r\n  yield takeLatest(WRITE_DOCUMENT, writeDocumentSaga);\r\n  yield takeLatest(READ_DOCUMENT, readDocumentSaga);\r\n  yield takeLatest(GET_DOCUMENT_LIST, getDocumentListSaga);\r\n  yield takeLatest(GET_HISTORY_LIST, getHistoryListSaga);\r\n  yield takeLatest(GET_SEARCH_LIST, getSearchListSaga);\r\n  yield takeLatest(GET_DIRECT_TITLE, getDirectTitleSaga);\r\n  yield takeLatest(GET_RANDOM_TITLE, getRandomTitleSaga);\r\n  yield takeLatest(GET_DOCUMENT_COUNT, getDocumentCountSaga);\r\n  yield takeLatest(ADD_BARCODE_NUMBER, addBarcodeNumberSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: null,\r\n  titleError: null,\r\n  body: '',\r\n  document: null,\r\n  documentError: null,\r\n  editDocument: null,\r\n  editDocumentError: null,\r\n  requestList: [],\r\n  requestListError: null,\r\n  documentList: null,\r\n  documentListError: null,\r\n  historyList: null,\r\n  historyListError: null,\r\n  query: '',\r\n  searchList: [],\r\n  searchListError: null,\r\n  lastPage: 1,\r\n  directName: null,\r\n  directError: null,\r\n  randomTitle: null,\r\n  randomTitleError: null,\r\n  documentCount: 0,\r\n  documentCountError: null,\r\n  addBarcodeNumberResult: null,\r\n  addBarcodeNumberResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst wiki = handleActions(\r\n  {\r\n    [GET_REQUEST_LIST_SUCCESS]: (state, { payload: requestList }) => ({\r\n      ...state,\r\n      requestList,\r\n      requestListError: null,\r\n    }),\r\n    [GET_REQUEST_LIST_FAILURE]: (state, { payload: requestListError }) => ({\r\n      ...state,\r\n      requestList: [],\r\n      requestListError,\r\n    }),\r\n    [SET_TITLE]: (state, { payload: title }) => ({\r\n      ...state,\r\n      title,\r\n    }),\r\n    [INITIALIZE]: (state) => ({\r\n      ...state,\r\n      title: null,\r\n      titleError: null,\r\n      body: '',\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n      query: '',\r\n      directName: null,\r\n      directError: null,\r\n      randomTitle: null,\r\n      randomTitleError: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키 값을 업데이트\r\n    }),\r\n    [WRITE_DOCUMENT_SUCCESS]: (state, { payload: editDocument }) => ({\r\n      ...state,\r\n      editDocument,\r\n      editDocumentError: null,\r\n    }),\r\n    [WRITE_DOCUMENT_FAILURE]: (state, { payload: editDocumentError }) => ({\r\n      ...state,\r\n      editDocument: null,\r\n      editDocumentError,\r\n    }),\r\n    [READ_DOCUMENT_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      document,\r\n      documentError: null,\r\n    }),\r\n    [READ_DOCUMENT_FAILURE]: (state, { payload: documentError }) => ({\r\n      ...state,\r\n      document: null,\r\n      documentError,\r\n    }),\r\n    [UNLOAD_DOCUMENT]: (state) => ({\r\n      ...state,\r\n      document: null,\r\n      documentError: null,\r\n    }),\r\n    [SET_ORIGINAL_DOCUMENT]: (state, { payload: document }) => ({\r\n      ...state,\r\n      title: document.title,\r\n      body: document.body,\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n    }),\r\n    [GET_DOCUMENT_LIST_SUCCESS]: (state, { payload: documentList }) => ({\r\n      ...state,\r\n      documentList,\r\n      documentListError: null,\r\n    }),\r\n    [GET_DOCUMENT_LIST_FAILURE]: (state, { payload: documentListError }) => ({\r\n      ...state,\r\n      documentList: null,\r\n      documentListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      documentList: null,\r\n      documentListError: null,\r\n    }),\r\n    [GET_HISTORY_LIST_SUCCESS]: (state, { payload: historyList }) => ({\r\n      ...state,\r\n      historyList,\r\n      historyListError: null,\r\n    }),\r\n    [GET_HISTORY_LIST_FAILURE]: (state, { payload: historyListError }) => ({\r\n      ...state,\r\n      historyList: null,\r\n      historyListError,\r\n    }),\r\n    [GET_SEARCH_LIST_SUCCESS]: (\r\n      state,\r\n      { payload: searchList, meta: response },\r\n    ) => ({\r\n      ...state,\r\n      searchList,\r\n      searchListError: null,\r\n      lastPage: parseInt(response.headers['makeuphara-wiki-last-page'], '10'),\r\n    }),\r\n    [GET_SEARCH_LIST_FAILURE]: (state, { payload: searchListError }) => ({\r\n      ...state,\r\n      searchList: [],\r\n      searchListError,\r\n    }),\r\n    [GET_DIRECT_TITLE_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      directName: document.title.name,\r\n      directError: null,\r\n    }),\r\n    [GET_DIRECT_TITLE_FAILURE]: (state, { payload: directError }) => ({\r\n      ...state,\r\n      directName: null,\r\n      directError,\r\n    }),\r\n    [GET_RANDOM_TITLE_SUCCESS]: (state, { payload: title }) => ({\r\n      ...state,\r\n      randomTitle: title.name,\r\n      randomTitleError: null,\r\n    }),\r\n    [GET_RANDOM_TITLE_FAILURE]: (state, { payload: randomTitleError }) => ({\r\n      ...state,\r\n      randomTitle: null,\r\n      randomTitleError,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_SUCCESS]: (state, { payload: documentCount }) => ({\r\n      ...state,\r\n      documentCount,\r\n      documentCountError: null,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_FAILURE]: (state, { payload: documentCountError }) => ({\r\n      ...state,\r\n      documentCount: 0,\r\n      documentCountError,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_SUCCESS]: (\r\n      state,\r\n      { payload: addBarcodeNumberResult },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResult,\r\n      addBarcodeNumberResultError: null,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_FAILURE]: (\r\n      state,\r\n      { payload: addBarcodeNumberResultError },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResult: null,\r\n      addBarcodeNumberResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default wiki;\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const requestDocument = () => client.get('/api/wiki/request');\r\n\r\nexport const writeDocument = ({ id, body }) =>\r\n  client.post(`/api/wiki/write/${id}`, { body });\r\n\r\nexport const readDocument = ({ id, r }) => {\r\n  const queryString = qs.stringify({ r });\r\n  return client.get(`/api/wiki/${id}?${queryString}`);\r\n};\r\n\r\nexport const getDocumentList = (block) => {\r\n  const queryString = qs.stringify({ block });\r\n  return client.get(`/api/wiki/list?${queryString}`);\r\n};\r\n\r\nexport const getHistoryList = ({ id }) => client.get(`/api/wiki/${id}/history`);\r\n\r\nexport const getSearchList = ({\r\n  query,\r\n  oldest,\r\n  shortest,\r\n  longest,\r\n  page,\r\n  block,\r\n}) => {\r\n  const queryString = qs.stringify({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  });\r\n  return client.get(`/api/wiki/search?${queryString}`);\r\n};\r\n\r\nexport const getDirectTitle = ({ query }) => {\r\n  const queryString = qs.stringify({ query });\r\n  return client.get(`/api/wiki/search/direct?${queryString}`);\r\n};\r\n\r\nexport const getRandomTitle = () => client.get('/api/wiki/search/random');\r\n\r\nexport const getDocumentCount = ({ username }) =>\r\n  client.post('/api/wiki/doc/count', { username });\r\n\r\nexport const addBarcodeNumber = ({ title, code }) =>\r\n  client.patch(`/api/wiki/${title}/barcode`, { code });\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as postAPI from '../../lib/api/post';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// local\r\nconst INITIALIZE = 'post/INITIALIZE'; // 작성 내용 초기화\r\nconst CHANGE_FIELD = 'post/CHANGE_FIELD'; // 특정 key값 바꾸기\r\nconst SET_ORIGINAL_POST = 'post/SET_ORIGINAL_POST'; // 포스트 편집 시 에디터에 포스트 정보 세팅\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 뷰 언마운트시 post 정보 제거\r\n// api - write\r\nconst [\r\n  WRITE_POST,\r\n  WRITE_POST_SUCCESS,\r\n  WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('post/WRITE_POST');\r\n// api - read\r\nconst [\r\n  READ_POST,\r\n  READ_POST_SUCCESS,\r\n  READ_POST_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST');\r\n// api - update\r\nconst [\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAILURE,\r\n] = createRequestActionTypes('post/UPDATE_POST');\r\n// api - list\r\nconst [GET_LIST, GET_LIST_SUCCESS, GET_LIST_FAILURE] = createRequestActionTypes(\r\n  'post/GET_LIST',\r\n);\r\nconst UNLOAD_LIST = 'post/UNLOAD_LIST'; // 포스트 리스트 뷰 언마운트시 post list 정보 제거\r\nconst [\r\n  READ_POST_COMMENT,\r\n  READ_POST_COMMENT_SUCCESS,\r\n  READ_POST_COMMENT_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST_COMMENT');\r\nconst [\r\n  WRITE_POST_COMMENT,\r\n  WRITE_POST_COMMENT_SUCCESS,\r\n  WRITE_POST_COMMENT_FAILURE,\r\n] = createRequestActionTypes('post/WRITE_POST_COMMENT');\r\nconst [\r\n  UPDATE_POST_COMMENT,\r\n  UPDATE_POST_COMMENT_SUCCESS,\r\n  UPDATE_POST_COMMENT_FAILURE,\r\n] = createRequestActionTypes('post/UPDATE_POST_COMMENT');\r\nconst UNLOAD_POST_COMMENT = 'post/UNLOAD_POST_COMMENT';\r\n\r\n/* action */\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, (post) => post);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\nexport const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\r\n  title,\r\n  body,\r\n  tags,\r\n}));\r\nexport const readPost = createAction(READ_POST, (id) => id);\r\nexport const updatePost = createAction(\r\n  UPDATE_POST,\r\n  ({ id, title, body, tags }) => ({ id, title, body, tags }),\r\n);\r\nexport const getList = createAction(\r\n  GET_LIST,\r\n  ({ page, tag, username, query, block, oldest, day }) => ({\r\n    page,\r\n    tag,\r\n    username,\r\n    query,\r\n    block,\r\n    oldest,\r\n    day,\r\n  }),\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\nexport const readPostComment = createAction(\r\n  READ_POST_COMMENT,\r\n  ({ id, page, block }) => ({\r\n    id,\r\n    page,\r\n    block,\r\n  }),\r\n);\r\nexport const writePostComment = createAction(\r\n  WRITE_POST_COMMENT,\r\n  ({ id, body }) => ({ id, body }),\r\n);\r\nexport const updatePostComment = createAction(\r\n  UPDATE_POST_COMMENT,\r\n  ({ id, commentId, body }) => ({ id, commentId, body }),\r\n);\r\nexport const unloadPostComment = createAction(UNLOAD_POST_COMMENT);\r\n\r\n/* redux-saga */\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\nconst getListSaga = createRequestSaga(GET_LIST, postAPI.getList);\r\nconst readPostCommentSaga = createRequestSaga(\r\n  READ_POST_COMMENT,\r\n  postAPI.readComment,\r\n);\r\nconst writePostCommentSaga = createRequestSaga(\r\n  WRITE_POST_COMMENT,\r\n  postAPI.writeComment,\r\n);\r\nconst updatePostCommentSaga = createRequestSaga(\r\n  UPDATE_POST_COMMENT,\r\n  postAPI.updateComment,\r\n);\r\n\r\nexport function* postSaga() {\r\n  yield takeLatest(WRITE_POST, writePostSaga);\r\n  yield takeLatest(READ_POST, readPostSaga);\r\n  yield takeLatest(UPDATE_POST, updatePostSaga);\r\n  yield takeLatest(GET_LIST, getListSaga);\r\n  yield takeLatest(READ_POST_COMMENT, readPostCommentSaga);\r\n  yield takeLatest(WRITE_POST_COMMENT, writePostCommentSaga);\r\n  yield takeLatest(UPDATE_POST_COMMENT, updatePostCommentSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n  editPost: null,\r\n  editPostError: null,\r\n  post: null,\r\n  postError: null,\r\n  postList: [],\r\n  lastPage: 1,\r\n  postCount: 0,\r\n  postListError: null,\r\n  targetPostId: null,\r\n  commentList: [],\r\n  commentCount: 0,\r\n  commentLastPage: 1,\r\n  commentListError: null,\r\n  editComment: null,\r\n  editCommentError: null,\r\n};\r\n\r\n/* reducer */\r\nconst post = handleActions(\r\n  {\r\n    [INITIALIZE]: () => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키값을 업데이트\r\n    }),\r\n    [SET_ORIGINAL_POST]: (state, { payload: post }) => ({\r\n      ...state,\r\n      title: post.title,\r\n      body: post.body,\r\n      tags: post.tags,\r\n      targetPostId: post._id,\r\n    }),\r\n    [UNLOAD_POST]: (state) => ({\r\n      ...state,\r\n      post: null,\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST]: (state) => ({\r\n      ...state,\r\n      editPost: null,\r\n      neditPosttError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n      editPostError: null,\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPost: null,\r\n      editPostError,\r\n    }),\r\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n      postError: null,\r\n    }),\r\n    [READ_POST_FAILURE]: (state, { payload: postError }) => ({\r\n      ...state,\r\n      post: null,\r\n      postError,\r\n    }),\r\n    [UPDATE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n      editPostError: null,\r\n    }),\r\n    [UPDATE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPost: null,\r\n      editPostError,\r\n    }),\r\n    [GET_LIST_SUCCESS]: (state, { payload: postList, meta: response }) => ({\r\n      ...state,\r\n      postList,\r\n      postCount: parseInt(response.headers['makeuphara-post-count'], '10'),\r\n      lastPage: parseInt(response.headers['makeuphara-post-last-page'], '10'),\r\n    }),\r\n    [GET_LIST_FAILURE]: (state, { payload: postListError }) => ({\r\n      ...state,\r\n      postList: [],\r\n      postListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      postList: [],\r\n      postListError: null,\r\n    }),\r\n    [READ_POST_COMMENT_SUCCESS]: (\r\n      state,\r\n      { payload: commentList, meta: response },\r\n    ) => ({\r\n      ...state,\r\n      commentList,\r\n      commentCount: parseInt(\r\n        response.headers['makeuphara-post-comment-count'],\r\n        '10',\r\n      ),\r\n      commentLastPage: parseInt(\r\n        response.headers['makeuphara-post-comment-last-page'],\r\n        '10',\r\n      ),\r\n      commentListError: null,\r\n    }),\r\n    [READ_POST_COMMENT_FAILURE]: (state, { payload: commentListError }) => ({\r\n      ...state,\r\n      commentList: [],\r\n      commentListError,\r\n    }),\r\n    [WRITE_POST_COMMENT_SUCCESS]: (state, { payload: editComment }) => ({\r\n      ...state,\r\n      editComment,\r\n      editCommentError: null,\r\n    }),\r\n    [WRITE_POST_COMMENT_FAILURE]: (state, { payload: editCommentError }) => ({\r\n      ...state,\r\n      editComment: null,\r\n      editCommentError,\r\n    }),\r\n    [UPDATE_POST_COMMENT_SUCCESS]: (state, { payload: editComment }) => ({\r\n      ...state,\r\n      editComment,\r\n      editCommentError: null,\r\n    }),\r\n    [UPDATE_POST_COMMENT_FAILURE]: (state, { payload: editCommentError }) => ({\r\n      ...state,\r\n      editComment: null,\r\n      editCommentError,\r\n    }),\r\n    [UNLOAD_POST_COMMENT]: (state) => ({\r\n      ...state,\r\n      commentList: [],\r\n      commentListError: null,\r\n      commentCount: 0,\r\n      commentLastPage: 1,\r\n      editComment: null,\r\n      editCommentError: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default post;\r\n"],"sourceRoot":""}