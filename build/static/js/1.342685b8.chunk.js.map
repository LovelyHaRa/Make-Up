{"version":3,"sources":["components/wiki/WikiSearch.js","containers/wiki/WikiSearchContainer.js"],"names":["WikiSearchBlock","styled","div","theme","wikiMenuBorder","SearchBlock","text","hoverText","wikiActionButtonHoverBody","SearchInput","input","body","SearchButton","button","WikiSearch","query","onChangeField","onSearch","onDirect","onShuffle","library","add","faSearch","faRandom","faArrowRight","onClick","icon","onChange","e","key","value","target","onKeyUp","keyCode","placeholder","className","withRouter","history","dispatch","useDispatch","useSelector","wiki","directName","randomTitle","useCallback","payload","changeField","push","getDirectTitle","getRandomTitle","useEffect","initialize"],"mappings":"msCAeA,IAAMA,EAAkBC,IAAOC,IAAV,KAEQ,qBAAGC,MAAkBC,kBAG5CC,EAAcJ,IAAOC,IAAV,KAGN,qBAAGC,MAAkBG,QAIjB,qBAAGH,MAAkBI,aAChB,qBAAGJ,MAAkBK,6BASnCC,EAAcR,IAAOS,MAAV,KAGU,qBAAGP,MAAkBC,kBAIhC,qBAAGD,MAAkBQ,QAC1B,qBAAGR,MAAkBG,QAGnB,qBAAGH,MAAkBI,aAI5BK,EAAeX,IAAOY,OAAV,KACF,qBAAGV,MAAkBQ,QAIV,qBAAGR,MAAkBC,kBACrC,qBAAGD,MAAkBG,QAGnB,qBAAGH,MAAkBI,aAChB,qBAAGJ,MAAkBK,6BAgDxBM,EA5CI,SAAC,GAMb,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,UAEAC,IAAQC,IAAI,CAACC,IAAUC,IAAUC,MAYjC,OACE,kBAACxB,EAAD,KACE,kBAACK,EAAD,KACE,kBAACO,EAAD,CAAca,QAASN,GACrB,kBAAC,IAAD,CAAiBO,KAAK,YAExB,kBAACjB,EAAD,CACEkB,SAjBa,SAACC,GACpBZ,EAAc,CAAEa,IAAK,QAASC,MAAOF,EAAEG,OAAOD,SAiBxCE,QAdY,SAACJ,GACnB,GAAkB,KAAdA,EAAEK,QACJ,OAAOhB,KAaHiB,YAAY,yCACZJ,MAAOf,IAET,0BAAMoB,UAAU,iBACd,kBAACvB,EAAD,CAAca,QAASR,GACrB,kBAAC,IAAD,CAAiBS,KAAK,YAExB,kBAACd,EAAD,CAAca,QAASP,GACrB,kBAAC,IAAD,CAAiBQ,KAAK,qB,wBCjCnBU,uBA1Da,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEvBC,EAAWC,cAF0B,EAIAC,aAAY,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACpE1B,MAAO0B,EAAK1B,MACZ2B,WAAYD,EAAKC,WACjBC,YAAaF,EAAKE,gBAHZ5B,EAJmC,EAInCA,MAAO2B,EAJ4B,EAI5BA,WAAYC,EAJgB,EAIhBA,YAMrB3B,EAAgB4B,uBACpB,SAACC,GAAD,OAAaP,EAASQ,YAAYD,MAClC,CAACP,IAGGrB,EAAW2B,uBAAY,WACb,KAAV7B,EACFsB,EAAQU,KAAK,cAEbV,EAAQU,KAAR,2BAAiChC,MAElC,CAACsB,EAAStB,IAEPG,EAAW0B,uBAAY,WAC3BN,EAASU,YAAe,CAAEjC,aACzB,CAACuB,EAAUvB,IAERI,EAAYyB,uBAAY,WAC5BN,EAASW,iBACR,CAACX,IAkBJ,OAfAY,qBAAU,WACJR,IACFL,EAAQU,KAAR,aAAmBL,IACnBJ,EAASa,kBAEV,CAACb,EAAUD,EAASK,IAGvBQ,qBAAU,WACJP,IACFN,EAAQU,KAAR,aAAmBJ,IACnBL,EAASa,kBAEV,CAACb,EAAUD,EAASM,IAGrB,kBAAC,EAAD,CACE5B,MAAOA,EACPC,cAAeA,EACfC,SAAUA,EACVC,SAAUA,EACVC,UAAWA","file":"static/js/1.342685b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faRandom,\r\n  faArrowRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n/**\r\n * 위키 검색 컴포넌트\r\n * 랜덤 문서 이동, 다이렉트 이동 구현\r\n */\r\n\r\nconst WikiSearchBlock = styled.div`\r\n  margin-top: 0.125rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n`;\r\n\r\nconst SearchBlock = styled.div`\r\n  display: flex;\r\n  flex: none;\r\n  color: ${({ theme }) => theme.text};\r\n  a {\r\n    padding: 0.375rem 0.75rem;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n    }\r\n  }\r\n  .action-button {\r\n    display: flex;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 0 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  flex-grow: 1;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  ::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background: ${({ theme }) => theme.body};\r\n  outline: none;\r\n  padding: 0.375rem 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst WikiSearch = ({\r\n  query,\r\n  onChangeField,\r\n  onSearch,\r\n  onDirect,\r\n  onShuffle,\r\n}) => {\r\n  library.add([faSearch, faRandom, faArrowRight]);\r\n\r\n  const handleChange = (e) => {\r\n    onChangeField({ key: 'query', value: e.target.value });\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) {\r\n      return onSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WikiSearchBlock>\r\n      <SearchBlock>\r\n        <SearchButton onClick={onShuffle}>\r\n          <FontAwesomeIcon icon=\"random\" />\r\n        </SearchButton>\r\n        <SearchInput\r\n          onChange={handleChange}\r\n          onKeyUp={handleKeyUp}\r\n          placeholder=\"위키 문서 검색\"\r\n          value={query}\r\n        />\r\n        <span className=\"action-button\">\r\n          <SearchButton onClick={onSearch}>\r\n            <FontAwesomeIcon icon=\"search\" />\r\n          </SearchButton>\r\n          <SearchButton onClick={onDirect}>\r\n            <FontAwesomeIcon icon=\"arrow-right\" />\r\n          </SearchButton>\r\n        </span>\r\n      </SearchBlock>\r\n    </WikiSearchBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSearch;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport WikiSearch from '../../components/wiki/WikiSearch';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  getDirectTitle,\r\n  initialize,\r\n  getRandomTitle,\r\n} from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiSearchContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 설정 불러오기\r\n  const { query, directName, randomTitle } = useSelector(({ wiki }) => ({\r\n    query: wiki.query,\r\n    directName: wiki.directName,\r\n    randomTitle: wiki.randomTitle,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  const onSearch = useCallback(() => {\r\n    if (query === '') {\r\n      history.push('/wiki/list');\r\n    } else {\r\n      history.push(`/wiki/list?query=${query}`);\r\n    }\r\n  }, [history, query]);\r\n\r\n  const onDirect = useCallback(() => {\r\n    dispatch(getDirectTitle({ query }));\r\n  }, [dispatch, query]);\r\n\r\n  const onShuffle = useCallback(() => {\r\n    dispatch(getRandomTitle());\r\n  }, [dispatch]);\r\n\r\n  // 다이렉트 이동\r\n  useEffect(() => {\r\n    if (directName) {\r\n      history.push(`/w/${directName}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, directName]);\r\n\r\n  // 랜덤 문서 이동\r\n  useEffect(() => {\r\n    if (randomTitle) {\r\n      history.push(`/w/${randomTitle}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, randomTitle]);\r\n\r\n  return (\r\n    <WikiSearch\r\n      query={query}\r\n      onChangeField={onChangeField}\r\n      onSearch={onSearch}\r\n      onDirect={onDirect}\r\n      onShuffle={onShuffle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiSearchContainer);\r\n"],"sourceRoot":""}