{"version":3,"sources":["components/common/ErrorBlock.js","components/common/LoadingProgress.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","components/wiki/WikiRequest.js","containers/wiki/WikiRequestContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","LoadingProgressBlock","props","customHeight","css","CustomCircularProgress","CircularProgress","categoryBorder","LoadingProgress","full","body","className","easeOut","t","value","min","max","Math","React","ref","classes","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","_extends","clsx","root","capitalize","indeterminate","static","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","name","flip","WikiRequestBlock","wikiActionButtonText","wikiActionButtonBody","wikiActionButtonHoverText","wikiActionButtonHoverBody","WikiRequestErrorBlock","RequestItem","title","onEdit","onClick","WikiRequest","requestList","loading","error","Responsive","response","status","statusText","length","map","request","key","_id","withRouter","history","dispatch","useDispatch","useSelector","wiki","requestListError","useEffect","getRequestList","setTitle","push"],"mappings":"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","file":"static/js/16.46f6a602.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={full ? 'full-height' : body ? 'body-height' : ''}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 작성 가능한 위키 문서 목록 컴포넌트\r\n */\r\n\r\nconst WikiRequestBlock = styled.div`\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  h2 {\r\n    font-weight: 500;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    button {\r\n      padding: 0.25rem 0.5rem;\r\n      margin-left: 3rem;\r\n      border: none;\r\n      outline: none;\r\n      font-size: 0.875rem;\r\n      cursor: pointer;\r\n      color: ${({ theme }) => theme.wikiActionButtonText};\r\n      background: ${({ theme }) => theme.wikiActionButtonBody};\r\n      &:hover {\r\n        color: ${({ theme }) => theme.wikiActionButtonHoverText};\r\n        background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst WikiRequestErrorBlock = styled(ErrorBlock)`\r\n  margin-top: 3rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst RequestItem = ({ title, onEdit }) => {\r\n  const { name } = title;\r\n  return (\r\n    <div className=\"item\">\r\n      <span>{name}</span>\r\n      <button onClick={() => onEdit(title)}>작성하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WikiRequest = ({ requestList, loading, error, onEdit }) => {\r\n  if (error) {\r\n    return (\r\n      <Responsive>\r\n        <WikiRequestErrorBlock>\r\n          <span className=\"error-title\">리스트 요청 실패.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </WikiRequestErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  if (!requestList || loading) {\r\n    return <LoadingProgress body />;\r\n  }\r\n  if (!requestList.length) {\r\n    return (\r\n      <Responsive>\r\n        <WikiRequestErrorBlock>\r\n          <span className=\"error-title\">\r\n            지금 작성이 필요한 문서가 없습니다...ㅠ\r\n          </span>\r\n        </WikiRequestErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <WikiRequestBlock>\r\n        <h2>작성이 필요한 문서</h2>\r\n        {requestList.map((request) => (\r\n          <RequestItem title={request} onEdit={onEdit} key={request._id} />\r\n        ))}\r\n      </WikiRequestBlock>\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default WikiRequest;\r\n","import React, { useEffect } from 'react';\r\nimport WikiRequest from '../../components/wiki/WikiRequest';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRequestList, setTitle } from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiRequestContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n\r\n  // 전역 상태 불러오기\r\n  const { requestList, loading, error } = useSelector(({ wiki, loading }) => ({\r\n    requestList: wiki.requestList,\r\n    loading: loading['wiki/GET_REQUEST_LIST'],\r\n    error: wiki.requestListError,\r\n  }));\r\n\r\n  // 이벤트 정의\r\n  const onEdit = title => {\r\n    dispatch(setTitle(title));\r\n    history.push('/wiki/edit');\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getRequestList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <WikiRequest\r\n      requestList={requestList}\r\n      loading={loading}\r\n      error={error}\r\n      onEdit={onEdit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiRequestContainer);\r\n"],"sourceRoot":""}