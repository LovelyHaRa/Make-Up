{"version":3,"sources":["components/post/common/PostItem.js","containers/post/PaginationContainer.js","lib/createRequest.js","lib/api/auth.js","lib/api/user.js","module/redux/user.js","components/common/CustomSwitch.js","module/redux/theme.js","components/common/Header.js","module/redux/search.js","containers/common/HeaderContainer.js","components/common/BodyBlock.js","module/redux/wiki.js","lib/api/wiki.js","components/main/BlogSection.js","components/main/WikiSection.js","containers/main/MainContainer.js","pages/main/MainPage.js","lib/styles/theme.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","module/redux/auth.js","containers/auth/LoginForm.js","pages/auth/LoginPage.js","containers/auth/RegisterForm.js","pages/auth/RegisterPage.js","components/common/editor/EditorFooter.js","components/post/write/Editor.js","containers/post/write/EditorContainer.js","components/post/write/TagBox.js","containers/post/write/TagBoxContainer.js","components/common/editor/WriteActionButtons.js","containers/post/write/WriteActionButtonsContainer.js","pages/post/PostWritePage.js","components/post/PostViewer.js","components/common/Modal.js","components/post/AskRemoveModal.js","components/post/PostActionButtions.js","containers/post/PostViewerContainer.js","pages/post/PostPage.js","pages/post/PostListPage.js","pages/auth/callback/LoginWithNaverPage.js","pages/auth/callback/LoginWithKakaoPage.js","components/wiki/InputBarcodeModal.js","components/wiki/WikiViewer.js","containers/wiki/WikiViewerContainer.js","components/wiki/WikiSearch.js","containers/wiki/WikiSearchContainer.js","pages/wiki/WikiPage.js","components/wiki/edit/Editor.js","containers/wiki/edit/EditorContainer.js","containers/wiki/edit/WriteActionButtonsContainer.js","pages/wiki/WikiEditPage.js","components/wiki/WikiRequest.js","containers/wiki/WikiRequestContainer.js","pages/wiki/WikiRequestPage.js","components/wiki/WikiHistory.js","containers/wiki/WikiHistoryContainer.js","pages/wiki/WikiHistoryPage.js","components/wiki/WikiList.js","components/common/Category.js","components/wiki/Categories.js","containers/wiki/WikiListContainer.js","pages/wiki/WikiListPage.js","components/profile/MyPageMenu.js","containers/profile/MyPageMenuContainer.js","components/common/FlexContentBlock.js","components/profile/Profile.js","containers/profile/ProfileContainer.js","pages/profile/MyPage.js","components/profile/Security.js","containers/profile/SecurityContainer.js","pages/profile/SecurityPage.js","components/profile/Activity.js","containers/profile/ActivityContainer.js","pages/profile/ActivityPage.js","components/search/Categories.js","components/search/SearchOption.js","containers/search/SearchOptionContainer.js","components/search/BlogSearchResult.js","components/search/WikiSearchResult.js","containers/search/PaginationContainer.js","components/search/NoResult.js","containers/search/LocalSearchContainer.js","pages/search/LocalSearchPage.js","App.js","serviceWorker.js","module/redux/index.js","index.js","lib/api/client.js","module/redux/post.js","components/common/ErrorBlock.js","components/common/Responsive.js","components/common/LoadingProgress.js","components/common/Button.js","lib/styles/open-color.js","components/post/common/Tags.js","lib/api/post.js","components/post/common/SubInfo.js","components/common/Pagination.js","module/redux/loading.js"],"names":["PostItemBlock","styled","div","theme","postBorder","text","hoverText","PostItem","post","username","_id","title","body","tags","publisher","publishedDate","to","className","withRouter","location","match","useSelector","loading","postList","lastPage","params","qs","parse","search","ignoreQueryPrefix","tag","page","query","stringify","path","parseInt","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","action","put","startLoading","call","payload","response","data","meta","error","finishLoading","logout","client","checkExistName","name","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","CHECK_EXIST_NAME","CHECK_EXIST_NAME_SUCCESS","CHECK_EXIST_NAME_FAILURE","UPDATE_NAME","UPDATE_NAME_SUCCESS","UPDATE_NAME_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","check","createAction","tempSetUser","changeField","form","key","value","updateName","id","initializeUpdateName","changePassword","password","newPassword","initializeChangePassword","checkSaga","get","checkExistNameSaga","userAPI","updateNameSaga","patch","changePasswordSaga","checkFailureSaga","sessionStorage","removeItem","authAPI","takeLatest","handleActions","state","user","checkError","produce","draft","checkExistNameResult","checkExistNameResultError","updateUser","updateUserError","changePasswordResult","changePasswordError","curPassword","confirmPassword","profile","DarkThemeSwitch","Switch","darkThemeSwitchTrack","darkThemeSwitchBody","setTheme","isDarkTheme","HeaderBlock","nav","dropdownBody","palette","gray","hoverList","Menu","SearchResponsive","SearchInputWrapper","SearchInput","input","inputBody","placeholder","indigo","SearchBtn","Link","btnSearchBody","MemoizedEtcDropDown","React","memo","SearchDropDown","currentPath","ProfileInfo","OptionMenu","classes","makeStyles","darkTheme","fontFamily","useStyles","useState","setDarkTheme","dispatch","useDispatch","useEffect","Typography","component","Grid","container","display","alignItems","justify","style","fontSize","letterSpacing","item","checked","onChange","localStorage","setItem","size","LogoutMenu","onLogout","onClick","UserDropDown","NoneUserDropDown","SearchInputPackage","searchQuery","handleSearchInput","handleSearchKeyUp","tabIndex","onKeyUp","event","keyCode","icon","Spacer","Header","library","add","faSearch","faEllipsisH","faEllipsisV","faUserCircle","etc","setEtc","setSearch","userinfo","setUserinfo","noneuser","setNoneUser","ClickAwayListener","onClickAway","prevOpen","aria-haspopup","justifyContent","Button","transparent","changeInput","changeOption","initialize","initializeOption","initialState","option","totalSort","totalTerm","wikiSort","wikilength","blogSort","blogTerm","history","pathname","target","push","BodyBlock","props","includeHeader","wikiSaga","GET_REQUEST_LIST","GET_REQUEST_LIST_SUCCESS","GET_REQUEST_LIST_FAILURE","SET_TITLE","WRITE_DOCUMENT","WRITE_DOCUMENT_SUCCESS","WRITE_DOCUMENT_FAILURE","READ_DOCUMENT","READ_DOCUMENT_SUCCESS","READ_DOCUMENT_FAILURE","GET_DOCUMENT_LIST","GET_DOCUMENT_LIST_SUCCESS","GET_DOCUMENT_LIST_FAILURE","GET_HISTORY_LIST","GET_HISTORY_LIST_SUCCESS","GET_HISTORY_LIST_FAILURE","GET_SEARCH_LIST","GET_SEARCH_LIST_SUCCESS","GET_SEARCH_LIST_FAILURE","GET_DIRECT_TITLE","GET_DIRECT_TITLE_SUCCESS","GET_DIRECT_TITLE_FAILURE","GET_RANDOM_TITLE","GET_RANDOM_TITLE_SUCCESS","GET_RANDOM_TITLE_FAILURE","GET_DOCUMENT_COUNT","GET_DOCUMENT_COUNT_SUCCESS","GET_DOCUMENT_COUNT_FAILURE","ADD_BARCODE_NUMBER","ADD_BARCODE_NUMBER_SUCCESS","ADD_BARCODE_NUMBER_FAILURE","getRequestList","setTitle","writeDocument","readDocument","r","unloadDocument","setOriginalDocument","document","getDocumentList","block","unloadList","getHistoryList","getSearchList","oldest","shortest","longest","getDirectTitle","getRandomTitle","getDocumentCount","addBarcodeNumber","code","getRequestListSaga","writeDocumentSaga","readDocumentSaga","queryString","getDocumentListSaga","getHistoryListSaga","getSearchListSaga","getDirectTitleSaga","getRandomTitleSaga","getDocumentCountSaga","addBarcodeNumberSaga","wiki","requestList","requestListError","titleError","editDocument","editDocumentError","directName","directError","randomTitle","randomTitleError","documentError","documentList","documentListError","historyList","historyListError","searchList","headers","searchListError","documentCount","documentCountError","addBarcodeNumberResult","addBarcodeNumberResultError","BlogSectionBlock","PostBlock","Tags","limit","SubInfo","BlogSection","postError","ErrorBlock","message","map","WikiSectionBlock","DocumentBlock","wikiBorder","DocumentItem","moment","format","WikiSection","LoadingProgress","MainContainer","postListError","postLoading","documentLoading","getList","postUnload","wikiUnload","MainPage","lightTheme","categoryBorder","cyan","themeColorBody","themeColorHoverBody","progressBar","progressBody","sliderTrack","sliderRail","loginBody","loginInputBorder","loginInputBorderFocus","editorTitleBorder","editorText","editorTagComponentBorder","editorTagBoxBorder","editorTagTitle","editorTagButtonBody","editorHoverTagButtonBody","editorTagButtonText","editorTagText","footerText","btnBody","btnHoverBody","btnText","btnDisableBody","btnDisableColor","postSubInfoText","postSubInfoHoverText","postTagText","postTagHoverText","postActionButtonText","postActionButtonHoverText","postActionButtonBody","postActionButtonHoverBody","wikiMenuBorder","wikiActionButtonBody","wikiActionButtonHoverBody","wikiActionButtonText","wikitActionButtonHoverText","wikiHistoryLinkText","wikiHistoryLinkHoverText","errorText","red","profileInfoValueBody","profileInputValid","profileInputInValid","searchBorder","violet","AuthTemplateBlock","ContentBox","AuthTemplate","children","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","GoogleLoginButton","button","buttonStyle","socialBtnStyle","css","NaverLoginButton","a","KakaoLoginButton","textMap","login","signinGoogle","register","ErrorMessage","AuthForm","onSubmit","onSocialLogin","validUsername","validName","googleLoginBtn","useRef","auth2","loadGoogleLoginApi","useCallback","window","load","current","init","client_id","process","cookiepolicy","scope","attachClickHandler","googleUser","id_token","getAuthResponse","onNaverLoginClick","requestUrl","onKakaoLoginClick","loadScript","script","srcValue","referenceNode","getElementsByTagName","getElementById","googlejssdkNode","createElement","src","parentNode","insertBefore","removeApiScript","tagName","targetId","targetNode","node","indexOf","removeChild","removeTag","sdkNode","removeJssdk","autoComplete","result","length","passwordConfirm","fullWidth","ref","faGoogle","alt","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_WITH_GOOGLE","LOGIN_WITH_GOOGLE_SUCCESS","LOGIN_WITH_GOOGLE_FAILURE","LOGIN_WITH_NAVER","LOGIN_WITH_NAVER_SUCCESS","LOGIN_WITH_NAVER_FAILURE","LOGIN_WITH_KAKAO","LOGIN_WITH_KAKAO_SUCCESS","LOGIN_WITH_KAKAO_FAILURE","CHECK_EXIST_USERNAME","CHECK_EXIST_USERNAME_SUCCESS","CHECK_EXIST_USERNAME_FAILURE","changeFieid","initializeForm","loginWithGoogle","loginWithNaver","client_secret","loginWithKakao","redirect_uri","checkExistUsername","registerSaga","loginSaga","loginWithGoogleSaga","loginWithNaverSaga","loginWithKakaoSaga","checkExistUsernameSaga","debounce","checkExistUsernameResult","checkExistUsernameResultError","auth","authError","registerResult","registerResultError","setError","status","replace","JSON","e","preventDefault","includes","LoginPage","isNotExistUsername","isNotExistUsernameError","isNotExistName","isNotExistNameError","setValidUsername","setValidName","isLoading","RegisterPage","EditorFooterBlock","EditorFooter","editorName","editorHref","Quill","debug","ImageResize","EditorBlock","Responsive","TitleInput","QuillWrapper","Editor","onChangeField","quillElement","quillInstance","modules","imageResize","toolbar","header","indent","align","list","color","background","quill","on","delta","oldDelta","source","root","innerHTML","mounted","EditorContainer","TagBoxBlock","TagForm","Tag","TagListBlock","TagItem","onRemove","TagList","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","nextTags","filter","t","trim","TagBoxContainer","WriteActionButtonsBlock","StyledButton","WriteActionButtons","isEdit","onCancel","editPost","editPostError","targetPostId","updatePost","writePost","goBack","PostViewerBlock","PostViewerErrorBlock","PostHead","PostContent","PostViewer","actionButtons","statusText","hasMarginTop","dangerouslySetInnerHTML","__html","FullScreen","AskModalBlock","SingleInputModalBlock","StyledTextField","TextField","AskModal","visible","description","confirmText","cancelText","onConfirm","Fade","in","themeColor","SingleInputModal","inputLabel","inputName","submitText","resultMessage","success","failure","label","require","AskRemoveModal","PostActionButtionsBlock","ActionButton","PostActionButtions","onEdit","modal","setModal","onclick","postId","removePost","readPost","unloadPost","isPublisher","setOriginalPost","PostPage","PostListContainer","loadable","PostListPage","InputBarcodeModal","WikiViewerBlock","WikiViewerErrorBlock","DocumentMenuBlock","DocumentMenu","docName","handleBarcodeChange","handleBarcodeSubmit","barcode","inputBarcodeError","availableBarcode","TitleBlock","DocumentContent","WikiViewer","customHeight","resultError","setBarcode","setInputBarcodeError","setResultMessage","setAvailableBarcode","isNaN","WikiSearchBlock","SearchBlock","SearchButton","WikiSearch","onSearch","onDirect","onShuffle","faRandom","faArrowRight","WikiPage","localTitle","getItem","WikiRequestBlock","wikiActionButtonHoverText","WikiRequestErrorBlock","RequestItem","WikiRequest","WikiRequestPage","WikiHistoryBlock","HistoryErrorBlock","HistoryItem","revision","WikiHistory","WikiHistoryPage","WikiListBlock","WikiListErrorBlock","forwardRef","ScrollProgress","LinearProgress","WikiList","lastDocumentRef","isLastPage","index","Category","NavLink","categories","CategoriesBlock","category","activeClassName","exact","isActive","undefined","setDocumentList","setIsLastPage","active","setActive","element","isValidQuery","intersectionObserver","IntersectionObserver","entries","observer","lastDocument","intersectionRatio","unobserve","setTimeout","observe","WikiListPage","MyPageMenuBlock","MenuList","link","NavMenu","MyPageMenu","menu","MyPageMenuContainer","FlexContentBlock","direction","ProfileBlock","StyleInput","ProfileSubmitButton","ProfileErrorBlock","Profile","nameMessage","existNameError","equalName","submitMessage","errorMessage","provider","disabled","ProfileContainer","setEqualName","setNameMessage","setSubmitMessage","setErrorMessage","loadingForm","loginName","toLowerCase","MyPage","SecurityBlock","PasswordInput","Security","valid","validMessage","submitPassword","validCur","validNew","validConfirm","validMessageCur","validMessageNew","validMessageConfirm","SecurityContainer","setValid","setValidMessage","setSubmitPassword","stateValidMessage","isValidNewPassword","isValidConfirmPassword","curValid","newValid","confirmValid","SecurityPage","ActivityBlock","Activity","postCount","loadingPost","loadingWiki","PaginationContainer","ActivityContainer","ActivityPage","blog","SearchOptionBlock","CustomMenuItem","MenuItem","CustomOption","optionValue","handleChange","FormControl","Select","displayEmpty","inputProps","TotalSearchOption","optionData","WikiSearchOption","BlogSearchOption","TotalSearchOptionContainer","optionQuery","day","WikiSearchOptionContainer","BlogSearchOptionContainer","BlogSearchResultBlock","BlogSearchResultErrorBlock","BlogSearchResult","includeTitle","postListLoading","WikiSearchResultBlock","updateDate","WikiSearchResultErrorBlock","WikiSearchResult","wikiList","wikiListLoading","TotalPaginationContainer","postLastPage","wikiLastPage","b","Pagination","WikiPaginationContainer","BlogPaginationContainer","NoResultBlock","NoResult","wikiListError","LocalSearchPage","App","LoginWithNaverPage","LoginWithKakaoPage","PostWritePage","WikiEditPage","Boolean","hostname","rootSaga","all","postSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","loadUser","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console","axios","create","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","GET_LIST","GET_LIST_SUCCESS","GET_LIST_FAILURE","writePostSaga","postAPI","readPostSaga","updatePostSaga","getListSaga","neditPosttError","ResponsiveBlock","rest","LoadingProgressBlock","CustomCircularProgress","CircularProgress","full","yellow","StyledLink","TagsBlock","buildLink","delete","SubInfoBlock","PaginationBlock","PageButton","pageNumber","front","mid","end","endpointSite","endpointBlockCount","i","halfBlockCount","blockCount","count","sort","concat","getPageNumber","number","requestType"],"mappings":"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","file":"static/js/main.80c7c13e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport SubInfo from './SubInfo';\r\nimport Tags from './Tags';\r\n\r\n/**\r\n * 포스팅 정보를 담고있는 아이템 컴포넌트\r\n */\r\n\r\nconst PostItemBlock = styled.div`\r\n  padding-top: 1rem;\r\n  padding-bottom: 1rem;\r\n\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n  & + & {\r\n    border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  h2 {\r\n    font-size: 1.5rem;\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .tags {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  & > a {\r\n    margin-top: 1rem;\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .item-body {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post, username }) => {\r\n  const { _id, title, body, tags, publisher, publishedDate } = post;\r\n  return (\r\n    <PostItemBlock>\r\n      <h2>\r\n        <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      </h2>\r\n      <SubInfo username={publisher.username} publishedDate={publishedDate} />\r\n      <Tags tags={tags} username={username} />\r\n      <Link className=\"item-body\" to={`/blog/@${publisher.username}/${_id}`}>\r\n        {body}\r\n      </Link>\r\n    </PostItemBlock>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React from 'react';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport qs from 'qs';\r\n\r\nconst PaginationContainer = ({ location, match }) => {\r\n  // 전역 변수 불러오기\r\n  const { postList, loading, lastPage } = useSelector(({ post, loading }) => ({\r\n    postList: post.postList,\r\n    loading: loading['post/GET_LIST'],\r\n    lastPage: post.lastPage,\r\n  }));\r\n\r\n  // 포스트 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\r\n  if (!postList || loading) return null;\r\n\r\n  // page가 없으면 1을 기본으로 사용\r\n  const { username } = match.params;\r\n  const { tag, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const query = qs.stringify({ tag });\r\n\r\n  return (\r\n    <Pagination\r\n      path={username ? `/blog/@${username}` : `/blog`}\r\n      query={query}\r\n      page={parseInt(page, 10)}\r\n      lastPage={lastPage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../module/redux/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport const createRequestSaga = (type, request) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function* (action) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n        meta: response,\r\n      });\r\n    } catch (error) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: error,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type));\r\n  };\r\n};\r\n","import client from './client';\r\n\r\nexport const register = ({ username, password, name }) =>\r\n  client.post('/api/auth/register', { username, password, name });\r\n\r\nexport const login = ({ username, password }) =>\r\n  client.post('/api/auth/login', { username, password });\r\n\r\nexport const loginWithGoogle = ({ id_token }) =>\r\n  client.post('/api/auth/login/google', { id_token });\r\n\r\nexport const loginWithNaver = ({ client_id, client_secret, code, state }) =>\r\n  client.post('/api/auth/login/naver', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  });\r\n\r\nexport const loginWithKakao = ({\r\n  client_id,\r\n  client_secret,\r\n  code,\r\n  redirect_uri,\r\n}) =>\r\n  client.post('/api/auth/login/kakao', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  });\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import client from './client';\r\n\r\nexport const checkExistUsername = ({ username }) =>\r\n  client.post('/api/user/check/username', { username });\r\n\r\nexport const checkExistName = ({ username, name }) =>\r\n  client.post('/api/user/check/name', { username, name });\r\n\r\nexport const updateName = ({ id, name }) =>\r\n  client.patch('/api/user/profile', { id, name });\r\n\r\nexport const changePassword = ({ id, password, newPassword }) =>\r\n  client.patch('/api/user/password', { id, password, newPassword });\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('user/CHECK_EXIST_NAME');\r\nconst CHANGE_FIELD = 'user/CHANGE_FIELD';\r\n// api- update name\r\nconst [\r\n  UPDATE_NAME,\r\n  UPDATE_NAME_SUCCESS,\r\n  UPDATE_NAME_FAILURE,\r\n] = createRequestActionTypes('user/UPDATE_NAME');\r\nconst INITIALIZE_UPDATE_NAME = 'user/INITIALIZE_UPDATE_NAME';\r\n// api - change password\r\nconst [\r\n  CHANGE_PASSWORD,\r\n  CHANGE_PASSWORD_SUCCESS,\r\n  CHANGE_PASSWORD_FAILURE,\r\n] = createRequestActionTypes('user/CHANGE_PASSWORD');\r\nconst INITIALIZE_CHANGE_PASSWORD = 'user/INITIALIZE_CHANGE_PASSWORD';\r\n\r\n/* action */\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\nexport const tempSetUser = createAction(TEMP_SET_USER);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({ form, key, value }),\r\n);\r\nexport const updateName = createAction(UPDATE_NAME, ({ id, name }) => ({\r\n  id,\r\n  name,\r\n}));\r\nexport const initializeUpdateName = createAction(INITIALIZE_UPDATE_NAME);\r\nexport const changePassword = createAction(\r\n  CHANGE_PASSWORD,\r\n  ({ id, password, newPassword }) => ({ id, password, newPassword }),\r\n);\r\nexport const initializeChangePassword = createAction(\r\n  INITIALIZE_CHANGE_PASSWORD,\r\n);\r\n\r\n/* redux-saga */\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\nconst updateNameSaga = createRequestSaga(UPDATE_NAME, userAPI.updateName);\r\nconst changePasswordSaga = createRequestSaga(\r\n  CHANGE_PASSWORD,\r\n  userAPI.changePassword,\r\n);\r\n\r\nconst checkFailureSaga = () => {\r\n  try {\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n  yield takeLatest(CHECK_EXIST_NAME, checkExistNameSaga);\r\n  yield takeLatest(UPDATE_NAME, updateNameSaga);\r\n  yield takeLatest(CHANGE_PASSWORD, changePasswordSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n  profile: {\r\n    name: '',\r\n  },\r\n  password: {\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  updateUser: null,\r\n  updateUserError: null,\r\n  changePasswordResult: null,\r\n  changePasswordError: null,\r\n};\r\n\r\n/* reducer */\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResultError,\r\n    }),\r\n    [UPDATE_NAME_SUCCESS]: (state, { payload: updateUser }) => ({\r\n      ...state,\r\n      updateUser,\r\n    }),\r\n    [UPDATE_NAME_FAILURE]: (state, { payload: updateUserError }) => ({\r\n      ...state,\r\n      updateUserError,\r\n    }),\r\n    [INITIALIZE_UPDATE_NAME]: (state) => ({\r\n      ...state,\r\n      updateUser: null,\r\n      updateUserError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHANGE_PASSWORD_SUCCESS]: (state, { payload: changePasswordResult }) => ({\r\n      ...state,\r\n      changePasswordResult: !!changePasswordResult,\r\n    }),\r\n    [CHANGE_PASSWORD_FAILURE]: (state, { payload: changePasswordError }) => ({\r\n      ...state,\r\n      changePasswordResult: false,\r\n      changePasswordError,\r\n    }),\r\n    [INITIALIZE_CHANGE_PASSWORD]: (state) => ({\r\n      ...state,\r\n      changePasswordResult: null,\r\n      changePasswordError: null,\r\n      password: {\r\n        curPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import styled from 'styled-components';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n/**\r\n * 커스텀 스위치(Dark Theme)\r\n */\r\n\r\nexport const DarkThemeSwitch = styled(Switch)`\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n    background-color: ${({ theme }) => theme.darkThemeSwitchTrack};\r\n  }\r\n  .MuiSwitch-switchBase {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n`;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\n/* action type */\r\nconst SET_THEME = 'theme/SET_THEME';\r\n\r\n/* action */\r\nexport const setTheme = createAction(SET_THEME);\r\n\r\n/* redux-saga */\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  isDarkTheme: false,\r\n};\r\n\r\n/* reducer */\r\nconst theme = handleActions(\r\n  {\r\n    [SET_THEME]: (state, { payload: isDarkTheme }) => ({\r\n      ...state,\r\n      isDarkTheme,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default theme;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faEllipsisH,\r\n  faEllipsisV,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Button from './Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DarkThemeSwitch } from './CustomSwitch';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTheme } from '../../module/redux/theme';\r\n\r\n// Header 컴포넌트의 css 정의\r\nconst HeaderBlock = styled.nav`\r\n  position: fixed;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.body};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  z-index: 10;\r\n  li {\r\n    list-style-type: none !important;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n  }\r\n  .header-mid {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .header-right {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .logo {\r\n    margin-left: 0.25rem;\r\n    margin-right: 0.25rem;\r\n    font-size: 1rem;\r\n    letter-spacing: 0.5px;\r\n    font-family: 'DancingScript';\r\n    font-weight: 700;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .menu {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .main-menu {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .menu div > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .main-menu {\r\n      display: none;\r\n    }\r\n    .all-menu p {\r\n      margin: 0.5rem 0.5rem 0;\r\n      color: ${({ theme }) => theme.hoverText};\r\n      font-family: 'Raleway';\r\n      font-weight: 600;\r\n    }\r\n    .all-menu li {\r\n      margin: 0;\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n  }\r\n  @media screen and (min-width: 501px) {\r\n    .all-menu {\r\n      display: none;\r\n    }\r\n  }\r\n  .btn-sign-in {\r\n    margin-right: 0.5rem;\r\n    margin-left: 1rem;\r\n  }\r\n  .user-info {\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .dropdown {\r\n    position: fixed;\r\n    z-index: 2000;\r\n  }\r\n  .dropdown.dropdown-menu {\r\n    width: 14rem;\r\n    top: 2.5rem;\r\n    background: ${({ theme }) => theme.dropdownBody};\r\n    color: ${({ theme }) => theme.text};\r\n    border: none;\r\n    border-radius: 3px;\r\n    box-shadow: ${({ theme }) =>\r\n      theme.body === '#fff'\r\n        ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n        : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n    font-size: 0.8rem;\r\n  }\r\n  .dropdown.dropdown-menu hr {\r\n    margin: 0 0.25rem;\r\n    border: 0;\r\n    height: 1px;\r\n    background: ${palette.gray[5]};\r\n  }\r\n  .dropdown.dropdown-menu ul {\r\n    padding: 0.5rem 0.25rem;\r\n    margin: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li {\r\n    margin-top: 0.25rem;\r\n    padding: 0.5rem;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  .dropdown.dropdown-menu li:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  .dropdown.dropdown-menu.dropdown-user-info {\r\n    width: 16rem;\r\n    right: 0.5rem;\r\n  }\r\n  .etc-menu,\r\n  .logout-menu {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .profile-menu p {\r\n    margin: 0.5rem 0.5rem 0;\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: 'Raleway';\r\n    font-weight: 600;\r\n  }\r\n  .profile-menu li {\r\n    margin: 0;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n  .profile-menu-mypage {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .logout-menu {\r\n    font-size: 0.9rem;\r\n  }\r\n  .dropdown.dropdown-search-input {\r\n    display: flex;\r\n    top: 2.75rem;\r\n    right: 6.625rem;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.55);\r\n  }\r\n  .none-user {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n// 메뉴 영역 컴포넌트\r\nconst Menu = styled.div`\r\n  &:first-child {\r\n    margin-left: 1rem;\r\n  }\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n  &:last-child {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\n// 반응형 검색 컴포넌트\r\nconst SearchResponsive = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    .search-input {\r\n      display: flex;\r\n    }\r\n    .search-btn {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    .search-input {\r\n      display: none;\r\n    }\r\n    .search-btn {\r\n      display: inherit;\r\n      color: ${({ theme }) => theme.text};\r\n      margin: 0 1rem;\r\n    }\r\n    .search-btn > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\n// 검색 컴포넌트 Wrapper\r\nconst SearchInputWrapper = styled.div`\r\n  height: 2rem;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n// 검색 컴포넌트의 input style 정의\r\nconst SearchInput = styled.input`\r\n  height: 1.875rem;\r\n  border: none;\r\n  border-top-left-radius: 3px;\r\n  border-bottom-left-radius: 3px;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  background: ${({ theme }) => theme.inputBody};\r\n  color: ${({ theme }) => theme.text};\r\n  &::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  &:focus {\r\n    outline: 2px solid ${palette.indigo[9]};\r\n  }\r\n`;\r\n\r\n// 검색 컴포넌트 드롭다운 버튼\r\nconst SearchBtn = styled(Link)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.btnSearchBody};\r\n  color: ${({ theme }) => theme.text};\r\n  border-top-right-radius: 3px;\r\n  border-bottom-right-radius: 3px;\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n`;\r\n\r\n// 기타메뉴 드롭다운 컴포넌트\r\nconst EtcDropDown = ({ state }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu\">\r\n        <div className=\"all-menu\">\r\n          <p>MAIN MENU</p>\r\n          <ul>\r\n            <Link to=\"/w\">\r\n              <li>WIKI</li>\r\n            </Link>\r\n            <Link to=\"/blog\">\r\n              <li>blog</li>\r\n            </Link>\r\n          </ul>\r\n          <hr />\r\n        </div>\r\n        <ul className=\"etc-menu\">\r\n          <Link to=\"/wiki/request\">\r\n            <li>작성이 필요한 문서[WIKI]</li>\r\n          </Link>\r\n          {/* <li>외부사이트 검색(구현 중...)</li>\r\n          <li>바코드 / QR코드 만들기(구현 중...)</li>\r\n          <li>실시간 검색어 순위(구현 중...)</li>\r\n          <li>TODO(구현 중...)</li> */}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nconst MemoizedEtcDropDown = React.memo(EtcDropDown);\r\n\r\n// 검색 컴포넌트 드롭다운 처리\r\nconst SearchDropDown = ({ state, currentPath }) => {\r\n  return (\r\n    state && (\r\n      <SearchInputPackage\r\n        type=\"dropdown dropdown-search-input\"\r\n        currentPath={currentPath}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\n// 유저 정보 드롭다운\r\nconst ProfileInfo = ({ user }) => {\r\n  return (\r\n    <div className=\"profile-menu\">\r\n      <p>{user.name}</p>\r\n      <ul>\r\n        <Link to={'/mypage'}>\r\n          <li className=\"profile-menu-mypage\">My Page</li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 옵션 메뉴 드롭다운\r\nconst OptionMenu = ({ isDarkTheme }) => {\r\n  const useStyles = makeStyles(() => ({\r\n    darkTheme: { fontFamily: 'Raleway' },\r\n  }));\r\n  const classes = useStyles();\r\n  // 다크 모드 상태 저장\r\n  const [darkTheme, setDarkTheme] = useState(false);\r\n  // 다크모드 액션 적용\r\n  const dispatch = useDispatch();\r\n  const handleDarkThemeToggle = () => {\r\n    dispatch(setTheme(!darkTheme));\r\n    try {\r\n      // 로컬스토리지에 다크모드 상태값 저장\r\n      localStorage.setItem('darkTheme', !darkTheme + '');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n    setDarkTheme(!darkTheme);\r\n  };\r\n  useEffect(() => {\r\n    if (isDarkTheme) {\r\n      setDarkTheme(true);\r\n    }\r\n  }, [isDarkTheme]);\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Typography component=\"div\">\r\n          <Grid\r\n            component=\"label\"\r\n            container\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            style={{\r\n              fontSize: '0.9rem',\r\n              fontFamily: 'sans-serif',\r\n              letterSpacing: '0',\r\n            }}\r\n          >\r\n            <Grid className={classes.darkTheme} item>\r\n              DARK THEME\r\n            </Grid>\r\n            <Grid item>\r\n              <DarkThemeSwitch\r\n                checked={darkTheme}\r\n                onChange={handleDarkThemeToggle}\r\n                name=\"darkTheme\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\n// 로그아웃 메뉴\r\nconst LogoutMenu = ({ onLogout, currentPath }) => (\r\n  <ul className=\"logout-menu\">\r\n    <Link to={currentPath} onClick={onLogout}>\r\n      <li>로그아웃</li>\r\n    </Link>\r\n  </ul>\r\n);\r\n\r\n// 로그인 상태일 때 옵션 메뉴\r\nconst UserDropDown = ({ state, user, onLogout, isDarkTheme, currentPath }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <ProfileInfo user={user} />\r\n        <hr />\r\n        <OptionMenu isDarkTheme={isDarkTheme} />\r\n        <hr />\r\n        <LogoutMenu onLogout={onLogout} currentPath={currentPath} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\n// 비로그인 상태일 때 옵션 메뉴\r\nconst NoneUserDropDown = ({ state, isDarkTheme }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <OptionMenu isDarkTheme={isDarkTheme} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\n// 검색 input과 액션 버튼을 패키징\r\nconst SearchInputPackage = ({\r\n  type,\r\n  searchQuery,\r\n  handleSearchInput,\r\n  handleSearchKeyUp,\r\n}) => (\r\n  <div className={type} tabIndex=\"-1\">\r\n    <SearchInputWrapper>\r\n      <SearchInput\r\n        placeholder=\"검색\"\r\n        value={searchQuery}\r\n        onChange={handleSearchInput}\r\n        onKeyUp={(event) => {\r\n          if (event.keyCode === 13) {\r\n            handleSearchKeyUp(searchQuery);\r\n          }\r\n        }}\r\n      />\r\n    </SearchInputWrapper>\r\n    <SearchBtn to={`/search?query=${searchQuery}`}>\r\n      <FontAwesomeIcon icon=\"search\" />\r\n    </SearchBtn>\r\n  </div>\r\n);\r\n\r\n// Header는 position 처리했으므로 공간을 띄워준다\r\nconst Spacer = styled.div`\r\n  height: 3rem;\r\n`;\r\n\r\nconst Header = ({\r\n  user,\r\n  onLogout,\r\n  isDarkTheme,\r\n  currentPath,\r\n  searchQuery,\r\n  handleSearchInput,\r\n  handleSearchKeyUp,\r\n}) => {\r\n  library.add([faSearch, faEllipsisH, faEllipsisV, faUserCircle]);\r\n  // 드롭다운 관련 핸들러\r\n  const [etc, setEtc] = useState(false);\r\n  const [search, setSearch] = useState(false);\r\n  const [userinfo, setUserinfo] = useState(false);\r\n  const [noneuser, setNoneUser] = useState(false);\r\n  const handleEtcToggle = () => {\r\n    setEtc((prevOpen) => !prevOpen);\r\n  };\r\n  const handleEtcClose = () => {\r\n    setEtc(false);\r\n  };\r\n  const handleSearchToggle = () => {\r\n    setSearch((prevOpen) => !prevOpen);\r\n  };\r\n  const handleSearchClose = () => {\r\n    setSearch(false);\r\n  };\r\n  const handleUserInfoToggle = () => {\r\n    setUserinfo((prevOpen) => !prevOpen);\r\n  };\r\n  const handleUserInfoClose = () => {\r\n    setUserinfo(false);\r\n  };\r\n  const handleNoneUserToggle = () => {\r\n    setNoneUser((prevOpen) => !prevOpen);\r\n  };\r\n  const handleNoneUserClose = () => {\r\n    setNoneUser(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\" className=\"logo\">\r\n            MAKE UP HARA\r\n          </Link>\r\n          <div className=\"menu\">\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/w\">WIKI</Link>\r\n            </Menu>\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/blog\">Blog</Link>\r\n            </Menu>\r\n            <ClickAwayListener onClickAway={handleEtcClose}>\r\n              <Menu>\r\n                <Link\r\n                  to={currentPath}\r\n                  onClick={handleEtcToggle}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </Link>\r\n                <MemoizedEtcDropDown state={etc} />\r\n              </Menu>\r\n            </ClickAwayListener>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-mid\">\r\n          <SearchResponsive>\r\n            <SearchInputPackage\r\n              type=\"search-input\"\r\n              searchQuery={searchQuery}\r\n              handleSearchInput={handleSearchInput}\r\n              handleSearchKeyUp={handleSearchKeyUp}\r\n            />\r\n          </SearchResponsive>\r\n        </div>\r\n        <div className=\"header-rigit\">\r\n          <SearchResponsive\r\n            style={{\r\n              display: 'inherit',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ClickAwayListener onClickAway={handleSearchClose}>\r\n              <div className=\"search-btn\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleSearchToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"search\" />\r\n                </Link>\r\n                <SearchDropDown state={search} currentPath={currentPath} />\r\n              </div>\r\n            </ClickAwayListener>\r\n          </SearchResponsive>\r\n          {user ? (\r\n            <ClickAwayListener onClickAway={handleUserInfoClose}>\r\n              <div className=\"user-info\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleUserInfoToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"user-circle\" size=\"lg\" />\r\n                </Link>\r\n                <UserDropDown\r\n                  state={userinfo}\r\n                  user={user}\r\n                  onLogout={onLogout}\r\n                  isDarkTheme={isDarkTheme}\r\n                  currentPath={currentPath}\r\n                />\r\n              </div>\r\n            </ClickAwayListener>\r\n          ) : (\r\n            <div className=\"none-user\">\r\n              <ClickAwayListener onClickAway={handleNoneUserClose}>\r\n                <div className=\"\">\r\n                  <Link to={currentPath} onClick={handleNoneUserToggle}>\r\n                    <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n                  </Link>\r\n                  <NoneUserDropDown\r\n                    state={noneuser}\r\n                    isDarkTheme={isDarkTheme}\r\n                  />\r\n                </div>\r\n              </ClickAwayListener>\r\n              <Button className=\"btn-sign-in\" transparent=\"true\" to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_INPUT = 'search/CHANGE_INPUT';\r\nconst CHANGE_OPTION = 'search/CHANGE_OPTION';\r\nconst INITIALIZE = 'search/INITIALIZE';\r\nconst INITIALIZE_OPTION = 'search/INITIALIZE_OPTION';\r\n\r\n/* action */\r\nexport const changeInput = createAction(CHANGE_INPUT, (value) => value);\r\nexport const changeOption = createAction(CHANGE_OPTION, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const initializeOption = createAction(INITIALIZE_OPTION);\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  query: '',\r\n  option: {\r\n    totalSort: '',\r\n    totalTerm: '',\r\n    wikiSort: '',\r\n    wikilength: '',\r\n    blogSort: '',\r\n    blogTerm: '',\r\n  },\r\n};\r\n\r\n/* reducer */\r\nconst search = handleActions(\r\n  {\r\n    [CHANGE_INPUT]: (state, { payload: value }) => ({ ...state, query: value }),\r\n    [CHANGE_OPTION]: (state, { payload: { key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft.option[key] = value;\r\n      }),\r\n    [INITIALIZE]: () => initialState,\r\n    [INITIALIZE_OPTION]: (state) => ({\r\n      ...state,\r\n      option: initialState.option,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default search;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../module/redux/user';\r\nimport Header from '../../components/common/Header';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { changeInput } from '../../module/redux/search';\r\n\r\nconst HeaderContainer = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { user, isDarkTheme, searchQuery } = useSelector(\r\n    ({ user, theme, search }) => ({\r\n      user: user.user,\r\n      isDarkTheme: theme.isDarkTheme,\r\n      searchQuery: search.query,\r\n    }),\r\n  );\r\n\r\n  const currentPath = location.pathname + location.search;\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleSearchKeyUp = (searchQuery) => {\r\n    history.push(`/search?query=${searchQuery}`);\r\n  };\r\n\r\n  const handleSearchInput = (event) => {\r\n    dispatch(changeInput(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <Header\r\n      user={user}\r\n      onLogout={onLogout}\r\n      isDarkTheme={isDarkTheme}\r\n      currentPath={currentPath}\r\n      searchQuery={searchQuery}\r\n      handleSearchInput={handleSearchInput}\r\n      handleSearchKeyUp={handleSearchKeyUp}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import styled from 'styled-components';\r\n\r\n/**\r\n * 다크모드 활성화에 따른 배경색 변경을 위한 컴포넌트\r\n */\r\n\r\nconst BodyBlock = styled.div`\r\n  position: fixed;\r\n  top: ${(props) => (props.includeHeader ? '3rem' : 0)};\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: ${({ theme }) => theme.body};\r\n  z-index: -1;\r\n`;\r\n\r\nexport default BodyBlock;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as wikiAPI from '../../lib/api/wiki';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// api - request list\r\nconst [\r\n  GET_REQUEST_LIST,\r\n  GET_REQUEST_LIST_SUCCESS,\r\n  GET_REQUEST_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_REQUEST_LIST');\r\n// edit - set title\r\nconst SET_TITLE = createRequestActionTypes('wiki/SET_TITLE');\r\n// edit - initialize\r\nconst INITIALIZE = 'wiki/INITIALIZE';\r\n// edit - change field\r\nconst CHANGE_FIELD = 'wiki/CHANGE_FIELD';\r\n// edit - write document\r\nconst [\r\n  WRITE_DOCUMENT,\r\n  WRITE_DOCUMENT_SUCCESS,\r\n  WRITE_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/WRITE_DOCUMENT');\r\n// api - read\r\nconst [\r\n  READ_DOCUMENT,\r\n  READ_DOCUMENT_SUCCESS,\r\n  READ_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/READ_DOCUMENT');\r\nconst UNLOAD_DOCUMENT = 'wiki/UNLOAD_DOCUMENT'; // 위키 문서 뷰 언마운트시 문서 정보 제거\r\nconst SET_ORIGINAL_DOCUMENT = 'wiki/SET_ORIGINAL_DOCUMENT'; // 위키 문서 편집 시 에디터에 문서 세팅\r\n// api - list\r\nconst [\r\n  GET_DOCUMENT_LIST,\r\n  GET_DOCUMENT_LIST_SUCCESS,\r\n  GET_DOCUMENT_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_LIST');\r\nconst UNLOAD_LIST = 'wiki/UNLOAD_LIST'; // 위키 리스트 뷰 언마운트시 document list 정보 제거\r\n// api - history list\r\nconst [\r\n  GET_HISTORY_LIST,\r\n  GET_HISTORY_LIST_SUCCESS,\r\n  GET_HISTORY_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_HISTORY_LIST');\r\n// api - search\r\nconst [\r\n  GET_SEARCH_LIST,\r\n  GET_SEARCH_LIST_SUCCESS,\r\n  GET_SEARCH_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_SEARCH_LIST');\r\n// api- search/direct\r\nconst [\r\n  GET_DIRECT_TITLE,\r\n  GET_DIRECT_TITLE_SUCCESS,\r\n  GET_DIRECT_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DIRECT_TITLE');\r\n// api - search/random\r\nconst [\r\n  GET_RANDOM_TITLE,\r\n  GET_RANDOM_TITLE_SUCCESS,\r\n  GET_RANDOM_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_RANDOM_TITLE');\r\n// api - document count\r\nconst [\r\n  GET_DOCUMENT_COUNT,\r\n  GET_DOCUMENT_COUNT_SUCCESS,\r\n  GET_DOCUMENT_COUNT_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_COUNT');\r\n// api = add barcode to document\r\nconst [\r\n  ADD_BARCODE_NUMBER,\r\n  ADD_BARCODE_NUMBER_SUCCESS,\r\n  ADD_BARCODE_NUMBER_FAILURE,\r\n] = createRequestActionTypes('wiki/ADD_BARCODE_NUMBER');\r\n\r\n/* action */\r\nexport const getRequestList = createAction(GET_REQUEST_LIST);\r\nexport const setTitle = createAction(SET_TITLE, (title) => title);\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writeDocument = createAction(WRITE_DOCUMENT, ({ id, body }) => ({\r\n  id,\r\n  body,\r\n}));\r\nexport const readDocument = createAction(READ_DOCUMENT, ({ id, r }) => ({\r\n  id,\r\n  r,\r\n}));\r\nexport const unloadDocument = createAction(UNLOAD_DOCUMENT);\r\nexport const setOriginalDocument = createAction(\r\n  SET_ORIGINAL_DOCUMENT,\r\n  (document) => document,\r\n);\r\nexport const getDocumentList = createAction(\r\n  GET_DOCUMENT_LIST,\r\n  (block) => block,\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\nexport const getHistoryList = createAction(GET_HISTORY_LIST, ({ id }) => ({\r\n  id,\r\n}));\r\nexport const getSearchList = createAction(\r\n  GET_SEARCH_LIST,\r\n  ({ query, oldest, shortest, longest, page, block }) => ({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  }),\r\n);\r\nexport const getDirectTitle = createAction(GET_DIRECT_TITLE, ({ query }) => ({\r\n  query,\r\n}));\r\nexport const getRandomTitle = createAction(GET_RANDOM_TITLE);\r\nexport const getDocumentCount = createAction(\r\n  GET_DOCUMENT_COUNT,\r\n  ({ username }) => ({ username }),\r\n);\r\nexport const addBarcodeNumber = createAction(\r\n  ADD_BARCODE_NUMBER,\r\n  ({ title, code }) => ({ title, code }),\r\n);\r\n\r\n/* redux-saga */\r\nconst getRequestListSaga = createRequestSaga(\r\n  GET_REQUEST_LIST,\r\n  wikiAPI.requestDocument,\r\n);\r\nconst writeDocumentSaga = createRequestSaga(\r\n  WRITE_DOCUMENT,\r\n  wikiAPI.writeDocument,\r\n);\r\nconst readDocumentSaga = createRequestSaga(READ_DOCUMENT, wikiAPI.readDocument);\r\nconst getDocumentListSaga = createRequestSaga(\r\n  GET_DOCUMENT_LIST,\r\n  wikiAPI.getDocumentList,\r\n);\r\nconst getHistoryListSaga = createRequestSaga(\r\n  GET_HISTORY_LIST,\r\n  wikiAPI.getHistoryList,\r\n);\r\nconst getSearchListSaga = createRequestSaga(\r\n  GET_SEARCH_LIST,\r\n  wikiAPI.getSearchList,\r\n);\r\nconst getDirectTitleSaga = createRequestSaga(\r\n  GET_DIRECT_TITLE,\r\n  wikiAPI.getDirectTitle,\r\n);\r\nconst getRandomTitleSaga = createRequestSaga(\r\n  GET_RANDOM_TITLE,\r\n  wikiAPI.getRandomTitle,\r\n);\r\nconst getDocumentCountSaga = createRequestSaga(\r\n  GET_DOCUMENT_COUNT,\r\n  wikiAPI.getDocumentCount,\r\n);\r\nconst addBarcodeNumberSaga = createRequestSaga(\r\n  ADD_BARCODE_NUMBER,\r\n  wikiAPI.addBarcodeNumber,\r\n);\r\n\r\nexport function* wikiSaga() {\r\n  yield takeLatest(GET_REQUEST_LIST, getRequestListSaga);\r\n  yield takeLatest(WRITE_DOCUMENT, writeDocumentSaga);\r\n  yield takeLatest(READ_DOCUMENT, readDocumentSaga);\r\n  yield takeLatest(GET_DOCUMENT_LIST, getDocumentListSaga);\r\n  yield takeLatest(GET_HISTORY_LIST, getHistoryListSaga);\r\n  yield takeLatest(GET_SEARCH_LIST, getSearchListSaga);\r\n  yield takeLatest(GET_DIRECT_TITLE, getDirectTitleSaga);\r\n  yield takeLatest(GET_RANDOM_TITLE, getRandomTitleSaga);\r\n  yield takeLatest(GET_DOCUMENT_COUNT, getDocumentCountSaga);\r\n  yield takeLatest(ADD_BARCODE_NUMBER, addBarcodeNumberSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: null,\r\n  titleError: null,\r\n  body: '',\r\n  document: null,\r\n  documentError: null,\r\n  editDocument: null,\r\n  editDocumentError: null,\r\n  requestList: [],\r\n  requestListError: null,\r\n  documentList: null,\r\n  documentListError: null,\r\n  historyList: null,\r\n  historyListError: null,\r\n  query: '',\r\n  searchList: [],\r\n  searchListError: null,\r\n  lastPage: 1,\r\n  directName: null,\r\n  directError: null,\r\n  randomTitle: null,\r\n  randomTitleError: null,\r\n  documentCount: 0,\r\n  documentCountError: null,\r\n  addBarcodeNumberResult: null,\r\n  addBarcodeNumberResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst wiki = handleActions(\r\n  {\r\n    [GET_REQUEST_LIST_SUCCESS]: (state, { payload: requestList }) => ({\r\n      ...state,\r\n      requestList,\r\n    }),\r\n    [GET_REQUEST_LIST_FAILURE]: (state, { payload: requestListError }) => ({\r\n      ...state,\r\n      requestListError,\r\n    }),\r\n    [SET_TITLE]: (state, { payload: title }) => ({\r\n      ...state,\r\n      title,\r\n    }),\r\n    [INITIALIZE]: (state) => ({\r\n      ...state,\r\n      title: null,\r\n      titleError: null,\r\n      body: '',\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n      query: '',\r\n      directName: null,\r\n      directError: null,\r\n      randomTitle: null,\r\n      randomTitleError: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키 값을 업데이트\r\n    }),\r\n    [WRITE_DOCUMENT_SUCCESS]: (state, { payload: editDocument }) => ({\r\n      ...state,\r\n      editDocument,\r\n    }),\r\n    [WRITE_DOCUMENT_FAILURE]: (state, { payload: editDocumentError }) => ({\r\n      ...state,\r\n      editDocumentError,\r\n    }),\r\n    [READ_DOCUMENT_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      document,\r\n    }),\r\n    [READ_DOCUMENT_FAILURE]: (state, { payload: documentError }) => ({\r\n      ...state,\r\n      documentError,\r\n    }),\r\n    [UNLOAD_DOCUMENT]: (state) => ({\r\n      ...state,\r\n      document: null,\r\n      documentError: null,\r\n    }),\r\n    [SET_ORIGINAL_DOCUMENT]: (state, { payload: document }) => ({\r\n      ...state,\r\n      title: document.title,\r\n      body: document.body,\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n    }),\r\n    [GET_DOCUMENT_LIST_SUCCESS]: (state, { payload: documentList }) => ({\r\n      ...state,\r\n      documentList,\r\n    }),\r\n    [GET_DOCUMENT_LIST_FAILURE]: (state, { payload: documentListError }) => ({\r\n      ...state,\r\n      documentListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      documentList: null,\r\n      documentListError: null,\r\n    }),\r\n    [GET_HISTORY_LIST_SUCCESS]: (state, { payload: historyList }) => ({\r\n      ...state,\r\n      historyList,\r\n    }),\r\n    [GET_HISTORY_LIST_FAILURE]: (state, { payload: historyListError }) => ({\r\n      ...state,\r\n      historyListError,\r\n    }),\r\n    [GET_SEARCH_LIST_SUCCESS]: (\r\n      state,\r\n      { payload: searchList, meta: response },\r\n    ) => ({\r\n      ...state,\r\n      searchList,\r\n      lastPage: parseInt(response.headers['makeuphara-wiki-last-page'], '10'),\r\n    }),\r\n    [GET_SEARCH_LIST_FAILURE]: (state, { payload: searchListError }) => ({\r\n      ...state,\r\n      searchListError,\r\n    }),\r\n    [GET_DIRECT_TITLE_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      directName: document.title.name,\r\n    }),\r\n    [GET_DIRECT_TITLE_FAILURE]: (state, { payload: directError }) => ({\r\n      ...state,\r\n      directError,\r\n    }),\r\n    [GET_RANDOM_TITLE_SUCCESS]: (state, { payload: title }) => ({\r\n      ...state,\r\n      randomTitle: title.name,\r\n    }),\r\n    [GET_RANDOM_TITLE_FAILURE]: (state, { payload: randomTitleError }) => ({\r\n      ...state,\r\n      randomTitleError,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_SUCCESS]: (state, { payload: documentCount }) => ({\r\n      ...state,\r\n      documentCount,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_FAILURE]: (state, { payload: documentCountError }) => ({\r\n      ...state,\r\n      documentCountError,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_SUCCESS]: (\r\n      state,\r\n      { payload: addBarcodeNumberResult },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResult,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_FAILURE]: (\r\n      state,\r\n      { payload: addBarcodeNumberResultError },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default wiki;\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const requestDocument = () => client.get('/api/wiki/request');\r\n\r\nexport const writeDocument = ({ id, body }) =>\r\n  client.post(`/api/wiki/write/${id}`, { body });\r\n\r\nexport const readDocument = ({ id, r }) => {\r\n  const queryString = qs.stringify({ r });\r\n  return client.get(`/api/wiki/${id}?${queryString}`);\r\n};\r\n\r\nexport const getDocumentList = (block) => {\r\n  const queryString = qs.stringify({ block });\r\n  return client.get(`/api/wiki/list?${queryString}`);\r\n};\r\n\r\nexport const getHistoryList = ({ id }) => client.get(`/api/wiki/${id}/history`);\r\n\r\nexport const getSearchList = ({\r\n  query,\r\n  oldest,\r\n  shortest,\r\n  longest,\r\n  page,\r\n  block,\r\n}) => {\r\n  const queryString = qs.stringify({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  });\r\n  return client.get(`/api/wiki/search?${queryString}`);\r\n};\r\n\r\nexport const getDirectTitle = ({ query }) => {\r\n  const queryString = qs.stringify({ query });\r\n  return client.get(`/api/wiki/search/direct?${queryString}`);\r\n};\r\n\r\nexport const getRandomTitle = () => client.get('/api/wiki/search/random');\r\n\r\nexport const getDocumentCount = ({ username }) =>\r\n  client.post('/api/wiki/doc/count', { username });\r\n\r\nexport const addBarcodeNumber = ({ title, code }) =>\r\n  client.patch(`/api/wiki/${title}/barcode`, { code });\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport SubInfo from '../post/common/SubInfo';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 최근 등록된 포스트 리스트\r\n */\r\n\r\nconst BlogSectionBlock = styled.div`\r\n  margin: 2rem;\r\n  color: ${({ theme }) => theme.text};\r\n  h3 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .footer {\r\n    font-family: 'Raleway';\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  & > a {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n        <SubInfo username={publisher.username} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst BlogSection = ({ postList, loading, postError }) => {\r\n  if (postError) {\r\n    return (\r\n      <ErrorBlock>\r\n        <span className=\"error-title\">블로그 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {postError.message}</span>\r\n      </ErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <BlogSectionBlock>\r\n      <h3>최근 등록된 포스트</h3>\r\n      {!loading && postList && (\r\n        <div>\r\n          {postList.map((post) => (\r\n            <PostItem post={post} key={post._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      <span className=\"footer\">\r\n        <Link to=\"/blog\">MORE POST...</Link>\r\n      </span>\r\n    </BlogSectionBlock>\r\n  );\r\n};\r\n\r\nexport default BlogSection;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 최근 변경된 위키문서 리스트\r\n */\r\n\r\nconst WikiSectionBlock = styled.div`\r\n  margin: 2rem;\r\n  color: ${({ theme }) => theme.text};\r\n  h3 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .footer {\r\n    font-family: 'Raleway';\r\n  }\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  font-family: 'NanumBarunGothic';\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = ({ document }) => {\r\n  const { title, publishedDate } = document;\r\n  const { name } = title;\r\n  return (\r\n    <DocumentBlock>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\">\r\n        <span>{moment(publishedDate).format('YYYY-MM-DD')}</span>\r\n      </div>\r\n    </DocumentBlock>\r\n  );\r\n};\r\n\r\nconst WikiSection = ({ documentList, loading, error }) => {\r\n  if (loading) {\r\n    return <LoadingProgress />;\r\n  }\r\n  if (error) {\r\n    return (\r\n      <ErrorBlock>\r\n        <span className=\"error-title\">WIKI 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {error.message}</span>\r\n      </ErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <WikiSectionBlock>\r\n      <h3>최근 변경된 위키 문서</h3>\r\n      {!loading && documentList && (\r\n        <div>\r\n          {documentList.map((document) => (\r\n            <DocumentItem document={document} key={document._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <span className=\"footer\">\r\n        <Link to=\"/wiki/list\">MORE WIKI...</Link>\r\n      </span>\r\n    </WikiSectionBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSection;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList as postUnload } from '../../module/redux/post';\r\nimport {\r\n  getDocumentList,\r\n  unloadList as wikiUnload,\r\n} from '../../module/redux/wiki';\r\nimport LoadingProgress from '../../components/common/LoadingProgress';\r\nimport BlogSection from '../../components/main/BlogSection';\r\nimport WikiSection from '../../components/main/WikiSection';\r\n\r\nconst MainContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    postList,\r\n    postError,\r\n    postLoading,\r\n    documentList,\r\n    documentError,\r\n    documentLoading,\r\n  } = useSelector(({ post, wiki, loading }) => ({\r\n    postList: post.postList,\r\n    postError: post.postListError,\r\n    postLoading: loading['post/GET_LIST'],\r\n    documentList: wiki.documentList,\r\n    documentError: wiki.documentListError,\r\n    documentLoading: loading['wiki/GET_DOCUMENT_LIST'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(getList({ block: 5 }));\r\n    dispatch(getDocumentList({ block: 5 }));\r\n    return () => {\r\n      dispatch(postUnload());\r\n      dispatch(wikiUnload());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (postLoading || documentLoading) {\r\n    return <LoadingProgress body />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BlogSection\r\n        postList={postList}\r\n        loading={postLoading}\r\n        error={postError}\r\n      />\r\n      <WikiSection\r\n        documentList={documentList}\r\n        loading={documentLoading}\r\n        error={documentError}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport MainContainer from '../../containers/main/MainContainer';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <MainContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import palette from './open-color';\r\n\r\nexport const lightTheme = {\r\n  /* Common */\r\n  body: '#fff',\r\n  text: palette.gray[9],\r\n  hoverText: palette.gray[6],\r\n  categoryBorder: palette.cyan[7],\r\n  themeColorBody: palette.cyan[7],\r\n  themeColorHoverBody: palette.cyan[5],\r\n  progressBar: palette.cyan[3],\r\n  progressBody: palette.cyan[1],\r\n  sliderTrack: palette.cyan[3],\r\n  sliderRail: palette.cyan[1],\r\n  /* Header */\r\n  hoverList: palette.gray[2],\r\n  inputBody: palette.gray[1],\r\n  placeholder: palette.gray[7],\r\n  btnSearchBody: palette.gray[1],\r\n  dropdownBody: '#fff',\r\n  /* AuthForm */\r\n  loginBody: palette.gray[2],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[7],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: palette.gray[7],\r\n  darkThemeSwitchTrack: palette.gray[5],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[4],\r\n  editorText: palette.gray[8],\r\n  editorTagComponentBorder: palette.gray[4],\r\n  editorTagBoxBorder: palette.gray[9],\r\n  editorTagTitle: palette.gray[8],\r\n  editorTagButtonBody: palette.gray[8],\r\n  editorHoverTagButtonBody: palette.gray[6],\r\n  editorTagButtonText: '#fff',\r\n  editorTagText: palette.gray[6],\r\n  /* Footer */\r\n  footerText: palette.gray[8],\r\n  /* Button */\r\n  btnBody: palette.gray[9],\r\n  btnHoverBody: palette.gray[7],\r\n  btnText: '#fff',\r\n  btnDisableBody: palette.cyan[2],\r\n  btnDisableColor: palette.gray[9],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[4],\r\n  postSubInfoText: palette.gray[6],\r\n  postSubInfoHoverText: palette.gray[7],\r\n  postTagText: palette.cyan[7],\r\n  postTagHoverText: palette.cyan[5],\r\n  postActionButtonText: palette.gray[7],\r\n  postActionButtonHoverText: palette.gray[6],\r\n  postActionButtonBody: palette.gray[2],\r\n  postActionButtonHoverBody: palette.gray[1],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[5],\r\n  wikiActionButtonBody: palette.gray[2],\r\n  wikiActionButtonHoverBody: palette.gray[1],\r\n  wikiActionButtonText: palette.gray[7],\r\n  wikitActionButtonHoverText: palette.gray[6],\r\n  wikiBorder: palette.gray[4],\r\n  wikiHistoryLinkText: palette.cyan[7],\r\n  wikiHistoryLinkHoverText: palette.cyan[5],\r\n  /* Error */\r\n  errorText: palette.red[5],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.cyan[0],\r\n  profileInputValid: palette.cyan[2],\r\n  profileInputInValid: palette.red[3],\r\n  /* Searck */\r\n  searchBorder: palette.gray[4],\r\n};\r\n\r\nexport const darkTheme = {\r\n  /* Common */\r\n  body: palette.gray[9],\r\n  text: '#fff',\r\n  hoverText: palette.gray[3],\r\n  categoryBorder: palette.violet[5],\r\n  themeColorBody: palette.violet[5],\r\n  themeColorHoverBody: palette.violet[3],\r\n  progressBar: palette.violet[3],\r\n  progressBody: palette.violet[1],\r\n  sliderTrack: palette.violet[3],\r\n  sliderRail: palette.violet[1],\r\n  /* Header */\r\n  hoverList: palette.gray[7],\r\n  inputBody: palette.gray[7],\r\n  placeholder: palette.gray[2],\r\n  btnSearchBody: palette.gray[8],\r\n  dropdownBody: palette.gray[9],\r\n  /* AuthForm */\r\n  loginBody: palette.gray[7],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[3],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: '#fff',\r\n  darkThemeSwitchTrack: palette.gray[2],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[5],\r\n  editorText: palette.gray[5],\r\n  editorTagComponentBorder: palette.gray[5],\r\n  editorTagBoxBorder: palette.gray[5],\r\n  editorTagTitle: palette.gray[6],\r\n  editorTagButtonBody: palette.gray[2],\r\n  editorHoverTagButtonBody: palette.gray[4],\r\n  editorTagButtonText: palette.gray[9],\r\n  editorTagText: palette.gray[4],\r\n  /* Footer */\r\n  footerText: palette.gray[2],\r\n  /* Button */\r\n  btnBody: '#fff',\r\n  btnHoverBody: palette.gray[4],\r\n  btnText: palette.gray[9],\r\n  btnDisableBody: palette.violet[3],\r\n  btnDisableColor: palette.gray[9],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[5],\r\n  postSubInfoText: palette.gray[5],\r\n  postSubInfoHoverText: palette.gray[4],\r\n  postTagText: palette.violet[7],\r\n  postTagHoverText: palette.violet[5],\r\n  postActionButtonText: palette.gray[5],\r\n  postActionButtonHoverText: palette.gray[3],\r\n  postActionButtonBody: palette.gray[8],\r\n  postActionButtonHoverBody: palette.gray[7],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[7],\r\n  wikiActionButtonBody: palette.gray[8],\r\n  wikiActionButtonHoverBody: palette.gray[7],\r\n  wikiActionButtonText: palette.gray[5],\r\n  wikitActionButtonHoverText: palette.gray[3],\r\n  wikiBorder: palette.gray[5],\r\n  wikiHistoryLinkText: palette.violet[7],\r\n  wikiHistoryLinkHoverText: palette.violet[5],\r\n  /* Error */\r\n  errorText: palette.red[9],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.violet[5],\r\n  profileInputValid: palette.violet[3],\r\n  profileInputInValid: palette.red[3],\r\n  /* Searck */\r\n  searchBorder: palette.gray[5],\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 로그인/회원가입 공통 컴포넌트\r\n */\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: ${({ theme }) => theme.loginBody};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    text-align: center;\r\n    padding-bottom: 2rem;\r\n    font-size: 1.25rem;\r\n    letter-spacing: 1px;\r\n  }\r\n  .logo-area > a {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .logo-area > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  box-shadow: 0 0 8px\r\n    ${({ theme }) =>\r\n      theme.body === '#fff' ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.5)'};\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: ${({ theme }) => theme.body};\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <ContentBox>\r\n        <div className=\"logo-area\">\r\n          <Link to=\"/\">MAKE UP HARA</Link>\r\n        </div>\r\n        {children}\r\n      </ContentBox>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React, { useEffect, useRef, useCallback } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Button, { buttonStyle } from '../common/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport palette from '../../lib/styles/open-color';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.text};\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.loginInputBorder};\r\n  }\r\n  .social-login {\r\n    button + a {\r\n      margin-top: 0.5rem;\r\n    }\r\n    a + button {\r\n      margin-top: 0.5rem;\r\n    }\r\n  }\r\n  input.possible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  input.impossible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    color: ${({ theme }) => theme.errorText};\r\n    font-size: 0.75rem;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 2px solid ${({ theme }) => theme.loginInputBorder};\r\n  padding-bottom: 0.5rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    border-bottom: 2px solid ${({ theme }) => theme.loginInputBorderFocus};\r\n    -webkit-transition: all 0.3s ease;\r\n    transition: all 0.3s ease;\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 1rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      text-decoration: underline !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst GoogleLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  border-radius: 0.375rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst socialBtnStyle = css`\r\n  border: none;\r\n  padding: 0;\r\n  display: block;\r\n  border-radius: 0.5rem;\r\n  img {\r\n    width: 100%;\r\n    display: flex;\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NaverLoginButton = styled.a`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst KakaoLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  signinGoogle: '구글로 로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${palette.red[9]};\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  error,\r\n  onSocialLogin,\r\n  validUsername,\r\n  validName,\r\n}) => {\r\n  const text = textMap[type];\r\n\r\n  // Login with Google\r\n  const googleLoginBtn = useRef(null);\r\n  const auth2 = useRef(null);\r\n\r\n  // Config Google Login API\r\n  const loadGoogleLoginApi = useCallback(() => {\r\n    // 로그인 버튼 이벤트 주입\r\n    const prepareLoginButton = () => {\r\n      auth2.current.attachClickHandler(\r\n        googleLoginBtn.current,\r\n        {},\r\n        (googleUser) => {\r\n          // const profile = googleUser.getBasicProfile();\r\n          // console.log('Token || ' + googleUser.getAuthResponse().id_token);\r\n          // console.log('ID: ' + profile.getId());\r\n          // console.log('Name: ' + profile.getName());\r\n          // console.log('Image URL: ' + profile.getImageUrl());\r\n          // console.log('Email: ' + profile.getEmail());\r\n\r\n          const id_token = googleUser.getAuthResponse().id_token;\r\n          onSocialLogin({ id_token });\r\n        },\r\n        (error) => {\r\n          // console.log(JSON.stringify(error, undefined, 2));\r\n        },\r\n      );\r\n    };\r\n\r\n    window['googleSDKLoaded'] = () => {\r\n      window['gapi'].load('auth2', () => {\r\n        auth2.current = window['gapi'].auth2.init({\r\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          cookiepolicy: 'single_host_origin',\r\n          scope: 'profile email',\r\n        });\r\n        prepareLoginButton();\r\n      });\r\n    };\r\n  }, [onSocialLogin]);\r\n\r\n  // 네이버 로그인 클릭 이벤트\r\n  const onNaverLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_NAVER_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_NAVER_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://nid.naver.com/oauth2.0/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // 카카오 로그인 클릭 이벤트\r\n  const onKakaoLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_KAKAO_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://kauth.kakao.com/oauth/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // Load Script\r\n  const loadScript = useCallback((document, script, id, srcValue) => {\r\n    const referenceNode = document.getElementsByTagName(script)[0];\r\n    if (document.getElementById(id)) {\r\n      return;\r\n    }\r\n    const googlejssdkNode = document.createElement(script);\r\n    googlejssdkNode.id = id;\r\n    googlejssdkNode.src = srcValue;\r\n    referenceNode.parentNode.insertBefore(googlejssdkNode, referenceNode);\r\n  }, []);\r\n\r\n  // 언마운트시 API 스크립트 제거\r\n  const removeApiScript = useCallback(() => {\r\n    const removeTag = (tagName, targetId) => {\r\n      const targetNode = document.getElementsByTagName(tagName);\r\n      [...targetNode].map(\r\n        (node) =>\r\n          node.src.indexOf(targetId) >= 0 && node.parentNode.removeChild(node),\r\n      );\r\n    };\r\n\r\n    removeTag('script', 'apis.google.com');\r\n\r\n    const removeJssdk = (id) => {\r\n      const sdkNode = document.getElementById(id);\r\n      if (sdkNode) {\r\n        sdkNode.parentNode.removeChild(sdkNode);\r\n      }\r\n    };\r\n\r\n    removeJssdk('google-jssdk');\r\n  }, []);\r\n\r\n  // 컴포넌트 업데이트시 소셜로그인 스크립트 로딩\r\n  // 언마운트시 스크립트 제거\r\n  useEffect(() => {\r\n    loadScript(\r\n      document,\r\n      'script',\r\n      'google-jssdk',\r\n      'https://apis.google.com/js/platform.js?onload=googleSDKLoaded',\r\n    );\r\n    loadGoogleLoginApi();\r\n\r\n    return () => {\r\n      removeApiScript();\r\n    };\r\n  }, [loadScript, removeApiScript, loadGoogleLoginApi]);\r\n\r\n  return (\r\n    <AuthFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          className={\r\n            type === 'register' &&\r\n            (validUsername.result === true\r\n              ? 'possible'\r\n              : validUsername.message !== '' && 'impossible')\r\n          }\r\n          name=\"username\"\r\n          placeholder=\"계정 이름\"\r\n          value={form.username}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' &&\r\n          validUsername.message &&\r\n          validUsername.message !== '' && (\r\n            <span className=\"invalid-message\">{validUsername.message}</span>\r\n          )}\r\n        <StyledInput\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          className={\r\n            type === 'register' &&\r\n            (form.password.length >= 8\r\n              ? 'possible'\r\n              : form.password !== '' && 'impossible')\r\n          }\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={form.password}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' &&\r\n          form.password.length < 8 &&\r\n          form.password.length > 0 && (\r\n            <span className=\"invalid-message\">8자 이상 입력해야 합니다.</span>\r\n          )}\r\n        {type === 'register' && (\r\n          <>\r\n            <StyledInput\r\n              type=\"password\"\r\n              autoComplete=\"new-password\"\r\n              className={\r\n                form.passwordConfirm.length >= 8 &&\r\n                form.passwordConfirm === form.password\r\n                  ? 'possible'\r\n                  : form.passwordConfirm !== '' && 'impossible'\r\n              }\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"비밀번호 확인\"\r\n              value={form.passwordConfirm}\r\n              onChange={onChange}\r\n            />\r\n            {form.passwordConfirm.length >= 8 &&\r\n              form.passwordConfirm !== form.password && (\r\n                <span className=\"invalid-message\">\r\n                  비밀번호가 일치하지 않습니다.\r\n                </span>\r\n              )}\r\n            <StyledInput\r\n              type=\"text\"\r\n              className={\r\n                type === 'register' &&\r\n                (validName.result === true\r\n                  ? 'possible'\r\n                  : validName.message !== '' && 'impossible')\r\n              }\r\n              name=\"name\"\r\n              placeholder=\"활동명\"\r\n              value={form.name}\r\n              onChange={onChange}\r\n            />\r\n            {type === 'register' &&\r\n              validName.message &&\r\n              validName.message !== '' && (\r\n                <span className=\"invalid-message\">{validName.message}</span>\r\n              )}\r\n          </>\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonWithMarginTop cyan fullWidth>\r\n          {text}\r\n        </ButtonWithMarginTop>\r\n      </form>\r\n      {type === 'login' && (\r\n        <div className=\"social-login\">\r\n          <hr />\r\n          <GoogleLoginButton fullWidth indigo ref={googleLoginBtn}>\r\n            <FontAwesomeIcon icon={faGoogle} />\r\n            {' ' + textMap['signinGoogle']}\r\n            <span> </span>\r\n          </GoogleLoginButton>\r\n          <NaverLoginButton transparent onClick={() => onNaverLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/naver_login_btn.png'}\r\n              alt=\"naver-login-btn\"\r\n            />\r\n          </NaverLoginButton>\r\n          <KakaoLoginButton transparent onClick={() => onKakaoLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/kakao_login_btn.png'}\r\n              alt=\"kakao-login-btn\"\r\n            />\r\n          </KakaoLoginButton>\r\n          <hr />\r\n        </div>\r\n      )}\r\n\r\n      <Footer>\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, debounce } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n  'auth/REGISTER',\r\n);\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n  'auth/LOGIN',\r\n);\r\nconst [\r\n  LOGIN_WITH_GOOGLE,\r\n  LOGIN_WITH_GOOGLE_SUCCESS,\r\n  LOGIN_WITH_GOOGLE_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_GOOGLE');\r\nconst [\r\n  LOGIN_WITH_NAVER,\r\n  LOGIN_WITH_NAVER_SUCCESS,\r\n  LOGIN_WITH_NAVER_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_NAVER');\r\nconst [\r\n  LOGIN_WITH_KAKAO,\r\n  LOGIN_WITH_KAKAO_SUCCESS,\r\n  LOGIN_WITH_KAKAO_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_KAKAO');\r\n// api - check username\r\nconst [\r\n  CHECK_EXIST_USERNAME,\r\n  CHECK_EXIST_USERNAME_SUCCESS,\r\n  CHECK_EXIST_USERNAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_USERNAME');\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_NAME');\r\n\r\n/* action */\r\nexport const changeFieid = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // register, login\r\n    key, // username, password, passwordConfirm\r\n    value, // 변경 하려는 값\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\nexport const register = createAction(\r\n  REGISTER,\r\n  ({ username, password, name }) => ({\r\n    username,\r\n    password,\r\n    name,\r\n  }),\r\n);\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const loginWithGoogle = createAction(\r\n  LOGIN_WITH_GOOGLE,\r\n  ({ id_token }) => ({ id_token }),\r\n);\r\nexport const loginWithNaver = createAction(\r\n  LOGIN_WITH_NAVER,\r\n  ({ client_id, client_secret, code, state }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  }),\r\n);\r\nexport const loginWithKakao = createAction(\r\n  LOGIN_WITH_KAKAO,\r\n  ({ client_id, client_secret, code, redirect_uri }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  }),\r\n);\r\nexport const checkExistUsername = createAction(\r\n  CHECK_EXIST_USERNAME,\r\n  (username) => username,\r\n);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\n\r\n/* redux-saga */\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nconst loginWithGoogleSaga = createRequestSaga(\r\n  LOGIN_WITH_GOOGLE,\r\n  authAPI.loginWithGoogle,\r\n);\r\nconst loginWithNaverSaga = createRequestSaga(\r\n  LOGIN_WITH_NAVER,\r\n  authAPI.loginWithNaver,\r\n);\r\nconst loginWithKakaoSaga = createRequestSaga(\r\n  LOGIN_WITH_KAKAO,\r\n  authAPI.loginWithKakao,\r\n);\r\nconst checkExistUsernameSaga = createRequestSaga(\r\n  CHECK_EXIST_USERNAME,\r\n  userAPI.checkExistUsername,\r\n);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(LOGIN_WITH_GOOGLE, loginWithGoogleSaga);\r\n  yield takeLatest(LOGIN_WITH_NAVER, loginWithNaverSaga);\r\n  yield takeLatest(LOGIN_WITH_KAKAO, loginWithKakaoSaga);\r\n  yield debounce(500, CHECK_EXIST_USERNAME, checkExistUsernameSaga);\r\n  yield debounce(500, CHECK_EXIST_NAME, checkExistNameSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    name: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  checkExistUsernameResult: null,\r\n  checkExistUsernameResultError: null,\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  auth: null,\r\n  authError: null,\r\n  registerResult: null,\r\n  registerResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n      registerResult: null,\r\n      registerResultError: null, // 폼 전환 시 회원인증 에러 초기화\r\n    }),\r\n    [REGISTER_SUCCESS]: (state, { payload: registerResult }) => ({\r\n      ...state,\r\n      registerResultError: null,\r\n      registerResult,\r\n    }),\r\n    [REGISTER_FAILURE]: (state, { payload: registerResultError }) => ({\r\n      ...state,\r\n      registerResultError,\r\n    }),\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_NAVER_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_NAVER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_SUCCESS]: (\r\n      state,\r\n      { payload: checkExistUsernameResult },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult,\r\n      checkExistUsernameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistUsernameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError,\r\n    }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  login,\r\n  loginWithGoogle,\r\n  initializeForm,\r\n} from '../../module/redux/auth';\r\nimport { check } from '../../module/redux/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  // 폼 데이터 변경 이벤트\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(changeFieid({ form: 'login', key: name, value }));\r\n    setError(null);\r\n  };\r\n\r\n  // submit 이벤트\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    if ([username, password].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  // 구글 로그인 이벤트\r\n  const onSocialLogin = ({ id_token }) => {\r\n    dispatch(loginWithGoogle({ id_token }));\r\n  };\r\n\r\n  // 로그인 성공/실페에 따른 처리\r\n  useEffect(() => {\r\n    // 로그인 실패 시 에러 메시지 출력\r\n    if (authError) {\r\n      if (authError.response.status === 401) {\r\n        setError('계정 또는 비밀번호가 일치하지 않습니다.');\r\n        return;\r\n      } else {\r\n        setError('로그인 실패: ' + authError);\r\n        return;\r\n      }\r\n    }\r\n    // 로그인 성공 시 check 액션을 통해 유저 정보를 리덕스 상태에 업데이트\r\n    if (auth) {\r\n      dispatch(check());\r\n      dispatch(initializeForm()); // 폼 입력 초기화\r\n    }\r\n    return () => {\r\n      dispatch(initializeForm()); // 언마운트 시 폼 입력 초기화\r\n    };\r\n  }, [auth, authError, dispatch]);\r\n\r\n  // 로그인 성공시 유저 정보 세션에 저장 후 페이지 리다이렉션\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/');\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n      onSocialLogin={onSocialLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport LoginForm from '../../containers/auth/LoginForm';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>로그인 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  register,\r\n  initializeForm,\r\n  checkExistUsername,\r\n  checkExistName,\r\n} from '../../module/redux/auth';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    form,\r\n    isNotExistUsername,\r\n    isNotExistUsernameError,\r\n    isNotExistName,\r\n    isNotExistNameError,\r\n    registerResult,\r\n    registerResultError,\r\n  } = useSelector(({ auth }) => ({\r\n    form: auth.register,\r\n    isNotExistUsername: auth.checkExistUsernameResult,\r\n    isNotExistUsernameError: auth.checkExistUsernameResultError,\r\n    isNotExistName: auth.checkExistNameResult,\r\n    isNotExistNameError: auth.checkExistNameResultError,\r\n    registerResult: auth.registerResult,\r\n    registerResultError: auth.registerResultError,\r\n  }));\r\n\r\n  const [validUsername, setValidUsername] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n  const [validName, setValidName] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n\r\n  // 폼 데이터 변경 이벤트\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(changeFieid({ form: 'register', key: name, value }));\r\n    setError(null);\r\n    if (name === 'username') {\r\n      setValidUsername({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    } else if (name === 'name') {\r\n      setValidName({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  // submit 이벤트\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password, passwordConfirm, name } = form;\r\n    // 하나라도 비어 있다면\r\n    if ([username, password, passwordConfirm].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    // 비밀번호가 일치하지 않는다면\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      dispatch(changeFieid({ form: 'register', key: 'password', value: '' }));\r\n      dispatch(\r\n        changeFieid({ form: 'register', key: 'passwordConfirm', value: '' }),\r\n      );\r\n      return;\r\n    }\r\n    dispatch(register({ username, password, name }));\r\n  };\r\n\r\n  const isLoading = useRef(true);\r\n  // 컴포넌트가 처음 렌더링 될 때  form을 초기화함\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n    isLoading.current = false;\r\n  }, [dispatch]);\r\n\r\n  // 비동기 계정명 중복 체크\r\n  useEffect(() => {\r\n    if (isLoading.current) return;\r\n    if (form.username !== '') {\r\n      dispatch(checkExistUsername({ username: form.username }));\r\n    }\r\n  }, [isLoading, dispatch, form.username]);\r\n\r\n  // 비동기 이름 중복 체크\r\n  useEffect(() => {\r\n    if (isLoading.current) return;\r\n    const { username, name } = form;\r\n    if (name === '') return;\r\n    if (\r\n      !isNotExistUsername ||\r\n      (isNotExistUsername && !isNotExistUsername.result)\r\n    ) {\r\n      setValidName({\r\n        result: false,\r\n        message: '계정 이름이 유효하지 않습니다.',\r\n      });\r\n      return;\r\n    } else {\r\n      dispatch(checkExistName({ username, name }));\r\n    }\r\n  }, [isLoading, dispatch, form, isNotExistUsername]);\r\n\r\n  // 계정명 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistUsernameError) {\r\n      setValidUsername({\r\n        result: false,\r\n        message: '인증 서버 연결에 실패했습니다.',\r\n      });\r\n    } else if (!isNotExistUsername) return;\r\n    else if (isNotExistUsername.result) {\r\n      setValidUsername({ result: true, message: '' });\r\n    } else {\r\n      setValidUsername({\r\n        result: false,\r\n        message: isNotExistUsername ? isNotExistUsername.message : '',\r\n      });\r\n    }\r\n  }, [isNotExistUsername, isNotExistUsernameError]);\r\n\r\n  // 이름 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistNameError) {\r\n      setValidName({\r\n        result: false,\r\n        message: '인증 서버 연결에 실패했습니다.',\r\n      });\r\n    } else if (!isNotExistName) return;\r\n    else if (isNotExistName.result) {\r\n      setValidName({ result: true, message: '' });\r\n    } else {\r\n      setValidName({\r\n        result: false,\r\n        message: isNotExistName ? isNotExistName.message : '',\r\n      });\r\n    }\r\n  }, [isNotExistName, isNotExistNameError]);\r\n  // 회원가입 성공/실패 처리\r\n  useEffect(() => {\r\n    if (registerResultError) {\r\n      // 계정명이 이미 존재할 때\r\n      if (registerResultError.response.status === 409) {\r\n        setError('이미 존재하는 계정입니다.');\r\n        return;\r\n      }\r\n      // 기타 이유\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n    if (registerResult) {\r\n      history.replace('/login');\r\n    }\r\n  }, [registerResult, registerResultError, dispatch, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      validUsername={validUsername}\r\n      validName={validName}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport RegisterForm from '../../containers/auth/RegisterForm';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>회원가입 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 에디터 하단 Footer\r\n */\r\n\r\nconst EditorFooterBlock = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 2rem;\r\n  width: inherit;\r\n  padding-bottom: 1.25rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: ${({ theme }) => theme.body};\r\n  font-family: 'Raleway';\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n\r\n  .title > a {\r\n    color: ${({ theme }) => theme.footerText};\r\n  }\r\n  .title > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    -webkit-transition: all 0.5s ease;\r\n    transition: all 0.5s ease;\r\n  }\r\n  .editor-name {\r\n    color: ${({ theme }) => theme.footerText};\r\n  }\r\n  .editor-name > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    -webkit-transition: all 0.5s ease;\r\n    transition: all 0.5s ease;\r\n  }\r\n`;\r\n\r\nconst EditorFooter = ({ type = 'blog' }) => {\r\n  const editorName = type === 'blog' ? 'BLOG' : 'WIKI';\r\n  const editorHref = type === 'blog' ? '/blog' : '/wiki';\r\n  return (\r\n    <EditorFooterBlock>\r\n      <div className=\"title\">\r\n        <Link to=\"/\">MAKE UP HARA</Link>\r\n      </div>\r\n      <div className=\"editor-name\">\r\n        <Link to={editorHref}>{editorName}</Link>\r\n        <span>&nbsp;EDITOR</span>\r\n      </div>\r\n    </EditorFooterBlock>\r\n  );\r\n};\r\n\r\nexport default EditorFooter;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../../common/Responsive';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.debug('error');\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding: 5rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 2rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${({ theme }) => theme.editorTitleBorder};\r\n  background: ${({ theme }) => theme.body};\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    color: ${({ theme }) => theme.editorText};\r\n    left: 0;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ title, body, onChangeField }) => {\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '포스트 작성...',\r\n      modules: {\r\n        imageResize: {\r\n          modules: ['Resize', 'DisplaySize'],\r\n        },\r\n        // 참고: https://quilljs.com/docs/modules/toolbar/\r\n        toolbar: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ indent: '-1' }, { indent: '+1' }],\r\n          [{ align: [] }],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          ['video'],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n          ['clean'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  /* useRef를 사용하여 에디터 내 편집할 데이터 삽입 */\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  const onChangeTitle = (e) => {\r\n    onChangeField({ key: 'title', value: e.target.value });\r\n  };\r\n  return (\r\n    <EditorBlock>\r\n      <TitleInput\r\n        placeholder=\"포스트 제목\"\r\n        value={title}\r\n        onChange={onChangeTitle}\r\n      />\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initialize } from '../../../module/redux/post';\r\nimport { useEffect } from 'react';\r\nimport Editor from '../../../components/post/write/Editor';\r\n\r\nconst EditorContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body } = useSelector(({ post }) => ({\r\n    title: post.title,\r\n    body: post.body,\r\n  }));\r\n  // 액션함수를 토대로 이벤트 정의\r\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [\r\n    dispatch,\r\n  ]);\r\n  // 언마운트될 때 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default EditorContainer;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid ${({ theme }) => theme.editorTagComponentBorder};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${({ theme }) => theme.editorTagTitle};\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${({ theme }) => theme.editorTagBoxBorder};\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n    min-width: 0;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    padding: 0 1rem;\r\n    background: ${({ theme }) => theme.editorTagButtonBody};\r\n    color: ${({ theme }) => theme.editorTagButtonText};\r\n    &:hover {\r\n      background: ${({ theme }) => theme.editorHoverTagButtonBody};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin-right: 0.5rem;\r\n  color: ${({ theme }) => theme.editorTagText};\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n  <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n));\r\n\r\nconst TagList = React.memo(({ tags, onRemove }) => (\r\n  <TagListBlock>\r\n    {tags.map(tag => (\r\n      <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n    ))}\r\n  </TagListBlock>\r\n));\r\n\r\nconst TagBox = ({ tags, onChangeTags }) => {\r\n  const [input, setInput] = useState('');\r\n  const [localTags, setLocalTags] = useState([]);\r\n\r\n  const insertTag = useCallback(\r\n    tag => {\r\n      if (!tag) return;\r\n      if (localTags.includes(tag)) return;\r\n      const nextTags = [...localTags, tag];\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    tag => {\r\n      const nextTags = localTags.filter(t => t !== tag);\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\n\r\n  const onChange = useCallback(e => {\r\n    setInput(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      insertTag(input.trim());\r\n      setInput('');\r\n    },\r\n    [input, insertTag],\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLocalTags(tags);\r\n  }, [tags]);\r\n\r\n  return (\r\n    <TagBoxBlock>\r\n      <h4>태그</h4>\r\n      <TagForm onSubmit={onSubmit}>\r\n        <input placeholder=\"태그 입력...\" onChange={onChange} value={input} />\r\n        <button type=\"submit\">추가</button>\r\n      </TagForm>\r\n      <TagList tags={localTags} onRemove={onRemove} />\r\n    </TagBoxBlock>\r\n  );\r\n};\r\n\r\nexport default TagBox;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField } from '../../../module/redux/post';\r\nimport TagBox from '../../../components/post/write/TagBox';\r\n\r\nconst TagBoxContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const tags = useSelector(state => state.post.tags);\r\n\r\n  // 이벤트 정의\r\n  const onChangeTags = nextTags => {\r\n    dispatch(changeField({ key: 'tags', value: nextTags }));\r\n  };\r\n\r\n  return <TagBox onChangeTags={onChangeTags} tags={tags} />;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\n\r\n/**\r\n * 에디터 작성버튼\r\n */\r\n\r\nconst WriteActionButtonsBlock = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 4rem;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n`;\r\n\r\nconst WriteActionButtons = ({ type = 'blog', isEdit, onClick, onCancel }) => {\r\n  const editorName = type === 'blog' ? '포스트' : '위키';\r\n  return (\r\n    <WriteActionButtonsBlock>\r\n      <StyledButton cyan onClick={onClick}>\r\n        {editorName} {isEdit ? '수정' : '등록'}\r\n      </StyledButton>\r\n      <StyledButton red onClick={onCancel}>\r\n        취소\r\n      </StyledButton>\r\n    </WriteActionButtonsBlock>\r\n  );\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { writePost, updatePost } from '../../../module/redux/post';\r\nimport WriteActionButtons from '../../../components/common/editor/WriteActionButtons';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    title,\r\n    body,\r\n    tags,\r\n    editPost,\r\n    editPostError,\r\n    targetPostId,\r\n  } = useSelector(({ post }) => ({\r\n    title: post.title,\r\n    body: post.body,\r\n    tags: post.tags,\r\n    editPost: post.editPost,\r\n    editPostError: post.editPostError,\r\n    targetPostId: post.targetPostId,\r\n  }));\r\n  // 이벤트 정의\r\n  // 포스트 등록\r\n  const onPublish = () => {\r\n    if (targetPostId) {\r\n      dispatch(updatePost({ id: targetPostId, title, body, tags }));\r\n    } else {\r\n      dispatch(writePost({ title, body, tags }));\r\n    }\r\n  };\r\n  // 취소\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n  // 처리 후 작업\r\n  useEffect(() => {\r\n    if (editPost) {\r\n      const { _id, publisher } = editPost;\r\n      history.push(`/blog/@${publisher.username}/${_id}`);\r\n    }\r\n    if (editPostError) {\r\n      // TODO: Failure Write Post\r\n    }\r\n  }, [history, editPost, editPostError]);\r\n\r\n  return (\r\n    <WriteActionButtons\r\n      onClick={onPublish}\r\n      onCancel={onCancel}\r\n      isEdit={!!targetPostId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from 'react';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport EditorFooter from '../../components/common/editor/EditorFooter';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport EditorContainer from '../../containers/post/write/EditorContainer';\r\nimport TagBoxContainer from '../../containers/post/write/TagBoxContainer';\r\nimport WriteActionButtonsContainer from '../../containers/post/write/WriteActionButtonsContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PostWritePage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>POST 작성 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <TagBoxContainer />\r\n      <WriteActionButtonsContainer />\r\n      <EditorFooter />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(PostWritePage);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport SubInfo from './common/SubInfo';\r\nimport Tags from './common/Tags';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst PostViewerErrorBlock = styled(ErrorBlock)`\r\n  margin: 3rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 2rem;\r\n  h1 {\r\n    font-size: 1.5rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 570px;\r\n  }\r\n  .ql-align-left {\r\n    text-align: left;\r\n  }\r\n  .ql-align-center {\r\n    text-align: center;\r\n  }\r\n  .ql-align-right {\r\n    text-align: right;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    .ql-video {\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostViewer = ({ post, loading, error, actionButtons }) => {\r\n  // 에러 처리\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return (\r\n        <PostViewerErrorBlock>\r\n          <span className=\"error-title\">존재하지 않는 포스트입니다.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </PostViewerErrorBlock>\r\n      );\r\n    } else {\r\n      return (\r\n        <PostViewerErrorBlock>\r\n          <span className=\"error-title\">포스트 요청 실패.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </PostViewerErrorBlock>\r\n      );\r\n    }\r\n  }\r\n  // 로딩 중이거나 아직 포스트 데이터가 없을 때\r\n  if (loading || !post) {\r\n    return <LoadingProgress body />;\r\n  }\r\n  // 렌더링 데이터\r\n  const { title, body, tags, publisher, publishedDate } = post;\r\n  return (\r\n    <PostViewerBlock>\r\n      <Helmet>\r\n        <title>{title} - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <PostHead>\r\n        <h1>{title}</h1>\r\n        <SubInfo\r\n          hasMarginTop\r\n          username={publisher.username}\r\n          publishedDate={publishedDate}\r\n        />\r\n        <Tags tags={tags} />\r\n      </PostHead>\r\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\r\n      {actionButtons}\r\n    </PostViewerBlock>\r\n  );\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n/**\r\n * 공통 모달 컴포넌트\r\n */\r\n\r\nconst FullScreen = styled.div`\r\n  position: fixed;\r\n  z-index: 30;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${({ theme }) =>\r\n    theme.body === '#fff' ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.45)'};\r\n  font-family: 'NanumBarunGothic';\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n/**\r\n * 확인/취소 모달 스타일\r\n */\r\nconst AskModalBlock = styled.div`\r\n  width: 320px;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: ${({ theme }) =>\r\n    theme.body === '#fff'\r\n      ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n      : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n  }\r\n  p {\r\n    margin-bottom: 3rem;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\n/**\r\n * 싱글 input 모달 스타일\r\n */\r\nconst SingleInputModalBlock = styled.div`\r\n  width: 320px;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: ${({ theme }) =>\r\n    theme.body === '#fff'\r\n      ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n      : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n  }\r\n  p {\r\n    margin-bottom: 1rem;\r\n  }\r\n  .single-input-form {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  .result {\r\n    font-size: 0.9rem;\r\n  }\r\n  .result.success {\r\n    color: ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .result.failure {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\n// 공통 버튼\r\nconst StyledButton = styled(Button)`\r\n  height: 2rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\n// input 텍스트필드\r\nconst StyledTextField = styled(TextField)`\r\n  &.MuiTextField-root {\r\n    margin-bottom: 1rem;\r\n    width: 8rem;\r\n  }\r\n  .MuiFormLabel-root {\r\n    font-family: 'Raleway';\r\n    letter-spacing: 2px;\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  .MuiFormLabel-root.Mui-focused {\r\n    color: ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .MuiInput-underline:hover:not(.Mui-disabled):before {\r\n    border-bottom: 2px solid ${({ theme }) => theme.themeColorHoverBody};\r\n  }\r\n  .MuiInput-underline:before {\r\n    border-bottom: 1px solid ${({ theme }) => theme.text};\r\n  }\r\n  .MuiInput-underline:after {\r\n    border-bottom: 2px solid ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .MuiInputBase-input {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .MuiInputBase-input::placeholder {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const AskModal = ({\r\n  className,\r\n  visible,\r\n  title,\r\n  description,\r\n  confirmText = '확인',\r\n  cancelText = '취소',\r\n  onConfirm,\r\n  onCancel,\r\n}) => {\r\n  return (\r\n    visible && (\r\n      <Fade in={visible}>\r\n        <FullScreen className={className}>\r\n          <AskModalBlock>\r\n            <h2>{title}</h2>\r\n            <p>{description}</p>\r\n            <div className=\"buttons\">\r\n              <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n              <StyledButton themeColor onClick={onConfirm}>\r\n                {confirmText}\r\n              </StyledButton>\r\n            </div>\r\n          </AskModalBlock>\r\n        </FullScreen>\r\n      </Fade>\r\n    )\r\n  );\r\n};\r\n\r\nexport const SingleInputModal = ({\r\n  className,\r\n  visible,\r\n  title,\r\n  description,\r\n  inputLabel,\r\n  inputName,\r\n  placeholder,\r\n  submitText = '확인',\r\n  cancelText = '닫기',\r\n  onSubmit,\r\n  onCancel,\r\n  onChange,\r\n  value,\r\n  error,\r\n  resultMessage,\r\n}) => {\r\n  const { success, failure } = resultMessage;\r\n  return (\r\n    visible && (\r\n      <Fade in={visible}>\r\n        <FullScreen className={className}>\r\n          <SingleInputModalBlock>\r\n            <h2>{title}</h2>\r\n            <p>{description}</p>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"single-input-form\">\r\n                <StyledTextField\r\n                  id=\"standard-basic\"\r\n                  label={inputLabel}\r\n                  name={inputName}\r\n                  require=\"true\"\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={error}\r\n                  placeholder={placeholder}\r\n                />\r\n                <div className=\"buttons\">\r\n                  <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n                  <StyledButton themeColor onClick={onSubmit}>\r\n                    {submitText}\r\n                  </StyledButton>\r\n                </div>\r\n              </div>\r\n              {success !== '' && (\r\n                <span className=\"result success\">{success}</span>\r\n              )}\r\n              {failure !== '' && (\r\n                <span className=\"result failure\">{failure}</span>\r\n              )}\r\n            </form>\r\n          </SingleInputModalBlock>\r\n        </FullScreen>\r\n      </Fade>\r\n    )\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AskModal } from '../common/Modal';\r\n\r\nconst AskRemoveModal = ({ className, visible, onConfirm, onCancel }) => {\r\n  return (\r\n    <AskModal\r\n      className={className}\r\n      visible={visible}\r\n      title=\"DELETE POST\"\r\n      description=\"정말 POST를 삭제하시겠습니까?\"\r\n      confirmText=\"삭제\"\r\n      onConfirm={onConfirm}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport AskRemoveModal from './AskRemoveModal';\r\n\r\nconst PostActionButtionsBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 2rem;\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  color: ${({ theme }) => theme.postActionButtonText};\r\n  background: ${({ theme }) => theme.postActionButtonBody};\r\n  font-weight: 600;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n  &:hover {\r\n    color: ${({ theme }) => theme.postActionButtonHoverText};\r\n    background: ${({ theme }) => theme.postActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst PostActionButtions = ({ onEdit, onRemove }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const onRemoveClick = () => {\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    onRemove();\r\n  };\r\n\r\n  /* 모달 영역 밖 클릭시 모달 닫기 */\r\n  useEffect(() => {\r\n    window.onclick = event => {\r\n      if (\r\n        !!event.target.className.includes &&\r\n        event.target.className.includes('modal')\r\n      ) {\r\n        setModal(false);\r\n      }\r\n    };\r\n    // 언마운트시 이벤트 제거\r\n    return () => {\r\n      window.onclick = () => {};\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PostActionButtionsBlock>\r\n        <ActionButton onClick={onEdit}>수정</ActionButton>\r\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n      </PostActionButtionsBlock>\r\n      <AskRemoveModal\r\n        className=\"modal\"\r\n        visible={modal}\r\n        onConfirm={onConfirm}\r\n        onCancel={onCancel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostActionButtions;\r\n","import React, { useEffect } from 'react';\r\nimport PostViewer from '../../components/post/PostViewer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { readPost, unloadPost, setOriginalPost } from '../../module/redux/post';\r\nimport PostActionButtions from '../../components/post/PostActionButtions';\r\nimport { removePost } from '../../lib/api/post';\r\n\r\nconst PostViewerContainer = ({ match, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { postId } = match.params;\r\n  const { post, error, loading, user } = useSelector(\r\n    ({ post, loading, user }) => ({\r\n      post: post.post,\r\n      error: post.postError,\r\n      loading: loading['post/READ_POST'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n\r\n  // 이벤트 정의\r\n  const onEdit = () => {\r\n    dispatch(setOriginalPost(post));\r\n    history.push('/blog/write');\r\n  };\r\n\r\n  const onRemove = async () => {\r\n    try {\r\n      await removePost(postId);\r\n      history.push('/blog');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(readPost(postId));\r\n    // 언마운트 될 때 포스트 데이터 제거\r\n    return () => {\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, postId]);\r\n\r\n  const isPublisher =\r\n    (post && post.publisher.username) === (user && user.username);\r\n\r\n  return (\r\n    <PostViewer\r\n      post={post}\r\n      loading={loading}\r\n      error={error}\r\n      actionButtons={\r\n        isPublisher && (\r\n          <PostActionButtions onEdit={onEdit} onRemove={onRemove} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport PostViewerContainer from '../../containers/post/PostViewerContainer';\r\n\r\nconst PostPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PostListContainer = loadable(() =>\r\n  import('../../containers/post/PostListContainer'),\r\n);\r\n\r\nconst PostListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostListPage;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithNaver } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithNaverPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, state, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_NAVER_CLIENT_SECRET;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithNaver({ client_id, client_secret, code, state }));\r\n  }, [dispatch, client_id, client_secret, code, state]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithNaverPage);\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithKakao } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithKakaoPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_KAKAO_CLIENT_SECRET;\r\n  const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithKakao({ client_id, client_secret, redirect_uri, code }));\r\n  }, [dispatch, client_id, client_secret, code, redirect_uri]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithKakaoPage);\r\n","import React from 'react';\r\nimport { SingleInputModal } from '../common/Modal';\r\n\r\n/**\r\n * 바코드 등록 모달\r\n */\r\n\r\nconst InputBarcodeModal = ({\r\n  className,\r\n  visible,\r\n  onSubmit,\r\n  onCancel,\r\n  onChange,\r\n  value,\r\n  error,\r\n  resultMessage,\r\n}) => {\r\n  return (\r\n    <SingleInputModal\r\n      className={className}\r\n      visible={visible}\r\n      title=\"바코드 등록\"\r\n      description=\"바코드 번호를 등록할 수 있습니다.\"\r\n      inputLabel=\"BARCODE\"\r\n      inputName=\"barcode\"\r\n      placeholder=\"13자리 바코드 번호\"\r\n      submitText=\"코드 등록\"\r\n      onSubmit={onSubmit}\r\n      onCancel={onCancel}\r\n      onChange={onChange}\r\n      value={value}\r\n      error={error}\r\n      resultMessage={resultMessage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputBarcodeModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport InputBarcodeModal from './InputBarcodeModal';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 위키 뷰어 컴포넌트\r\n */\r\n\r\nconst WikiViewerBlock = styled.div``;\r\n\r\nconst WikiViewerErrorBlock = styled(ErrorBlock)`\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 85vh;\r\n`;\r\n\r\nconst DocumentMenuBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  & > button,\r\n  & > a {\r\n    padding: 0.25rem 0.75rem;\r\n    outline: none;\r\n    border: none;\r\n    border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  & > a {\r\n    padding-top: 0.3rem;\r\n    font-size: 0.8rem;\r\n    align-items: center;\r\n  }\r\n  li {\r\n    list-style: square !important;\r\n  }\r\n`;\r\n\r\nconst DocumentMenu = ({\r\n  onEdit,\r\n  docName,\r\n  handleBarcodeChange,\r\n  handleBarcodeSubmit,\r\n  barcode,\r\n  inputBarcodeError,\r\n  resultMessage,\r\n  availableBarcode,\r\n}) => {\r\n  const [modal, setModal] = useState(false);\r\n  const handleInputCodeButtonClick = () => {\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  /* 모달 영역 밖 클릭시 모달 닫기 */\r\n  useEffect(() => {\r\n    window.onclick = (event) => {\r\n      if (\r\n        !!event.target.className.includes &&\r\n        event.target.className.includes('modal')\r\n      ) {\r\n        setModal(false);\r\n      }\r\n    };\r\n    // 언마운트시 이벤트 제거\r\n    return () => {\r\n      window.onclick = () => {};\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {availableBarcode && (\r\n        <button onClick={handleInputCodeButtonClick}>코드 등록</button>\r\n      )}\r\n      <button onClick={onEdit}>편집</button>\r\n      <Link to={`/wiki/history/${docName}`}>역사</Link>\r\n      <InputBarcodeModal\r\n        className=\"modal\"\r\n        visible={modal}\r\n        onSubmit={handleBarcodeSubmit}\r\n        onChange={handleBarcodeChange}\r\n        value={barcode}\r\n        onCancel={onCancel}\r\n        error={inputBarcodeError}\r\n        resultMessage={resultMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst DocumentBlock = styled(Responsive)`\r\n  margin: 1rem auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst TitleBlock = styled.div`\r\n  h2 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  p {\r\n    font-family: 'NanumBarunGothic';\r\n    text-align: right;\r\n  }\r\n  hr {\r\n    background: ${({ theme }) => theme.wikiMenuBorder};\r\n    border: 0;\r\n    height: 1px;\r\n  }\r\n`;\r\n\r\nconst BodyBlock = styled.div`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst DocumentContent = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  p {\r\n    margin-top: 0.25rem;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 570px;\r\n  }\r\n  .ql-align-left {\r\n    text-align: left;\r\n  }\r\n  .ql-align-center {\r\n    text-align: center;\r\n  }\r\n  .ql-align-right {\r\n    text-align: right;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    .ql-video {\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WikiViewer = ({\r\n  document,\r\n  error,\r\n  loading,\r\n  onEdit,\r\n  docName,\r\n  handleBarcodeChange,\r\n  handleBarcodeSubmit,\r\n  barcode,\r\n  inputBarcodeError,\r\n  resultMessage,\r\n  availableBarcode,\r\n}) => {\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return (\r\n        <WikiViewerBlock>\r\n          <DocumentBlock>\r\n            <TitleBlock>\r\n              <h2>{docName}</h2>\r\n            </TitleBlock>\r\n            <DocumentContent>존재하지 않는 위키 문서입니다.</DocumentContent>\r\n          </DocumentBlock>\r\n        </WikiViewerBlock>\r\n      );\r\n    } else {\r\n      return (\r\n        <WikiViewerErrorBlock>\r\n          <span className=\"error-title\">문서 요청 실패.</span>\r\n          <span>\r\n            Status: <span className=\"error-msg\">{error.response.status}</span>\r\n          </span>\r\n          <span>\r\n            Message:{' '}\r\n            <span className=\"error-msg\">{error.response.statusText}</span>\r\n          </span>\r\n        </WikiViewerErrorBlock>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loading || !document) {\r\n    return <LoadingProgress customHeight={80} />;\r\n  }\r\n  const { title, body, publishedDate } = document;\r\n\r\n  return (\r\n    <WikiViewerBlock>\r\n      {title && (\r\n        <Helmet>\r\n          <title>{title.name} - MAKE UP HARA</title>\r\n        </Helmet>\r\n      )}\r\n      <DocumentMenuBlock>\r\n        <DocumentMenu\r\n          onEdit={onEdit}\r\n          docName={docName}\r\n          handleBarcodeChange={handleBarcodeChange}\r\n          handleBarcodeSubmit={handleBarcodeSubmit}\r\n          barcode={barcode}\r\n          inputBarcodeError={inputBarcodeError}\r\n          resultMessage={resultMessage}\r\n          availableBarcode={availableBarcode}\r\n        />\r\n      </DocumentMenuBlock>\r\n      <DocumentBlock>\r\n        <TitleBlock>\r\n          <h2>{title && title.name}</h2>\r\n          <p>\r\n            최근 수정시각: {moment(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n          </p>\r\n          <hr />\r\n        </TitleBlock>\r\n        <BodyBlock>\r\n          <DocumentContent dangerouslySetInnerHTML={{ __html: body }} />\r\n        </BodyBlock>\r\n      </DocumentBlock>\r\n    </WikiViewerBlock>\r\n  );\r\n};\r\n\r\nexport default WikiViewer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport WikiViewer from '../../components/wiki/WikiViewer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  readDocument,\r\n  unloadDocument,\r\n  setOriginalDocument,\r\n  addBarcodeNumber,\r\n} from '../../module/redux/wiki';\r\nimport qs from 'qs';\r\n\r\nconst WikiViewerContainer = ({ location, match, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { docName } = match.params;\r\n  const { document, error, loading, result, resultError, user } = useSelector(\r\n    ({ wiki, user, loading }) => ({\r\n      document: wiki.document,\r\n      error: wiki.documentError,\r\n      loading: loading['wiki/READ_DOCUMENT'],\r\n      result: wiki.addBarcodeNumberResult,\r\n      resultError: wiki.addBarcodeNumberResultError,\r\n      user: user.user,\r\n    }),\r\n  );\r\n  const { r } = qs.parse(location.search, { ignoreQueryPrefix: true });\r\n\r\n  const [barcode, setBarcode] = useState('');\r\n  const [inputBarcodeError, setInputBarcodeError] = useState(false);\r\n  const [resultMessage, setResultMessage] = useState({\r\n    success: '',\r\n    failure: '',\r\n  });\r\n  const [availableBarcode, setAvailableBarcode] = useState(false);\r\n\r\n  // 이벤트 정의\r\n  const onEdit = () => {\r\n    dispatch(setOriginalDocument(document));\r\n    history.push('/wiki/edit');\r\n  };\r\n\r\n  const handleBarcodeChange = (event) => {\r\n    const data = event.target.value;\r\n    // 14자 이후로는 허용 안함\r\n    if (data.length < 14) {\r\n      setBarcode(event.target.value);\r\n    }\r\n    // 검증\r\n    if ((data.length > 0 && data.length < 13) || isNaN(data)) {\r\n      setInputBarcodeError(true);\r\n    } else {\r\n      setInputBarcodeError(false);\r\n    }\r\n    // 결과 메시지 초기화\r\n    setResultMessage({\r\n      success: '',\r\n      failure: '',\r\n    });\r\n  };\r\n\r\n  // 바코드 등록 submit 이벤트\r\n  const handleBarcodeSubmit = (event) => {\r\n    event.preventDefault();\r\n    // 검증 성공시 액션 디스패치\r\n    if (!inputBarcodeError && barcode !== '') {\r\n      dispatch(addBarcodeNumber({ title: document.title.name, code: barcode }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (docName) {\r\n      dispatch(readDocument({ id: docName, r }));\r\n    } else {\r\n      history.replace('/w/MAKE UP HARA WIKI: 대문');\r\n    }\r\n    // 언마운트 될 때 포스트 데이터 제거\r\n    return () => {\r\n      dispatch(unloadDocument());\r\n      setBarcode('');\r\n    };\r\n  }, [dispatch, history, docName, r]);\r\n\r\n  useEffect(() => {\r\n    if (user) setAvailableBarcode(true);\r\n    else setAvailableBarcode(false);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (result == null && resultError == null) {\r\n      return;\r\n    }\r\n    if (result) {\r\n      if (!result.error) {\r\n        setResultMessage({\r\n          success: '바코드 번호가 등록되었습니다!',\r\n          failure: '',\r\n        });\r\n      } else {\r\n        setResultMessage({\r\n          success: '',\r\n          failure: result.message,\r\n        });\r\n      }\r\n    } else if (resultError) {\r\n      if (resultError.response.status === 401) {\r\n        setResultMessage({\r\n          success: '',\r\n          failure: '로그인 후 등록할 수 있습니다.',\r\n        });\r\n      } else {\r\n        setResultMessage({\r\n          success: '',\r\n          failure: resultError.message,\r\n        });\r\n      }\r\n    }\r\n  }, [result, resultError]);\r\n\r\n  return (\r\n    <WikiViewer\r\n      document={document}\r\n      error={error}\r\n      loading={loading}\r\n      onEdit={onEdit}\r\n      docName={docName}\r\n      handleBarcodeChange={handleBarcodeChange}\r\n      handleBarcodeSubmit={handleBarcodeSubmit}\r\n      barcode={barcode}\r\n      inputBarcodeError={inputBarcodeError}\r\n      resultMessage={resultMessage}\r\n      user={user}\r\n      availableBarcode={availableBarcode}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiViewerContainer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faRandom,\r\n  faArrowRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n/**\r\n * 위키 검색 컴포넌트\r\n * 랜덤 문서 이동, 다이렉트 이동 구현\r\n */\r\n\r\nconst WikiSearchBlock = styled.div`\r\n  margin-top: 0.125rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n`;\r\n\r\nconst SearchBlock = styled.div`\r\n  display: flex;\r\n  flex: none;\r\n  color: ${({ theme }) => theme.text};\r\n  a {\r\n    padding: 0.375rem 0.75rem;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n    }\r\n  }\r\n  .action-button {\r\n    display: flex;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 0 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  flex-grow: 1;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  ::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background: ${({ theme }) => theme.body};\r\n  outline: none;\r\n  padding: 0.375rem 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst WikiSearch = ({ onChangeField, onSearch, onDirect, onShuffle }) => {\r\n  library.add([faSearch, faRandom, faArrowRight]);\r\n\r\n  const handleChange = (e) => {\r\n    onChangeField({ key: 'query', value: e.target.value });\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) {\r\n      return onSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WikiSearchBlock>\r\n      <SearchBlock>\r\n        <SearchButton onClick={onShuffle}>\r\n          <FontAwesomeIcon icon=\"random\" />\r\n        </SearchButton>\r\n        <SearchInput\r\n          onChange={handleChange}\r\n          onKeyUp={handleKeyUp}\r\n          placeholder=\"위키 문서 검색\"\r\n        />\r\n        <span className=\"action-button\">\r\n          <SearchButton onClick={onSearch}>\r\n            <FontAwesomeIcon icon=\"search\" />\r\n          </SearchButton>\r\n          <SearchButton onClick={onDirect}>\r\n            <FontAwesomeIcon icon=\"arrow-right\" />\r\n          </SearchButton>\r\n        </span>\r\n      </SearchBlock>\r\n    </WikiSearchBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSearch;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport WikiSearch from '../../components/wiki/WikiSearch';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  getDirectTitle,\r\n  initialize,\r\n  getRandomTitle,\r\n} from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiSearchContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 설정 불러오기\r\n  const { query, directName, randomTitle } = useSelector(({ wiki }) => ({\r\n    query: wiki.query,\r\n    directName: wiki.directName,\r\n    randomTitle: wiki.randomTitle,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  const onSearch = () => {\r\n    if (query === '') {\r\n      history.push('/wiki/list');\r\n    } else {\r\n      history.push(`/wiki/list?query=${query}`);\r\n    }\r\n  };\r\n\r\n  const onDirect = () => {\r\n    dispatch(getDirectTitle({ query }));\r\n  };\r\n\r\n  const onShuffle = () => {\r\n    dispatch(getRandomTitle());\r\n  };\r\n\r\n  // 다이렉트 이동\r\n  useEffect(() => {\r\n    if (directName) {\r\n      history.push(`/w/${directName}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, directName]);\r\n\r\n  // 랜덤 문서 이동\r\n  useEffect(() => {\r\n    if (randomTitle) {\r\n      history.push(`/w/${randomTitle}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, randomTitle]);\r\n\r\n  return (\r\n    <WikiSearch\r\n      onChangeField={onChangeField}\r\n      onSearch={onSearch}\r\n      onDirect={onDirect}\r\n      onShuffle={onShuffle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiSearchContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiViewerContainer from '../../containers/wiki/WikiViewerContainer';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\n\r\nconst WikiPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiPage;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../../common/Responsive';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.debug('error');\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding: 1rem 0;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst TitleBlock = styled.div`\r\n  margin-top: 2rem;\r\n  h5 {\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  .title {\r\n    font-size: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  padding: 3rem 0;\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 400px;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    color: ${({ theme }) => theme.editorText};\r\n    left: 0;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ onChangeField, title, body }) => {\r\n  let localTitle;\r\n  try {\r\n    localTitle = title || JSON.parse(sessionStorage.getItem('wiki-title'));\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '문서 작성...',\r\n      modules: {\r\n        imageResize: {\r\n          modules: ['Resize', 'DisplaySize'],\r\n        },\r\n        // 참고: https://quilljs.com/docs/modules/toolbar/\r\n        toolbar: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ align: [] }],\r\n          [{ indent: '-1' }, { indent: '+1' }],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          ['video'],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n          ['clean'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  /* useRef를 사용하여 에디터 내 편집할 데이터 삽입 */\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  return (\r\n    <EditorBlock>\r\n      <TitleBlock>\r\n        <h5>문서 제목</h5>\r\n        <span className=\"title\">{localTitle.name}</span>\r\n      </TitleBlock>\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport Editor from '../../../components/wiki/edit/Editor';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initialize, changeField } from '../../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst EditorContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body } = useSelector(({ wiki }) => ({\r\n    title: wiki.title,\r\n    body: wiki.body,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n  try {\r\n    if (title) {\r\n      sessionStorage.setItem('wiki-title', JSON.stringify(title));\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n\r\n  // 언마운트 될 때 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  // 세션스토리지를 이용하여 위키 타이틀 상태 저장\r\n  if (!title && !sessionStorage.getItem('wiki-title')) {\r\n    history.push('/wiki');\r\n    return null;\r\n  }\r\n\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default withRouter(EditorContainer);\r\n","import React, { useEffect } from 'react';\r\nimport WriteActionButtons from '../../../components/common/editor/WriteActionButtons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { writeDocument } from '../../../module/redux/wiki';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  // 액션함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body, editDocument, editDocumentError } = useSelector(\r\n    ({ wiki }) => ({\r\n      title: wiki.title,\r\n      body: wiki.body,\r\n      editDocument: wiki.editDocument,\r\n      editDocumentError: wiki.editDocumentError,\r\n    }),\r\n  );\r\n  let localTitle;\r\n  try {\r\n    localTitle = title || JSON.parse(sessionStorage.getItem('wiki-title'));\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n  const { _id } = localTitle;\r\n  // 이벤트 정의\r\n  // 문서 등록\r\n  const onPublish = () => {\r\n    dispatch(writeDocument({ id: _id, body }));\r\n  };\r\n  // 취소\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n  // 처리 후 작업\r\n  useEffect(() => {\r\n    if (editDocument) {\r\n      const { name } = editDocument;\r\n      history.replace(`/w/${name}`);\r\n      history.goBack();\r\n    }\r\n    if (editDocumentError) {\r\n      // TODO: Failure Write Document\r\n    }\r\n    try {\r\n      sessionStorage.getItem('wiki-title');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }, [history, editDocument, editDocumentError]);\r\n  return (\r\n    <WriteActionButtons type=\"wiki\" onClick={onPublish} onCancel={onCancel} />\r\n  );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport EditorContainer from '../../containers/wiki/edit/EditorContainer';\r\nimport EditorFooter from '../../components/common/editor/EditorFooter';\r\nimport WriteActionButtonsContainer from '../../containers/wiki/edit/WriteActionButtonsContainer';\r\n\r\nconst WikiEditPage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>WIKI 에디터 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <EditorFooter type=\"wiki\" />\r\n      <WriteActionButtonsContainer />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiEditPage);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 작성 가능한 위키 문서 목록 컴포넌트\r\n */\r\n\r\nconst WikiRequestBlock = styled.div`\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  h2 {\r\n    font-weight: 500;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    button {\r\n      padding: 0.25rem 0.5rem;\r\n      margin-left: 3rem;\r\n      border: none;\r\n      outline: none;\r\n      font-size: 0.875rem;\r\n      cursor: pointer;\r\n      color: ${({ theme }) => theme.wikiActionButtonText};\r\n      background: ${({ theme }) => theme.wikiActionButtonBody};\r\n      &:hover {\r\n        color: ${({ theme }) => theme.wikiActionButtonHoverText};\r\n        background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst WikiRequestErrorBlock = styled(ErrorBlock)`\r\n  margin-top: 3rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst RequestItem = ({ title, onEdit }) => {\r\n  const { name } = title;\r\n  return (\r\n    <div className=\"item\">\r\n      <span>{name}</span>\r\n      <button onClick={() => onEdit(title)}>작성하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WikiRequest = ({ requestList, loading, error, onEdit }) => {\r\n  if (error) {\r\n    return (\r\n      <Responsive>\r\n        <WikiRequestErrorBlock>\r\n          <span className=\"error-title\">리스트 요청 실패.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </WikiRequestErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  if (!requestList || loading) {\r\n    return <LoadingProgress body />;\r\n  }\r\n  if (!requestList.length) {\r\n    return (\r\n      <Responsive>\r\n        <WikiRequestErrorBlock>\r\n          <span className=\"error-title\">\r\n            지금 작성이 필요한 문서가 없습니다...ㅠ\r\n          </span>\r\n        </WikiRequestErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <WikiRequestBlock>\r\n        <h2>작성이 필요한 문서</h2>\r\n        {requestList.map((request) => (\r\n          <RequestItem title={request} onEdit={onEdit} key={request._id} />\r\n        ))}\r\n      </WikiRequestBlock>\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default WikiRequest;\r\n","import React, { useEffect } from 'react';\r\nimport WikiRequest from '../../components/wiki/WikiRequest';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRequestList, setTitle } from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiRequestContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n\r\n  // 전역 상태 불러오기\r\n  const { requestList, loading, error } = useSelector(({ wiki, loading }) => ({\r\n    requestList: wiki.requestList,\r\n    loading: loading['wiki/GET_REQUEST_LIST'],\r\n    error: wiki.requestListError,\r\n  }));\r\n\r\n  // 이벤트 정의\r\n  const onEdit = title => {\r\n    dispatch(setTitle(title));\r\n    history.push('/wiki/edit');\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getRequestList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <WikiRequest\r\n      requestList={requestList}\r\n      loading={loading}\r\n      error={error}\r\n      onEdit={onEdit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiRequestContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiRequestContainer from '../../containers/wiki/WikiRequestContainer';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst WikiRequestPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>작성이 필요한 문서 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiRequestContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiRequestPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 위키 문서 역사 리스트 컴포넌트\r\n */\r\n\r\nconst WikiHistoryBlock = styled(Responsive)`\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  .title {\r\n    margin: 1rem 0;\r\n    font-size: 2rem;\r\n    font-weight: 300;\r\n    & > span {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  .item {\r\n    margin: 0.25rem 0;\r\n  }\r\n  .item .item-link {\r\n    font-size: 0.8rem;\r\n    margin-left: 0.5rem;\r\n    color: ${({ theme }) => theme.wikiHistoryLinkText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.wikiHistoryLinkHoverText};\r\n    }\r\n  }\r\n  .item .item-revision {\r\n    font-weight: 700;\r\n    margin-left: 3rem;\r\n  }\r\n`;\r\n\r\nconst HistoryErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst HistoryItem = ({ document }) => {\r\n  const { title, publishedDate, revision } = document;\r\n  return (\r\n    <div className=\"item\">\r\n      <span className=\"item-date\">\r\n        {moment(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n      </span>\r\n      <Link to={`/w/${title.name}?r=${revision}`} className=\"item-link\">\r\n        (보기)\r\n      </Link>\r\n      <span className=\"item-revision\">(r{revision})</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WikiHistory = ({ historyList, error, loading, docName }) => {\r\n  if (error) {\r\n    return (\r\n      <WikiHistoryBlock>\r\n        <HistoryErrorBlock>\r\n          <span className=\"error-title\">히스토리 요청 실패.</span>\r\n          <span>\r\n            Status: <span className=\"error-msg\">{error.response.status}</span>\r\n          </span>\r\n          <span>\r\n            Message:{' '}\r\n            <span className=\"error-msg\">{error.response.statusText}</span>\r\n          </span>\r\n        </HistoryErrorBlock>\r\n      </WikiHistoryBlock>\r\n    );\r\n  }\r\n  if (!historyList || loading) {\r\n    return <LoadingProgress customHeight={80} />;\r\n  }\r\n\r\n  return (\r\n    <WikiHistoryBlock>\r\n      <span className=\"title\">\r\n        <Link to=\"#\">{docName}</Link>\r\n        <span>(문서 역사)</span>\r\n      </span>\r\n      {historyList.map((document) => (\r\n        <HistoryItem document={document} key={document._id} />\r\n      ))}\r\n    </WikiHistoryBlock>\r\n  );\r\n};\r\n\r\nexport default WikiHistory;\r\n","import React, { useEffect } from 'react';\r\nimport WikiHistory from '../../components/wiki/WikiHistory';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getHistoryList } from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiHistoryContainer = ({ match }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 변수 불러오기\r\n  const { historyList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    historyList: wiki.historyList,\r\n    error: wiki.historyListError,\r\n    loading: loading['wiki/GET_HISTORY_LIST'],\r\n  }));\r\n  const { docName } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(getHistoryList({ id: docName }));\r\n  }, [dispatch, docName]);\r\n\r\n  return (\r\n    <WikiHistory\r\n      historyList={historyList}\r\n      error={error}\r\n      loading={loading}\r\n      docName={docName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiHistoryContainer);\r\n","import React from 'react';\r\nimport WikiHistoryContainer from '../../containers/wiki/WikiHistoryContainer';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst WikiHistoryPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>문서 역사 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiHistoryContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiHistoryPage;\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 위키 검색결과 리스트 컴포넌트\r\n * 인피니티 스크롤 구현\r\n */\r\n\r\nconst WikiListBlock = styled.div`\r\n  margin: 2rem;\r\n  margin-top: 0;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst WikiListErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:first-of-type {\r\n    border-top: none;\r\n  }\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = forwardRef((props, ref) => {\r\n  const { name } = props.document;\r\n  return (\r\n    <DocumentBlock ref={ref}>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\"></div>\r\n    </DocumentBlock>\r\n  );\r\n});\r\n\r\nconst ScrollProgress = styled(LinearProgress)`\r\n  &.MuiLinearProgress-colorPrimary {\r\n    background-color: ${({ theme }) => theme.progressBar};\r\n  }\r\n  .MuiLinearProgress-barColorPrimary {\r\n    background-color: ${({ theme }) => theme.progressBody};\r\n  }\r\n`;\r\n\r\nconst WikiList = ({\r\n  documentList,\r\n  error,\r\n  loading,\r\n  lastDocumentRef,\r\n  isLastPage,\r\n}) => {\r\n  if (error) {\r\n    return (\r\n      <WikiListErrorBlock>\r\n        <span className=\"error-title\">검색 결과 요청 실패.</span>\r\n        <span>\r\n          Status: <span className=\"error-msg\">{error.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">{error.response.statusText}</span>\r\n        </span>\r\n      </WikiListErrorBlock>\r\n    );\r\n  }\r\n  if (loading && documentList.length === 0) {\r\n    return <LoadingProgress customHeight={70} />;\r\n  }\r\n  if (!loading && documentList && !documentList.length) {\r\n    return (\r\n      <WikiListErrorBlock>\r\n        <span className=\"error-title\">검색 결과가 없습니다.</span>\r\n        <span className=\"error-title\">\r\n          다른 검색어를 입력해보는건 어떨까요???\r\n        </span>\r\n      </WikiListErrorBlock>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WikiListBlock>\r\n      <Helmet>\r\n        <title>WIKI LIST - MAKE UP HARA</title>\r\n      </Helmet>\r\n      {documentList && (\r\n        <div>\r\n          {documentList.map((document, index) =>\r\n            index !== documentList.length - 1 ? (\r\n              <DocumentItem document={document} key={document._id} />\r\n            ) : (\r\n              <DocumentItem\r\n                document={document}\r\n                key={document._id}\r\n                ref={lastDocumentRef}\r\n              />\r\n            ),\r\n          )}\r\n          {documentList.length > 0 && !isLastPage && <ScrollProgress />}\r\n        </div>\r\n      )}\r\n    </WikiListBlock>\r\n  );\r\n};\r\n\r\nexport default WikiList;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n/**\r\n * 카테고리 컴포넌트\r\n */\r\n\r\nconst Category = styled(NavLink)`\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  font-family: 'NanumBarunGothic';\r\n  font-weight: lighter;\r\n\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid ${({ theme }) => theme.categoryBorder};\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Category from '../common/Category';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 위키 검색결과 정렬 카테고리\r\n */\r\n\r\nconst categories = [\r\n  {\r\n    name: 'normal',\r\n    text: '위키 문서',\r\n  },\r\n  {\r\n    name: 'oldest',\r\n    text: 'OLDEST',\r\n  },\r\n  {\r\n    name: 'shortest',\r\n    text: '짧은 내용',\r\n  },\r\n  {\r\n    name: 'longest',\r\n    text: '긴 내용',\r\n  },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n  margin: 2rem;\r\n  margin-bottom: 0;\r\n  padding-top: 0.1rem;\r\n  line-height: 3;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  @media screen and (max-width: 768px) {\r\n    overflow-x: auto;\r\n  }\r\n`;\r\n\r\nconst Categories = ({ location }) => {\r\n  const { query, oldest, shortest, longest } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  // 카테고리 중 쿼리에 해당하는 것 하나만 활성화하기 위한 핸들링 함수\r\n  const handleActive = (name) => {\r\n    if (name === 'oldest' && oldest === 'true') return true;\r\n    if (name === 'shortest' && shortest === 'true') return true;\r\n    if (name === 'longest' && longest === 'true') return true;\r\n    if (\r\n      name === 'normal' &&\r\n      oldest === undefined &&\r\n      shortest === undefined &&\r\n      longest === undefined\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <CategoriesBlock>\r\n      {categories.map((category) => (\r\n        <Category\r\n          key={category.name}\r\n          activeClassName=\"active\"\r\n          exact={true}\r\n          isActive={() => handleActive(category.name)}\r\n          to={\r\n            category.name === 'normal'\r\n              ? `/wiki/list?${qs.stringify({ query: query })}`\r\n              : `/wiki/list?${qs.stringify({ query: query })}&${\r\n                  category.name\r\n                }=true`\r\n          }\r\n        >\r\n          {category.text}\r\n        </Category>\r\n      ))}\r\n    </CategoriesBlock>\r\n  );\r\n};\r\n\r\nexport default withRouter(Categories);\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport WikiList from '../../components/wiki/WikiList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSearchList } from '../../module/redux/wiki';\r\nimport qs from 'qs';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Categories from '../../components/wiki/Categories';\r\n\r\n// 한가지 조건만 쿼리요청할 수 있도록 제어\r\nconst isValidQuery = (oldest, shortest, longest) => {\r\n  if (oldest !== undefined && shortest !== undefined) {\r\n    return false;\r\n  }\r\n  if (shortest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  if (oldest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  if (oldest !== undefined && shortest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst WikiListContainer = ({ location, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 설정 불러오기\r\n  const { searchList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    searchList: wiki.searchList,\r\n    error: wiki.searchListError,\r\n    loading: loading['wiki/GET_SEARCH_LIST'],\r\n  }));\r\n  const { query, oldest, shortest, longest } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const page = useRef(1);\r\n  const [documentList, setDocumentList] = useState([]); // 검색 결과 문서 리스트\r\n  const [isLastPage, setIsLastPage] = useState(false); // 마지막 페이지 여부\r\n  const [active, setActive] = useState(false); // 언마운트시 API 요청 결과를 무시한다\r\n\r\n  // 이벤트 정의하기\r\n  // 문서 리스트 업데이트\r\n  useEffect(() => {\r\n    if (searchList && active && !loading) {\r\n      setIsLastPage(searchList.length === 0 ? true : false);\r\n      setDocumentList((element) => [...element, ...searchList]);\r\n    }\r\n  }, [searchList, active, loading]);\r\n\r\n  // 쿼리 요청\r\n  useEffect(() => {\r\n    setDocumentList([]);\r\n    if (isValidQuery(oldest, shortest, longest)) {\r\n      page.current = 1;\r\n      dispatch(getSearchList({ query, oldest, shortest, longest }));\r\n      setActive(true);\r\n    } else {\r\n      history.replace(`/wiki/list?query=${query}`);\r\n    }\r\n  }, [dispatch, history, query, oldest, shortest, longest]);\r\n\r\n  // 인피니티 스크롤 핸들링\r\n  const lastDocumentRef = useRef(null);\r\n  const intersectionObserver = new IntersectionObserver((entries, observer) => {\r\n    const lastDocument = entries[0];\r\n    if (lastDocument.intersectionRatio > 0) {\r\n      observer.unobserve(lastDocument.target);\r\n      lastDocumentRef.current = null;\r\n      setTimeout(() => {\r\n        if (!isLastPage) {\r\n          page.current += 1;\r\n        }\r\n        dispatch(\r\n          getSearchList({\r\n            query,\r\n            oldest,\r\n            shortest,\r\n            longest,\r\n            page: page.current,\r\n          }),\r\n        );\r\n      }, 2000);\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    if (lastDocumentRef.current) {\r\n      intersectionObserver.observe(lastDocumentRef.current);\r\n    }\r\n  }, [lastDocumentRef, intersectionObserver]);\r\n\r\n  // 언마운트시 처리\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsLastPage(false);\r\n      setActive(false);\r\n      setDocumentList([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Categories />\r\n      <WikiList\r\n        documentList={documentList}\r\n        error={error}\r\n        loading={loading}\r\n        lastDocumentRef={lastDocumentRef}\r\n        isLastPage={isLastPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiListContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\nimport WikiListContainer from '../../containers/wiki/WikiListContainer';\r\n\r\nconst WikiListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiListPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n/**\r\n * 마이페이지 메뉴 컴포넌트\r\n */\r\n\r\nconst MyPageMenuBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 2rem;\r\n  border-right: 1px solid ${({ theme }) => theme.categoryBorder};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\n// 메뉴 리스트\r\nconst MenuList = [\r\n  { name: '프로필', link: '/mypage' },\r\n  { name: '보안', link: '/mypage/security' },\r\n  { name: '활동 기록', link: '/mypage/activity' },\r\n];\r\n\r\nconst NavMenu = styled(NavLink)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  &:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  &.active {\r\n    font-weight: 600;\r\n    border-left: 2px solid ${({ theme }) => theme.categoryBorder};\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .menu-name {\r\n    font-family: 'NanumBarunGothic';\r\n    padding: 0 0.5rem;\r\n  }\r\n`;\r\n\r\nconst MyPageMenu = () => {\r\n  return (\r\n    <MyPageMenuBlock>\r\n      {MenuList.map((menu) => (\r\n        <NavMenu key={menu.name} to={menu.link} exact={true}>\r\n          <span className=\"menu-name\">{menu.name}</span>\r\n        </NavMenu>\r\n      ))}\r\n    </MyPageMenuBlock>\r\n  );\r\n};\r\n\r\nexport default MyPageMenu;\r\n","import React from 'react';\r\nimport MyPageMenu from '../../components/profile/MyPageMenu';\r\n\r\nconst MyPageMenuContainer = () => {\r\n  return <MyPageMenu />;\r\n};\r\n\r\nexport default MyPageMenuContainer;\r\n","import styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\n\r\n/**\r\n * 최상의 flex 컴포넌트\r\n */\r\n\r\nconst FlexContentBlock = styled(Responsive)`\r\n  display: flex;\r\n  flex-direction: ${(props) =>\r\n    props.direction === 'column' ? 'column' : 'row'};\r\n`;\r\n\r\nexport default FlexContentBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 프로필 컴포넌트\r\n * 기능: 이름 변경\r\n */\r\n\r\nexport const ProfileBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  .profile-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .profile-info-title {\r\n    font-weight: 300;\r\n    font-size: 1.5rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n  }\r\n  .profile-info-explain {\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n    margin-top: 0.25rem;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-info-value {\r\n    margin-top: 1.25rem;\r\n    span {\r\n      padding: 0.25rem 0.5rem;\r\n      font-size: 1.125rem;\r\n      font-family: 'Raleway', 'NanumGothic';\r\n      border-radius: 0.25rem;\r\n      background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n    }\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-form {\r\n    margin: 1.5rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .value-provider {\r\n    text-transform: uppercase;\r\n  }\r\n  .possible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  .impossible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.errorText};\r\n    margin-top: 0.5rem;\r\n  }\r\n  .success-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyleInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1.125rem;\r\n  font-family: 'Raleway', 'NanumGothic';\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n`;\r\n\r\nconst ProfileSubmitButton = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const ProfileErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst Profile = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  validName,\r\n  nameMessage,\r\n  existNameError,\r\n  equalName,\r\n  submitMessage,\r\n  errorMessage,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  if (existNameError) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">프로필 요청 실패.</span>\r\n        <span>\r\n          Status:{' '}\r\n          <span className=\"error-msg\">{existNameError.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">\r\n            {existNameError.response.statusText}\r\n          </span>\r\n        </span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { username, provider } = user;\r\n  return (\r\n    <ProfileBlock>\r\n      <div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">ID</span>\r\n          <div className=\"profile-info-value\">\r\n            <span>{username}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">로그인 유형</span>\r\n          <span className=\"profile-info-explain\">\r\n            어떤 방식으로 로그인했는지를 확인합니다.\r\n          </span>\r\n          <div className=\"profile-info-value\">\r\n            <span className=\"value-provider\">{provider}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <form className=\"profile-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">DISPLAY NAME</span>\r\n            <span className=\"profile-info-explain\">\r\n              다른 사용자들에게 보여지는 이름입니다.\r\n            </span>\r\n            <StyleInput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={\r\n                !equalName && (validName === true ? 'possible' : 'impossible')\r\n              }\r\n              value={form.name ? form.name : ''}\r\n              onChange={onChange}\r\n            />\r\n            {validName === false && (\r\n              <span className=\"invalid-message\">{nameMessage}</span>\r\n            )}\r\n            {submitMessage !== '' && (\r\n              <span className=\"success-message\">{submitMessage}</span>\r\n            )}\r\n            {errorMessage !== '' && (\r\n              <span className=\"invalid-message\">{errorMessage}</span>\r\n            )}\r\n          </div>\r\n          <ProfileSubmitButton\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validName || equalName}\r\n          >\r\n            수정\r\n          </ProfileSubmitButton>\r\n        </form>\r\n      </div>\r\n    </ProfileBlock>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport Profile from '../../components/profile/Profile';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  checkExistName,\r\n  check,\r\n  initializeUpdateName,\r\n  updateName,\r\n} from '../../module/redux/user';\r\n\r\nconst ProfileContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    user,\r\n    form,\r\n    isNotExistName,\r\n    isNotExistNameError,\r\n    updateUser,\r\n    updateUserError,\r\n  } = useSelector(({ user }) => ({\r\n    user: user.user,\r\n    form: user.profile,\r\n    isNotExistName: user.checkExistNameResult,\r\n    isNotExistNameError: user.checkExistNameResultError,\r\n    updateUser: user.updateUser,\r\n    updateUserError: user.updateUserError,\r\n  }));\r\n\r\n  const [validName, setValidName] = useState(true); // 사용 가능한 이름 여부\r\n  const [equalName, setEqualName] = useState(true); // 기존 사용자 이름이랑 일치하는지 여부\r\n  const [nameMessage, setNameMessage] = useState(''); // 검증 실패 메시지\r\n  const [submitMessage, setSubmitMessage] = useState(''); // submit 결과 메시지\r\n  const [errorMessage, setErrorMessage] = useState(''); // submit 에러 메시지\r\n  const loadingForm = useRef(true);\r\n\r\n  // input 상태 반영\r\n  const onChange = (e) => {\r\n    setNameMessage('');\r\n    setSubmitMessage('');\r\n    setErrorMessage('');\r\n    const { value, name } = e.target;\r\n    dispatch(changeField({ form: 'profile', key: name, value }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name } = form;\r\n    const { _id } = user;\r\n    if (validName && !equalName) {\r\n      dispatch(updateName({ id: _id, name }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 중복되지 않은 이름일 때\r\n    if (!isNotExistName || (isNotExistName && isNotExistName.result)) {\r\n      setValidName(true);\r\n    } else {\r\n      // 상태 업데이트\r\n      setValidName(false);\r\n      setEqualName(false);\r\n      setNameMessage(isNotExistName ? isNotExistName.message : ''); // 메시지 저장\r\n    }\r\n  }, [isNotExistName]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    if (loadingForm.current) return;\r\n    const { name } = form;\r\n    const loginName = user ? user.name : '';\r\n    if (name === undefined) return;\r\n    // 이름이 현재 사용자 이름이랑 다르면\r\n    if (name && name.toLowerCase() !== loginName.toLowerCase()) {\r\n      // 이름이 사용 가능한지 비동기로 요청\r\n      dispatch(checkExistName({ username: user.username, name }));\r\n      setEqualName(false);\r\n    } else {\r\n      // 이름이 같으면\r\n      if (name) {\r\n        setEqualName(true); // 상태 갱신\r\n      } else {\r\n        // 공백일 때\r\n        dispatch(checkExistName({ username: user.username, name })); // 요청해서 공백일 떄의 결과 값을 갱신 한다\r\n      }\r\n    }\r\n  }, [dispatch, form, user]);\r\n\r\n  useEffect(() => {\r\n    const { name } = user ? user : '';\r\n    dispatch(changeField({ form: 'profile', key: 'name', value: name }));\r\n    loadingForm.current = false;\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    if (updateUser) {\r\n      dispatch(check());\r\n      setSubmitMessage('성공적으로 수정되었습니다.');\r\n      dispatch(initializeUpdateName());\r\n    } else if (updateUserError) {\r\n      setErrorMessage('에러가 발생했습니다.');\r\n      dispatch(initializeUpdateName());\r\n    }\r\n  }, [dispatch, updateUser, updateUserError]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeUpdateName());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Profile\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      validName={validName}\r\n      nameMessage={nameMessage}\r\n      isNotExistNameError={isNotExistNameError}\r\n      equalName={equalName}\r\n      submitMessage={submitMessage}\r\n      errorMessage={errorMessage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport ProfileContainer from '../../containers/profile/ProfileContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst MyPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>MY PAGE - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ProfileContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ProfileBlock, ProfileErrorBlock } from './Profile';\r\nimport Button from '../common/Button';\r\n\r\n/**\r\n * 보안 컴포넌트\r\n * 기능: 비밀번호 변경\r\n */\r\n\r\nconst SecurityBlock = styled(ProfileBlock)`\r\n  .password-input-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .change-password-result {\r\n    margin: 1rem 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n  width: 20rem;\r\n  &::placeholder {\r\n    font-family: 'NanumGothic';\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst Security = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  valid,\r\n  validMessage,\r\n  onSubmit,\r\n  submitPassword,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { curPassword, newPassword, confirmPassword } = form;\r\n  const {\r\n    curPassword: validCur,\r\n    newPassword: validNew,\r\n    confirmPassword: validConfirm,\r\n  } = valid;\r\n  const {\r\n    curPassword: validMessageCur,\r\n    newPassword: validMessageNew,\r\n    confirmPassword: validMessageConfirm,\r\n  } = validMessage;\r\n  const { result, message } = submitPassword;\r\n  const { username } = user ? user : '';\r\n  return (\r\n    <SecurityBlock>\r\n      <div>\r\n        <form className=\"change-password-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">비밀번호 변경</span>\r\n            <span className=\"profile-info-explain\">\r\n              비밀번호를 변경할 수 있습니다.\r\n            </span>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"curPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"기존 비밀번호 입력\"\r\n                className={validCur === true ? 'possible' : 'impossible'}\r\n                value={curPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageCur !== '' && (\r\n                <span className=\"invalid-message\">{validMessageCur}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 입력\"\r\n                className={validNew === true ? 'possible' : 'impossible'}\r\n                value={newPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageNew !== '' && (\r\n                <span className=\"invalid-message\">{validMessageNew}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 한번 더 입력\"\r\n                className={validConfirm === true ? 'possible' : 'impossible'}\r\n                value={confirmPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageConfirm !== '' && (\r\n                <span className=\"invalid-message\">{validMessageConfirm}</span>\r\n              )}\r\n            </div>\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"username\"\r\n              value={username ? username : ''}\r\n            />\r\n          </div>\r\n          <div className=\"change-password-result\">\r\n            {message !== '' && result && (\r\n              <span className=\"success-message\">{message}</span>\r\n            )}\r\n            {message !== '' && !result && (\r\n              <span className=\"invalid-message\">{message}</span>\r\n            )}\r\n          </div>\r\n          <ButtonWithMarginTop\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validCur || !validNew || !validConfirm}\r\n          >\r\n            비밀번호 변경\r\n          </ButtonWithMarginTop>\r\n        </form>\r\n      </div>\r\n    </SecurityBlock>\r\n  );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Security from '../../components/profile/Security';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  changePassword,\r\n  initializeChangePassword,\r\n} from '../../module/redux/user';\r\n\r\nconst SecurityContainer = () => {\r\n  // 액션 상태 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { user, form, changePasswordResult, changePasswordError } = useSelector(\r\n    ({ user }) => ({\r\n      user: user.user,\r\n      form: user.password,\r\n      changePasswordResult: user.changePasswordResult,\r\n      changePasswordError: user.changePasswordError,\r\n    }),\r\n  );\r\n\r\n  // 검증 정보\r\n  const [valid, setValid] = useState({\r\n    curPassword: false,\r\n    newPassword: false,\r\n    confirmPassword: false,\r\n  });\r\n  // 검증 메시지\r\n  const [validMessage, setValidMessage] = useState({\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  });\r\n  // 비밀번호 변경 처리결과\r\n  const [submitPassword, setSubmitPassword] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n  const MIN_LENGTH = 8;\r\n\r\n  // 폼 데이터 변경시 메시지 초기화\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    if (name === 'curPassword') {\r\n      setValidMessage({\r\n        ...validMessage,\r\n        curPassword: '',\r\n      });\r\n    }\r\n    if (submitPassword.message && submitPassword.message !== '') {\r\n      setSubmitPassword({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    }\r\n    dispatch(changeField({ form: 'password', key: name, value }));\r\n  };\r\n\r\n  // submit 이벤트\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      curPassword: curValid,\r\n      newPassword: newValid,\r\n      confirmPassword: confirmValid,\r\n    } = valid;\r\n    const { _id } = user;\r\n    const { curPassword, newPassword } = form;\r\n    // 검증 통과시 액션 수행\r\n    if (curValid && newValid && confirmValid) {\r\n      dispatch(changePassword({ id: _id, password: curPassword, newPassword }));\r\n    }\r\n  };\r\n\r\n  const stateValidMessage = useRef(validMessage);\r\n\r\n  // 비동기 검증 수행\r\n  useEffect(() => {\r\n    const isValidNewPassword =\r\n      form.newPassword && form.newPassword.length >= MIN_LENGTH;\r\n    const isValidConfirmPassword =\r\n      form.confirmPassword === form.newPassword &&\r\n      form.confirmPassword.length >= MIN_LENGTH;\r\n    setValid({\r\n      curPassword: form.curPassword !== '',\r\n      newPassword:\r\n        form.newPassword !== '' &&\r\n        isValidNewPassword &&\r\n        form.newPassword !== form.curPassword,\r\n      confirmPassword: form.confirmPassword !== '' && isValidConfirmPassword,\r\n    });\r\n    // 검증 실패 시 처리\r\n    if (!isValidNewPassword && form.newPassword !== '') {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '비밀번호는 8자 이상 입력해야 합니다!',\r\n      });\r\n    } else if (!isValidConfirmPassword && form.confirmPassword !== '') {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        confirmPassword: '비밀번호가 일치하지 않습니다!',\r\n      });\r\n    } else if (\r\n      form.newPassword !== '' &&\r\n      form.newPassword === form.curPassword &&\r\n      isValidNewPassword\r\n    ) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '기존 비밀번호와 일치합니다.',\r\n      });\r\n    } else if (form.newPassword === '' || isValidNewPassword) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '',\r\n      });\r\n    } else if (form.confirmPassword === '' || isValidConfirmPassword) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        confirmPassword: '',\r\n      });\r\n    }\r\n  }, [form, stateValidMessage]);\r\n\r\n  // 비밀번호 변경 처리 결과에 따른 메시지 저장\r\n  useEffect(() => {\r\n    if (changePasswordResult) {\r\n      setSubmitPassword({\r\n        result: true,\r\n        message: '비밀번호가 성공적으로 변경되었습니다.',\r\n      });\r\n      dispatch(initializeChangePassword());\r\n    } else if (changePasswordError) {\r\n      if (\r\n        changePasswordError.response &&\r\n        changePasswordError.response.status === 412\r\n      ) {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '',\r\n        });\r\n        setValidMessage({\r\n          curPassword: '기존 비밀번호가 일치하지 않습니다',\r\n          newPassword: '',\r\n          confirmPassword: '',\r\n        });\r\n        setValid({\r\n          curPassword: false,\r\n          newPassword: true,\r\n          confirmPassword: true,\r\n        });\r\n      } else {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '비밀번호 변경에 실패했습니다.',\r\n        });\r\n      }\r\n    }\r\n  }, [dispatch, changePasswordResult, changePasswordError]);\r\n\r\n  // 언마운트시 작업\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeChangePassword());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Security\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      valid={valid}\r\n      validMessage={validMessage}\r\n      onSubmit={onSubmit}\r\n      submitPassword={submitPassword}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SecurityContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport SecurityContainer from '../../containers/profile/SecurityContainer';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst SecurityPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>보안 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <SecurityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SecurityPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport PaginationContainer from '../../containers/post/PaginationContainer';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 활동정보 컴포넌트\r\n * 위키문서/블로그 포스팅 카운트 확인\r\n * 작성한 블로그 포스트 리스트 출력\r\n */\r\n\r\nconst ActivityBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 700px;\r\n  @media screen and (max-width: 1024px) {\r\n    width: 580px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 70vw;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 60vw;\r\n  }\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  .activity-count-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media screen and (min-width: 769px) {\r\n      flex-direction: row;\r\n      .profile-info-group {\r\n        &:first-of-type {\r\n          margin-left: 0;\r\n        }\r\n        margin-left: 3rem;\r\n      }\r\n    }\r\n  }\r\n  .profile-info-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .profile-info-title {\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    font-size: 1.5rem;\r\n  }\r\n  .profile-info-content {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .profile-info-content-col {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .content-title {\r\n    margin-right: 1rem;\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n  }\r\n  .content-value {\r\n    padding: 0.25rem 0.5rem;\r\n    font-size: 1rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    border-radius: 0.25rem;\r\n    background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  }\r\n  .activity-post-list {\r\n    margin: 1rem 0;\r\n  }\r\n  .activity-post-item {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  & > a {\r\n    font-family: 'NanumGothic';\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    font-family: 'NanumGothic';\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\n// 활동 정보 내의 유저가 작성한 블로그 포스트 리스트 아이템\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst Activity = ({\r\n  user,\r\n  postList,\r\n  postCount,\r\n  lastPage,\r\n  documentCount,\r\n  postListError,\r\n  documentCountError,\r\n  loadingPost,\r\n  loadingWiki,\r\n}) => {\r\n  if (loadingPost || loadingWiki) {\r\n    return (\r\n      <ActivityBlock>\r\n        <LoadingProgress customHeight={70} />\r\n      </ActivityBlock>\r\n    );\r\n  }\r\n  return (\r\n    <ActivityBlock>\r\n      <div className=\"activity-count-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">WIKI DOCUMENT</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 위키 문서 개수</span>\r\n            {!loadingWiki && (\r\n              <span className=\"content-value\">{documentCount}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">POST</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 개수</span>\r\n            {!loadingPost && <span className=\"content-value\">{postCount}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"activity-post-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">PUBLISHED POST LIST</span>\r\n          <div className=\"profile-info-content-col\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 목록</span>\r\n            {!loadingPost && postList && (\r\n              <div className=\"activity-post-list\">\r\n                <div className=\"activity-post-item\">\r\n                  {postList.map((post) => (\r\n                    <PostItem post={post} key={post._id} />\r\n                  ))}\r\n                </div>\r\n                <PaginationContainer />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ActivityBlock>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { useEffect } from 'react';\r\nimport Activity from '../../components/profile/Activity';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList } from '../../module/redux/post';\r\nimport { getDocumentCount } from '../../module/redux/wiki';\r\n\r\nconst ActivityContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    user,\r\n    postList,\r\n    postCount,\r\n    documentCount,\r\n    postListError,\r\n    documentCountError,\r\n    loadingPost,\r\n    loadingWiki,\r\n  } = useSelector(({ user, post, wiki, loading }) => ({\r\n    user: user.user,\r\n    postList: post.postList,\r\n    postCount: post.postCount,\r\n    documentCount: wiki.documentCount,\r\n    postListError: post.postListError,\r\n    documentCountError: wiki.documentCountError,\r\n    loadingPost: loading['post/GET_LIST'],\r\n    loadingWiki: loading['wiki/GET_DOCUMENT_COUNT'],\r\n  }));\r\n\r\n  // 이벤트 정의\r\n  const { username } = user;\r\n  useEffect(() => {\r\n    if (username) {\r\n      dispatch(getList({ username }));\r\n      dispatch(getDocumentCount({ username }));\r\n    }\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch, username]);\r\n\r\n  return (\r\n    <Activity\r\n      user={user}\r\n      postList={postList}\r\n      postCount={postCount}\r\n      documentCount={documentCount}\r\n      postListError={postListError}\r\n      documentCountError={documentCountError}\r\n      loadingPost={loadingPost}\r\n      loadingWiki={loadingWiki}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ActivityContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\nimport ActivityContainer from '../../containers/profile/ActivityContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst ActivityPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>활동 기록 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ActivityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Category from '../common/Category';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 검색 결과 카테고리\r\n */\r\n\r\nconst categories = [\r\n  { name: 'total', text: '통합검색', to: '/search?' },\r\n  { name: 'wiki', text: '위키검색', to: '/search?wiki=true' },\r\n  { name: 'blog', text: '블로그', to: '/search?blog=true' },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n  margin: 2rem;\r\n  margin-bottom: 0;\r\n  padding-top: 0.1rem;\r\n  line-height: 3;\r\n  border-top: 1px solid ${({ theme }) => theme.searchBorder};\r\n  border-bottom: 1px solid ${({ theme }) => theme.searchBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  @media screen and (max-width: 768px) {\r\n    overflow-x: auto;\r\n  }\r\n`;\r\n\r\nconst Categories = ({ location }) => {\r\n  const { query, wiki, blog } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  // 카테고리 중 쿼리에 해당하는 것 하나만 활성화하기 위한 핸들링 함수\r\n  const handleActive = (name) => {\r\n    if (name === 'wiki' && wiki === 'true') return true;\r\n    if (name === 'blog' && blog === 'true') return true;\r\n    if (\r\n      name === 'total' &&\r\n      (wiki === undefined || wiki !== 'true') &&\r\n      (blog === undefined || blog !== 'true')\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <CategoriesBlock>\r\n      {categories.map((category) => (\r\n        <Category\r\n          key={category.name}\r\n          activeClassName=\"active\"\r\n          exact={true}\r\n          isActive={() => handleActive(category.name)}\r\n          to={category.to + '&query=' + query}\r\n        >\r\n          {category.text}\r\n        </Category>\r\n      ))}\r\n    </CategoriesBlock>\r\n  );\r\n};\r\n\r\nexport default withRouter(Categories);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n/**\r\n * 검색 옵션 컴포넌트\r\n */\r\n\r\nconst SearchOptionBlock = styled.div`\r\n  display: flex;\r\n  margin: 0rem 2rem;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    overflow-x: auto;\r\n  }\r\n  border-bottom: 1px solid ${({ theme }) => theme.searchBorder};\r\n  .option-group {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .MuiInput-underline:hover:not(.Mui-disabled):before {\r\n    border-bottom: 2px solid ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .MuiInputBase-root::after {\r\n    border-bottom: 2px solid ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .MuiSelect-root {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .MuiSelect-icon {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst CustomMenuItem = styled(MenuItem)`\r\n  &.MuiMenuItem-root {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst CustomOption = ({ data, optionValue, handleChange }) => {\r\n  const { name, text, item } = data;\r\n  return (\r\n    <FormControl>\r\n      <Select\r\n        value={optionValue}\r\n        onChange={handleChange}\r\n        displayEmpty\r\n        inputProps={{ 'aria-label': 'Without label', name: name }}\r\n      >\r\n        <CustomMenuItem value=\"\" disabled>\r\n          {text}\r\n        </CustomMenuItem>\r\n        {item.map((element, index) => (\r\n          <CustomMenuItem key={index} value={element.value}>\r\n            {element.name}\r\n          </CustomMenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const TotalSearchOption = ({ option, optionData, handleChange }) => {\r\n  return (\r\n    <SearchOptionBlock>\r\n      <div className=\"option-group\">\r\n        {optionData.map((data) => (\r\n          <CustomOption\r\n            key={data.name}\r\n            data={data}\r\n            optionValue={option[data.name]}\r\n            handleChange={handleChange}\r\n          />\r\n        ))}\r\n      </div>\r\n    </SearchOptionBlock>\r\n  );\r\n};\r\n\r\nexport const WikiSearchOption = ({ option, optionData, handleChange }) => {\r\n  return (\r\n    <SearchOptionBlock>\r\n      <div className=\"option-group\">\r\n        {optionData.map((data) => (\r\n          <CustomOption\r\n            key={data.name}\r\n            data={data}\r\n            optionValue={option[data.name]}\r\n            handleChange={handleChange}\r\n          />\r\n        ))}\r\n      </div>\r\n    </SearchOptionBlock>\r\n  );\r\n};\r\n\r\nexport const BlogSearchOption = ({ option, optionData, handleChange }) => {\r\n  return (\r\n    <SearchOptionBlock>\r\n      <div className=\"option-group\">\r\n        {optionData.map((data) => (\r\n          <CustomOption\r\n            key={data.name}\r\n            data={data}\r\n            optionValue={option[data.name]}\r\n            handleChange={handleChange}\r\n          />\r\n        ))}\r\n      </div>\r\n    </SearchOptionBlock>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeOption, initializeOption } from '../../module/redux/search';\r\nimport {\r\n  TotalSearchOption,\r\n  WikiSearchOption,\r\n  BlogSearchOption,\r\n} from '../../components/search/SearchOption';\r\nimport qs from 'qs';\r\n\r\nexport const TotalSearchOptionContainer = withRouter(\r\n  ({ location, history }) => {\r\n    const dispatch = useDispatch();\r\n    const { option } = useSelector(({ search }) => ({\r\n      option: search.option,\r\n    }));\r\n\r\n    const handleChange = (event) => {\r\n      const key = event.target.name;\r\n      dispatch(changeOption({ key, value: event.target.value }));\r\n    };\r\n\r\n    const optionData = [\r\n      {\r\n        name: 'totalSort',\r\n        text: '정렬',\r\n        item: [\r\n          { name: '최신순', value: 'lately' },\r\n          { name: '오래된순', value: 'oldest' },\r\n        ],\r\n      },\r\n      {\r\n        name: 'totalTerm',\r\n        text: '기간',\r\n        item: [\r\n          { name: '전체', value: '0' },\r\n          { name: '1일', value: '1' },\r\n          { name: '7일', value: '7' },\r\n          { name: '30일', value: '30' },\r\n        ],\r\n      },\r\n    ];\r\n\r\n    useEffect(() => {\r\n      const { totalSort, totalTerm } = option;\r\n      const optionQuery = {\r\n        oldest: totalSort === 'oldest',\r\n        day: totalTerm,\r\n      };\r\n      if (!optionQuery.oldest || optionQuery.oldest === '') {\r\n        delete optionQuery.oldest;\r\n      }\r\n      if (optionQuery.day === '0' || optionQuery.day === '') {\r\n        delete optionQuery.day;\r\n      }\r\n      const { query, page } = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true,\r\n      });\r\n      const queryString = qs.stringify({ query, page, ...optionQuery });\r\n      history.replace(`/search?${queryString}`);\r\n    }, [option, history, location.search]);\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        dispatch(initializeOption());\r\n      };\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <TotalSearchOption\r\n        option={option}\r\n        optionData={optionData}\r\n        handleChange={handleChange}\r\n      />\r\n    );\r\n  },\r\n);\r\n\r\nexport const WikiSearchOptionContainer = withRouter(({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { option } = useSelector(({ search }) => ({\r\n    option: search.option,\r\n  }));\r\n\r\n  const handleChange = (event) => {\r\n    const key = event.target.name;\r\n    dispatch(changeOption({ key, value: event.target.value }));\r\n  };\r\n\r\n  const optionData = [\r\n    {\r\n      name: 'wikiSort',\r\n      text: '정렬',\r\n      item: [\r\n        { name: '최신순', value: 'lately' },\r\n        { name: '오래된순', value: 'oldest' },\r\n      ],\r\n    },\r\n    {\r\n      name: 'wikilength',\r\n      text: '내용 길이',\r\n      item: [\r\n        { name: '짧은 내용', value: 'shortest' },\r\n        { name: '긴 내용', value: 'longest' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const { wikiSort, wikilength } = option;\r\n    const optionQuery = {\r\n      oldest: wikiSort === 'oldest',\r\n      longest: wikilength === 'longest',\r\n      shortest: wikilength === 'shortest',\r\n    };\r\n    if (!optionQuery.oldest || optionQuery.oldest === '') {\r\n      delete optionQuery.oldest;\r\n    }\r\n    if (!optionQuery.longest || optionQuery.longest === '') {\r\n      delete optionQuery.longest;\r\n    }\r\n    if (!optionQuery.shortest || optionQuery.shortest === '') {\r\n      delete optionQuery.shortest;\r\n    }\r\n    const { wiki, query, page } = qs.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    });\r\n    const queryString = qs.stringify({ wiki, query, page, ...optionQuery });\r\n    history.replace(`/search?${queryString}`);\r\n  }, [option, history, location.search]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeOption());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <WikiSearchOption\r\n      option={option}\r\n      optionData={optionData}\r\n      handleChange={handleChange}\r\n    />\r\n  );\r\n});\r\n\r\nexport const BlogSearchOptionContainer = withRouter(({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { option } = useSelector(({ search }) => ({\r\n    option: search.option,\r\n  }));\r\n\r\n  const handleChange = (event) => {\r\n    const key = event.target.name;\r\n    dispatch(changeOption({ key, value: event.target.value }));\r\n  };\r\n\r\n  const optionData = [\r\n    {\r\n      name: 'blogSort',\r\n      text: '정렬',\r\n      item: [\r\n        { name: '최신순', value: 'lately' },\r\n        { name: '오래된순', value: 'oldest' },\r\n      ],\r\n    },\r\n    {\r\n      name: 'blogTerm',\r\n      text: '기간',\r\n      item: [\r\n        { name: '전체', value: '0' },\r\n        { name: '1일', value: '1' },\r\n        { name: '7일', value: '7' },\r\n        { name: '30일', value: '30' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const { blogSort, blogTerm } = option;\r\n    const optionQuery = {\r\n      oldest: blogSort === 'oldest',\r\n      day: blogTerm,\r\n    };\r\n    if (!optionQuery.oldest || optionQuery.oldest === '') {\r\n      delete optionQuery.oldest;\r\n    }\r\n    if (optionQuery.day === '0' || optionQuery.day === '') {\r\n      delete optionQuery.day;\r\n    }\r\n    const { blog, query, page } = qs.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    });\r\n    const queryString = qs.stringify({ blog, query, page, ...optionQuery });\r\n    history.replace(`/search?${queryString}`);\r\n  }, [option, history, location.search]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeOption());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <BlogSearchOption\r\n      option={option}\r\n      optionData={optionData}\r\n      handleChange={handleChange}\r\n    />\r\n  );\r\n});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PostItem from '../post/common/PostItem';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 블로그 검색결과\r\n */\r\n\r\nconst BlogSearchResultBlock = styled.div`\r\n  margin: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .title {\r\n    font-size: 1.25rem;\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .post-list {\r\n    margin: 0 0.25rem;\r\n  }\r\n  .footer {\r\n    margin: 0.5rem 0;\r\n    font-family: 'NanumBarunGothic';\r\n    text-align: right;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst BlogSearchResultErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst BlogSearchResult = ({\r\n  includeTitle,\r\n  query,\r\n  postList,\r\n  postListLoading,\r\n  error,\r\n}) => {\r\n  if (error) {\r\n    return (\r\n      <BlogSearchResultErrorBlock>\r\n        <span className=\"error-title\">블로그 검색 결과 요청 실패.</span>\r\n        <span>\r\n          Status: <span className=\"error-msg\">{error.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">{error.response.statusText}</span>\r\n        </span>\r\n      </BlogSearchResultErrorBlock>\r\n    );\r\n  }\r\n  if (postList && postList.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <BlogSearchResultBlock>\r\n      {!postListLoading && postList && (\r\n        <>\r\n          {includeTitle && <span className=\"title\">블로그</span>}\r\n          <div className=\"post-list\">\r\n            {postList.map((post) => (\r\n              <PostItem post={post} key={post._id} />\r\n            ))}\r\n          </div>\r\n          {includeTitle && (\r\n            <Link to={`/search?blog=true&query=${query}`} className=\"footer\">\r\n              블로그 검색결과 더 보기...\r\n            </Link>\r\n          )}\r\n        </>\r\n      )}\r\n    </BlogSearchResultBlock>\r\n  );\r\n};\r\n\r\nexport default BlogSearchResult;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 위키 검색결과\r\n */\r\n\r\nconst WikiSearchResultBlock = styled.div`\r\n  margin: 1rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  .title {\r\n    font-size: 1.25rem;\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .wiki-list {\r\n    margin: 1rem 0;\r\n  }\r\n  .footer {\r\n    margin: 0.5rem 0;\r\n    font-family: 'NanumBarunGothic';\r\n    text-align: right;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  font-family: 'NanumBarunGothic';\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = ({ document }) => {\r\n  const { name, updateDate } = document;\r\n  return (\r\n    <DocumentBlock>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\">\r\n        <span>{moment(updateDate).format('YYYY-MM-DD')}</span>\r\n      </div>\r\n    </DocumentBlock>\r\n  );\r\n};\r\n\r\nconst WikiSearchResultErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst WikiSearchResult = ({\r\n  includeTitle,\r\n  query,\r\n  wikiList,\r\n  wikiListLoading,\r\n  error,\r\n}) => {\r\n  if (error) {\r\n    return (\r\n      <WikiSearchResultErrorBlock>\r\n        <span className=\"error-title\">위키 검색 결과 요청 실패.</span>\r\n        <span>\r\n          Status: <span className=\"error-msg\">{error.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">{error.response.statusText}</span>\r\n        </span>\r\n      </WikiSearchResultErrorBlock>\r\n    );\r\n  }\r\n  if (wikiList && wikiList.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <WikiSearchResultBlock>\r\n      {!wikiListLoading && wikiList && (\r\n        <>\r\n          {includeTitle && <span className=\"title\">위키</span>}\r\n          <div className=\"wiki-list\">\r\n            {wikiList.map((document) => (\r\n              <DocumentItem document={document} key={document._id} />\r\n            ))}\r\n          </div>\r\n          {includeTitle && (\r\n            <Link to={`/search?wiki=true&query=${query}`} className=\"footer\">\r\n              위키 검색결과 더 보기...\r\n            </Link>\r\n          )}\r\n        </>\r\n      )}\r\n    </WikiSearchResultBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSearchResult;\r\n","import React from 'react';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport qs from 'qs';\r\n\r\nexport const TotalPaginationContainer = withRouter(({ location }) => {\r\n  // 전역 변수 불러오기\r\n  const {\r\n    postList,\r\n    postListLoading,\r\n    postLastPage,\r\n    wikiList,\r\n    wikiListLoading,\r\n    wikiLastPage,\r\n  } = useSelector(({ post, wiki, loading }) => ({\r\n    postList: post.postList,\r\n    postListLoading: loading['post/GET_LIST'],\r\n    postLastPage: post.lastPage,\r\n    wikiList: wiki.searchList,\r\n    wikiListLoading: loading['wiki/GET_SEARCH_LIST'],\r\n    wikiLastPage: wiki.lastPage,\r\n  }));\r\n\r\n  if ((!postList || postListLoading) && (!wikiList || wikiListLoading)) {\r\n    return null;\r\n  }\r\n\r\n  if (postList.length === 0 && wikiList.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // page가 없으면 1을 기본으로 사용\r\n  const { query, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const queryString = qs.stringify({ query });\r\n\r\n  const compare = (a, b) => {\r\n    return a > b ? a : b;\r\n  };\r\n\r\n  return (\r\n    <Pagination\r\n      path={`/search`}\r\n      query={queryString}\r\n      page={parseInt(page, 10)}\r\n      lastPage={compare(postLastPage, wikiLastPage)}\r\n    />\r\n  );\r\n});\r\n\r\nexport const WikiPaginationContainer = withRouter(({ location }) => {\r\n  // 전역 변수 불러오기\r\n  const { wikiList, wikiListLoading, wikiLastPage } = useSelector(\r\n    ({ wiki, loading }) => ({\r\n      wikiList: wiki.searchList,\r\n      wikiListLoading: loading['wiki/GET_SEARCH_LIST'],\r\n      wikiLastPage: wiki.lastPage,\r\n    }),\r\n  );\r\n\r\n  if (!wikiList || wikiListLoading) {\r\n    return null;\r\n  }\r\n\r\n  if (wikiList.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // page가 없으면 1을 기본으로 사용\r\n  const { query, wiki, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const queryString = qs.stringify({ query, wiki });\r\n\r\n  return (\r\n    <Pagination\r\n      path={`/search`}\r\n      query={queryString}\r\n      page={parseInt(page, 10)}\r\n      lastPage={wikiLastPage}\r\n    />\r\n  );\r\n});\r\n\r\nexport const BlogPaginationContainer = withRouter(({ location }) => {\r\n  // 전역 변수 불러오기\r\n  const { postList, postListLoading, postLastPage } = useSelector(\r\n    ({ post, loading }) => ({\r\n      postList: post.postList,\r\n      postListLoading: loading['post/GET_LIST'],\r\n      postLastPage: post.lastPage,\r\n    }),\r\n  );\r\n\r\n  if (!postList || postListLoading) {\r\n    return null;\r\n  }\r\n\r\n  if (postList.length === 0 ) {\r\n    return null;\r\n  }\r\n\r\n  // page가 없으면 1을 기본으로 사용\r\n  const { query, blog, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const queryString = qs.stringify({ query, blog });\r\n\r\n  return (\r\n    <Pagination\r\n      path={`/search`}\r\n      query={queryString}\r\n      page={parseInt(page, 10)}\r\n      lastPage={postLastPage}\r\n    />\r\n  );\r\n});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/**\r\n * 검색 결과가 없는 경우에 사용할 컴포넌트\r\n */\r\n\r\nconst NoResultBlock = styled.div`\r\n  margin: 3rem 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: 'NanumBarunGothic';\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.text};\r\n  .title {\r\n    font-size: 1.25rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .info {\r\n    margin-top: 1rem;\r\n    font-size: 1.25rem;\r\n  }\r\n  .query {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst NoResult = ({ query }) => {\r\n  return (\r\n    <NoResultBlock>\r\n      <span className=\"title\">\r\n        <span className=\"query\">'{query}'</span>에 대한 검색 결과가\r\n        없습니다.ㅠㅠ\r\n      </span>\r\n      <span className=\"info\">다른 검색어를 검색해 보는건 어떨까요??</span>\r\n    </NoResultBlock>\r\n  );\r\n};\r\n\r\nexport default NoResult;\r\n","import React, { useEffect } from 'react';\r\nimport Categories from '../../components/search/Categories';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport {\r\n  TotalSearchOptionContainer,\r\n  WikiSearchOptionContainer,\r\n  BlogSearchOptionContainer,\r\n} from './SearchOptionContainer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList } from '../../module/redux/post';\r\nimport BlogSearchResult from '../../components/search/BlogSearchResult';\r\nimport { getSearchList } from '../../module/redux/wiki';\r\nimport WikiSearchResult from '../../components/search/WikiSearchResult';\r\nimport { initialize } from '../../module/redux/search';\r\nimport {\r\n  TotalPaginationContainer,\r\n  WikiPaginationContainer,\r\n  BlogPaginationContainer,\r\n} from './PaginationContainer';\r\nimport NoResult from '../../components/search/NoResult';\r\nimport LoadingProgress from '../../components/common/LoadingProgress';\r\n\r\nconst LocalSearchContainer = ({ location }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    postList,\r\n    postListError,\r\n    postListLoading,\r\n    wikiList,\r\n    wikiListError,\r\n    wikiListLoading,\r\n  } = useSelector(({ post, wiki, loading }) => ({\r\n    postList: post.postList,\r\n    postListError: post.postListError,\r\n    postListLoading: loading['post/GET_LIST'],\r\n    wikiList: wiki.searchList,\r\n    wikiListError: wiki.searchListError,\r\n    wikiListLoading: loading['wiki/GET_SEARCH_LIST'],\r\n  }));\r\n  const { query, blog, wiki, page, oldest, day, longest, shortest } = qs.parse(\r\n    location.search,\r\n    {\r\n      ignoreQueryPrefix: true,\r\n    },\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (query && query !== '') {\r\n      dispatch(\r\n        getList({ query, page, block: blog === 'true' ? 10 : 5, oldest, day }),\r\n      );\r\n      dispatch(\r\n        getSearchList({\r\n          query,\r\n          page,\r\n          block: wiki === 'true' ? 10 : 25,\r\n          oldest,\r\n          longest,\r\n          shortest,\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, query, page, oldest, day, longest, shortest, blog, wiki]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (wikiListLoading || postListLoading) {\r\n    return (\r\n      <>\r\n        <Categories />\r\n        <LoadingProgress customHeight={75} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Categories />\r\n      {!wiki && !blog && (\r\n        <>\r\n          <TotalSearchOptionContainer />\r\n          {!wikiListLoading &&\r\n          !postListLoading &&\r\n          wikiList.length === 0 &&\r\n          postList.length === 0 ? (\r\n            <NoResult query={query} />\r\n          ) : (\r\n            <>\r\n              <BlogSearchResult\r\n                includeTitle\r\n                query={query}\r\n                postList={postList}\r\n                error={postListError}\r\n                postListLoading={postListLoading}\r\n              />\r\n              <WikiSearchResult\r\n                includeTitle\r\n                query={query}\r\n                wikiList={wikiList}\r\n                error={wikiListError}\r\n                wikiListLoading={wikiListLoading}\r\n              />\r\n            </>\r\n          )}\r\n          {!postListLoading && !wikiListLoading && <TotalPaginationContainer />}\r\n        </>\r\n      )}\r\n      {wiki && wiki === 'true' && (\r\n        <>\r\n          <WikiSearchOptionContainer />\r\n          {!wikiListLoading && wikiList.length === 0 ? (\r\n            <NoResult query={query} />\r\n          ) : (\r\n            <WikiSearchResult\r\n              query={query}\r\n              wikiList={wikiList}\r\n              error={wikiListError}\r\n              wikiListLoading={wikiListLoading}\r\n            />\r\n          )}\r\n          {!wikiListLoading && <WikiPaginationContainer />}\r\n        </>\r\n      )}\r\n      {blog && blog === 'true' && (\r\n        <>\r\n          <BlogSearchOptionContainer />\r\n          {!postListLoading && postList.length === 0 ? (\r\n            <NoResult query={query} />\r\n          ) : (\r\n            <BlogSearchResult\r\n              query={query}\r\n              postList={postList}\r\n              error={postListError}\r\n              postListLoading={postListLoading}\r\n            />\r\n          )}\r\n          {!postListLoading && <BlogPaginationContainer />}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LocalSearchContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport LocalSearchContainer from '../../containers/search/LocalSearchContainer';\r\n\r\nconst LocalSearchPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <LocalSearchContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LocalSearchPage;\r\n","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport MainPage from './pages/main/MainPage';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme } from './lib/styles/theme';\nimport { darkTheme } from './lib/styles/theme';\nimport LoginPage from './pages/auth/LoginPage';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTheme } from './module/redux/theme';\nimport PostWritePage from './pages/post/PostWritePage';\nimport PostPage from './pages/post/PostPage';\nimport PostListPage from './pages/post/PostListPage';\nimport { Helmet } from 'react-helmet-async';\nimport LoginWithNaverPage from './pages/auth/callback/LoginWithNaverPage';\nimport LoginWithKakaoPage from './pages/auth/callback/LoginWithKakaoPage';\nimport WikiPage from './pages/wiki/WikiPage';\nimport WikiEditPage from './pages/wiki/WikiEditPage';\nimport WikiRequestPage from './pages/wiki/WikiRequestPage';\nimport WikiHistoryPage from './pages/wiki/WikiHistoryPage';\nimport WikiListPage from './pages/wiki/WikiListPage';\nimport MyPage from './pages/profile/MyPage';\nimport SecurityPage from './pages/profile/SecurityPage';\nimport ActivityPage from './pages/profile/ActivityPage';\nimport LocalSearchPage from './pages/search/LocalSearchPage';\n\nconst App = () => {\n  const { isDarkTheme } = useSelector(({ theme }) => ({\n    isDarkTheme: theme.isDarkTheme,\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      const storageTheme = localStorage.getItem('darkTheme');\n      if (storageTheme === 'true') {\n        dispatch(setTheme(true));\n      }\n    } catch (error) {\n      throw error;\n    }\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n      <>\n        <Helmet>\n          <title>MAKE UP HARA</title>\n        </Helmet>\n        <Route component={MainPage} path={['/']} exact />\n        <Route component={LoginPage} path={'/login'} exact />\n        <Route component={LoginWithNaverPage} path={'/login/naver'} />\n        <Route component={LoginWithKakaoPage} path={'/login/kakao'} />\n        <Route component={RegisterPage} path={'/register'} />\n        <Route\n          component={PostListPage}\n          path={['/blog', '/blog/@:username']}\n          exact\n        />\n        <Route component={PostWritePage} path={'/blog/write'} />\n        <Route component={PostPage} path={'/blog/@:username/:postId'} exact />\n        <Route component={WikiPage} path={['/w', '/w/:docName']} exact />\n        <Route component={WikiEditPage} path={'/wiki/edit'} exact />\n        <Route component={WikiRequestPage} path={'/wiki/request'} exact />\n        <Route\n          component={WikiHistoryPage}\n          path={'/wiki/history/:docName'}\n          exact\n        />\n        <Route component={WikiListPage} path={'/wiki/list'} exact />\n        <Route component={MyPage} path={'/mypage'} exact />\n        <Route component={SecurityPage} path={'/mypage/security'} exact />\n        <Route component={ActivityPage} path={'/mypage/activity'} exact />\n        <Route component={LocalSearchPage} path={'/search'} exact />\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport post, { postSaga } from './post';\r\nimport wiki, { wikiSaga } from './wiki';\r\nimport theme from './theme';\r\nimport search from './search';\r\n\r\n/* root reducer */\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n  theme,\r\n  post,\r\n  wiki,\r\n  search,\r\n});\r\n\r\n/* root saga */\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), postSaga(), wikiSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer, { rootSaga } from './module/redux/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { tempSetUser, check } from './module/redux/user';\nimport { HelmetProvider } from 'react-helmet-async';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n  // applyMiddleware(sagaMiddleware);\n);\n\nsagaMiddleware.run(rootSaga);\nconst loadUser = () => {\n  try {\n    const user = sessionStorage.getItem('user');\n    if (!user) return;\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (error) {\n    throw error;\n  }\n};\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as postAPI from '../../lib/api/post';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// local\r\nconst INITIALIZE = 'post/INITIALIZE'; // 작성 내용 초기화\r\nconst CHANGE_FIELD = 'post/CHANGE_FIELD'; // 특정 key값 바꾸기\r\nconst SET_ORIGINAL_POST = 'post/SET_ORIGINAL_POST'; // 포스트 편집 시 에디터에 포스트 정보 세팅\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 뷰 언마운트시 post 정보 제거\r\n// api - write\r\nconst [\r\n  WRITE_POST,\r\n  WRITE_POST_SUCCESS,\r\n  WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('post/WRITE_POST');\r\n// api - read\r\nconst [\r\n  READ_POST,\r\n  READ_POST_SUCCESS,\r\n  READ_POST_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST');\r\n// api - update\r\nconst [\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAILURE,\r\n] = createRequestActionTypes('post/UPDATE_POST');\r\n// api - list\r\nconst [GET_LIST, GET_LIST_SUCCESS, GET_LIST_FAILURE] = createRequestActionTypes(\r\n  'post/GET_LIST',\r\n);\r\nconst UNLOAD_LIST = 'post/UNLOAD_LIST'; // 포스트 리스트 뷰 언마운트시 post list 정보 제거\r\n\r\n/* action */\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, (post) => post);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\nexport const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\r\n  title,\r\n  body,\r\n  tags,\r\n}));\r\nexport const readPost = createAction(READ_POST, (id) => id);\r\nexport const updatePost = createAction(\r\n  UPDATE_POST,\r\n  ({ id, title, body, tags }) => ({ id, title, body, tags }),\r\n);\r\nexport const getList = createAction(\r\n  GET_LIST,\r\n  ({ page, tag, username, query, block, oldest, day }) => ({\r\n    page,\r\n    tag,\r\n    username,\r\n    query,\r\n    block,\r\n    oldest,\r\n    day,\r\n  }),\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\n\r\n/* redux-saga */\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\nconst getListSaga = createRequestSaga(GET_LIST, postAPI.getList);\r\n\r\nexport function* postSaga() {\r\n  yield takeLatest(WRITE_POST, writePostSaga);\r\n  yield takeLatest(READ_POST, readPostSaga);\r\n  yield takeLatest(UPDATE_POST, updatePostSaga);\r\n  yield takeLatest(GET_LIST, getListSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n  editPost: null,\r\n  editPostError: null,\r\n  post: null,\r\n  postError: null,\r\n  postList: [],\r\n  lastPage: 1,\r\n  postCount: 0,\r\n  postListError: null,\r\n  targetPostId: null,\r\n};\r\n\r\n/* reducer */\r\nconst post = handleActions(\r\n  {\r\n    [INITIALIZE]: () => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키값을 업데이트\r\n    }),\r\n    [SET_ORIGINAL_POST]: (state, { payload: post }) => ({\r\n      ...state,\r\n      title: post.title,\r\n      body: post.body,\r\n      tags: post.tags,\r\n      targetPostId: post._id,\r\n    }),\r\n    [UNLOAD_POST]: (state) => ({\r\n      ...state,\r\n      post: null,\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST]: (state) => ({\r\n      ...state,\r\n      editPost: null,\r\n      neditPosttError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPostError,\r\n    }),\r\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n    }),\r\n    [READ_POST_FAILURE]: (state, { payload: postError }) => ({\r\n      ...state,\r\n      postError,\r\n    }),\r\n    [UPDATE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n    }),\r\n    [UPDATE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPostError,\r\n    }),\r\n    [GET_LIST_SUCCESS]: (state, { payload: postList, meta: response }) => ({\r\n      ...state,\r\n      postList,\r\n      postCount: parseInt(response.headers['makeuphara-post-count'], '10'),\r\n      lastPage: parseInt(response.headers['makeuphara-post-last-page'], '10'),\r\n    }),\r\n    [GET_LIST_FAILURE]: (state, { payload: postListError }) => ({\r\n      ...state,\r\n      postListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      postList: [],\r\n      postListError: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default post;\r\n","import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/**\r\n * viewport에 따른 컨테이너 width 제어\r\n */\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  padding: 0, 1rem;\r\n  width: 986px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 748px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 98%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={full ? 'full-height' : body ? 'body-height' : ''}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 소셜 로그인 버튼에서 css를 사용하기 위해 export\r\n * 소셜 로그인은 ref를 설정해주어야 하기 때문에 prop 전달이 어려움\r\n */\r\n\r\nexport const buttonStyle = css`\r\n  border: none;\r\n  border-radius: 2px;\r\n  font-size: 1rem;\r\n  font-family:'NanumBarunGothic';\r\n  font-weight: normal;\r\n  padding: 0.25rem 1rem;\r\n  color: ${({ theme }) => theme.btnText};\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: ${({ theme }) => theme.btnBody};\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.btnHoverBody};\r\n  }\r\n\r\n  &:disabled,\r\n  &[disabled] {\r\n    cursor: default;\r\n    background: ${({ theme }) => theme.btnDisableBody};\r\n    color: ${({ theme }) => theme.btnDisableColor};\r\n    &:hover{\r\n      background: ${({ theme }) => theme.btnDisableBody};\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      display: inline-block;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.indigo &&\r\n    css`\r\n      background: ${palette.indigo[9]};\r\n      &:hover {\r\n        background: ${palette.indigo[7]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.violet &&\r\n    css`\r\n      background: ${palette.violet[9]};\r\n      color: #fff;\r\n      &:hover {\r\n        background: ${palette.violet[7]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.red &&\r\n    css`\r\n      background: ${palette.red[8]};\r\n      &:hover {\r\n        background: ${palette.red[6]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[6]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.yellow &&\r\n    css`\r\n      background: ${palette.yellow[5]};\r\n      &:hover {\r\n        background: ${palette.yellow[3]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.transparent &&\r\n    css`\r\n      background: none;\r\n      color: ${({ theme }) => theme.text};\r\n      border: 1px solid ${({ theme }) => theme.text};\r\n      &:hover {\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.gray[7]};\r\n      }\r\n    `}\r\n    \r\n  ${(props) =>\r\n    props.themeColor &&\r\n    css`\r\n      background: ${({ theme }) => theme.themeColorBody};\r\n      color: ${palette.gray[1]};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.themeColorHoverBody};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? <StyledLink {...props} /> : <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","const palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n  red: [\r\n    '#fff5f5',\r\n    '#ffe3e3',\r\n    '#ffc9c9',\r\n    '#ffa8a8',\r\n    '#ff8787',\r\n    '#ff6b6b',\r\n    '#fa5252',\r\n    '#f03e3e',\r\n    '#e03131',\r\n    '#c92a2a',\r\n  ],\r\n  violet: [\r\n    '#f3f0ff',\r\n    '#e5dbff',\r\n    '#d0bfff',\r\n    '#b197fc',\r\n    '#9775fa',\r\n    '#845ef7',\r\n    '#7950f2',\r\n    '#7048e8',\r\n    '#6741d9',\r\n    '#5f3dc4',\r\n  ],\r\n  indigo: [\r\n    '#edf2ff',\r\n    '#dbe4ff',\r\n    '#bac8ff',\r\n    '#91a7ff',\r\n    '#748ffc',\r\n    '#5c7cfa',\r\n    '#4c6ef5',\r\n    '#4263eb',\r\n    '#3b5bdb',\r\n    '#364fc7',\r\n  ],\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '#0b7285',\r\n  ],\r\n  yellow: [\r\n    '#fff9db',\r\n    '#fff3bf',\r\n    '#ffec99',\r\n    '#ffe066',\r\n    '#ffd43b',\r\n    '#fcc419',\r\n    '#fab005',\r\n    '#f59f00',\r\n    '#f08c00',\r\n    '#e67700',\r\n  ]\r\n};\r\n\r\nexport default palette;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 포스트의 태그를 출력하는 컴포넌트\r\n */\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => {\r\n  return (\r\n    <TagsBlock className=\"tags\">\r\n      {limit > 0 &&\r\n        tags.map(\r\n          (tag, index) =>\r\n            index < limit && (\r\n              <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n                #{tag}\r\n              </Link>\r\n            ),\r\n        )}\r\n      {limit > 0 && limit < tags.length && <span>...</span>}\r\n      {!limit &&\r\n        tags.map((tag) => (\r\n          <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n            #{tag}\r\n          </Link>\r\n        ))}\r\n    </TagsBlock>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const writePost = ({ title, body, tags }) =>\r\n  client.post('/api/post/write', { title, body, tags });\r\n\r\nexport const readPost = (id) => client.get(`/api/post/${id}`);\r\n\r\nexport const updatePost = ({ id, title, body, tags }) =>\r\n  client.patch(`/api/post/${id}`, { title, body, tags });\r\n\r\nexport const removePost = (id) => client.delete(`/api/post/${id}`);\r\n\r\nexport const getList = ({ page, tag, username, query, block, oldest, day }) => {\r\n  const queryString = qs.stringify({\r\n    page,\r\n    tag,\r\n    username,\r\n    query,\r\n    block,\r\n    oldest,\r\n    day,\r\n  });\r\n  return client.get(`/api/post/list?${queryString}`);\r\n};\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n/**\r\n *  포스트의 부가정보(작성자, 작성일자)를 출력하는 컴포넌트\r\n */\r\n\r\nconst SubInfoBlock = styled.div`\r\n  ${(props) =>\r\n    props.hasMarginTop &&\r\n    css`\r\n      margin-top: 1rem;\r\n    `}\r\n  color: ${({ theme }) => theme.postSubInfoText};\r\n  .username {\r\n    font-family:'Raleway';\r\n    font-weight:600;\r\n  }\r\n  .username:hover {\r\n    color: ${({ theme }) => theme.postSubInfoHoverText};\r\n  }\r\n\r\n  /* span 사이 가운뎃점 문자 출력 */\r\n  span + span:before {\r\n    padding: 0 0.25rem;\r\n    content: '\\\\B7'; /* 가운뎃점 문자 */\r\n  }\r\n\r\n  .publishedDate {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\r\n  return (\r\n    <SubInfoBlock hasMarginTop={hasMarginTop} className=\"subinfo\">\r\n      <span className=\"username\">\r\n        <Link to={`/blog/@${username}`}>\r\n          <b>{username}</b>\r\n        </Link>\r\n      </span>\r\n      {publishedDate && (\r\n        <span className=\"publishedDate\">\r\n          {moment(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n        </span>\r\n      )}\r\n    </SubInfoBlock>\r\n  );\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst PaginationBlock = styled.div`\r\n  width: 320px;\r\n  margin: 2rem auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  span {\r\n    margin: 0 0.25rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  span:before {\r\n    content: '\\\\B7\\\\B7\\\\B7';\r\n  }\r\n`;\r\n\r\nconst PageButton = styled(Button)`\r\n  width: 1rem;\r\n  padding: 0.375rem;\r\n  text-align: center;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ path, query, page }) => {\r\n  return query.length > 0\r\n    ? `${path}?${query}&page=${page}`\r\n    : `${path}?page=${page}`;\r\n};\r\n\r\n/* CONFIG */\r\nconst endpointBlockCount = 3;\r\nconst blockCount = 5;\r\n\r\n/* 페이지 번호를 저장한 배열을 구하는 함수 */\r\nconst getPageNumber = (page, lastPage) => {\r\n  // 페이지 번호 그룹을 3개로 분할\r\n  // 총 페이지 블록 개수 : endpointBlockCount + blockCount + 1(첫/마지막 페이지)\r\n  const result = {\r\n    front: [],\r\n    mid: [],\r\n    end: [],\r\n  };\r\n  // 전체 페이지의 중간지점을 기준으로 위치 설정\r\n  // 해당되는 위치에 endpointBlockCount 값만큼 페이지 번호 할당, 반대편은 1개 할당(첫/마지막 페이지)\r\n  const endpointSite = page <= lastPage / 2 ? 'first' : 'last';\r\n  // 1. 전체 페이지 개수(lastPage)가 총 페이지 블록 개수보다 작으면 mid 위치에 페이지 블록 모두 삽입\r\n  if (lastPage <= endpointBlockCount + blockCount + 1) {\r\n    // 페이지 블록 모두 삽입\r\n    for (let i = 1; i <= lastPage; i++) {\r\n      result.mid.push(i);\r\n    }\r\n    // 양 끝 그룹 비활성화\r\n    result.front = null;\r\n    result.end = null;\r\n    // 리턴\r\n    return result;\r\n  }\r\n  // blockCount의 절반 값을 정수로 저장\r\n  const halfBlockCount = parseInt(blockCount / 2);\r\n  // 2. 현 페이지가 왼쪽 구역일 경우\r\n  if (endpointSite === 'first') {\r\n    // front: 왼쪽 구역 블록 삽입\r\n    for (let i = 1; i <= endpointBlockCount; i++) {\r\n      result.front.push(i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page <= endpointBlockCount) {\r\n      page = endpointBlockCount + 1;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 왼쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page - halfBlockCount <= endpointBlockCount) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page - 1; i > endpointBlockCount; i--) {\r\n        result.mid.push(i);\r\n        count--;\r\n      }\r\n      // 겹친 개수만큼 오른쪽 블록에 추가\r\n      for (let i = page; i <= page + halfBlockCount + count; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n    // end: 마지막 페이지 번호만 삽입\r\n    result.end.push(lastPage);\r\n  } else if (endpointSite === 'last') {\r\n    // 오른쪽 구역일 경우\r\n    // front: 첫 페이지 번호만 삽입\r\n    result.front.push(1);\r\n    // end: 오른쪽 구역 블록 삽입\r\n    for (let i = 0; i < endpointBlockCount; i++) {\r\n      result.end.push(lastPage - i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page >= lastPage - endpointBlockCount + 1) {\r\n      page = lastPage - endpointBlockCount;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 오른쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page + halfBlockCount >= lastPage - endpointBlockCount + 1) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page + 1; i < lastPage - endpointBlockCount + 1; i++) {\r\n        result.mid.push(i);\r\n        count--;\r\n      }\r\n      // 겹친 개수만큼 왼쪽 블록에 추가\r\n      for (let i = page; i >= page - halfBlockCount - count; i--) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n  }\r\n  // 3. 페이지 블록을 정렬\r\n  result.front.sort((a, b) => a - b);\r\n  result.mid.sort((a, b) => a - b);\r\n  result.end.sort((a, b) => a - b);\r\n\r\n  // 4. 각 그룹이 연결되면 mid로 병합\r\n  if (result.front[result.front.length - 1] + 1 === result.mid[0]) {\r\n    result.mid = result.front.concat(result.mid);\r\n    result.front = null;\r\n  }\r\n  if (result.mid[result.mid.length - 1] + 1 === result.end[0]) {\r\n    result.mid = result.mid.concat(result.end);\r\n    result.end = null;\r\n  }\r\n  // 리턴\r\n  return result;\r\n};\r\n\r\nconst Pagination = ({ path, query, page, lastPage }) => {\r\n  const pageNumber = getPageNumber(page, lastPage);\r\n  return (\r\n    <PaginationBlock>\r\n      {pageNumber.front &&\r\n        pageNumber.front.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.front && <span />}\r\n      {pageNumber.mid &&\r\n        pageNumber.mid.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.end && <span />}\r\n      {pageNumber.end &&\r\n        pageNumber.end.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n    </PaginationBlock>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({ ...state, [action.payload]: true }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n"],"sourceRoot":""}