{"version":3,"sources":["components/common/ErrorBlock.js","components/common/LoadingProgress.js","components/post/common/Tags.js","components/post/common/SubInfo.js","components/post/common/PostItem.js","components/common/CustomSlider.js","components/post/PostList.js","containers/post/PostListContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","LoadingProgressBlock","props","customHeight","css","CustomCircularProgress","CircularProgress","categoryBorder","LoadingProgress","full","body","className","TagsBlock","postTagText","postTagHoverText","buildLink","username","tag","query","qs","stringify","Tags","tags","limit","map","index","to","key","length","SubInfoBlock","hasMarginTop","postSubInfoText","postSubInfoHoverText","SubInfo","publishedDate","moment","format","PostItemBlock","postBorder","hoverText","PostItem","post","_id","title","publisher","PageSlider","Slider","sliderTrack","sliderRail","PostListBlock","PostListErrorBlock","TitleWrapper","WritePostButton","isDarkTheme","Button","violet","cyan","PageBlock","block","handlePageBlock","Typography","valueLabelDisplay","defaultValue","marks","min","max","step","value","onChange","PostList","postList","loading","error","showWriteButton","Responsive","message","PaginationContainer","loadable","withRouter","location","match","dispatch","useDispatch","useSelector","user","postListError","params","parse","search","ignoreQueryPrefix","page","useState","setBlock","pagination","useRef","useEffect","current","getList","unloadList","e","newValue"],"mappings":"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","file":"static/js/13.b46168ca.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={full ? 'full-height' : body ? 'body-height' : ''}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 포스트의 태그를 출력하는 컴포넌트\r\n */\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => {\r\n  return (\r\n    <TagsBlock className=\"tags\">\r\n      {limit > 0 &&\r\n        tags.map(\r\n          (tag, index) =>\r\n            index < limit && (\r\n              <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n                #{tag}\r\n              </Link>\r\n            ),\r\n        )}\r\n      {limit > 0 && limit < tags.length && <span>...</span>}\r\n      {!limit &&\r\n        tags.map((tag) => (\r\n          <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n            #{tag}\r\n          </Link>\r\n        ))}\r\n    </TagsBlock>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n/**\r\n *  포스트의 부가정보(작성자, 작성일자)를 출력하는 컴포넌트\r\n */\r\n\r\nconst SubInfoBlock = styled.div`\r\n  ${(props) =>\r\n    props.hasMarginTop &&\r\n    css`\r\n      margin-top: 1rem;\r\n    `}\r\n  color: ${({ theme }) => theme.postSubInfoText};\r\n  .username {\r\n    font-family:'Raleway';\r\n    font-weight:600;\r\n  }\r\n  .username:hover {\r\n    color: ${({ theme }) => theme.postSubInfoHoverText};\r\n  }\r\n\r\n  /* span 사이 가운뎃점 문자 출력 */\r\n  span + span::before {\r\n    padding: 0 0.25rem;\r\n    content: '\\\\B7'; /* 가운뎃점 문자 */\r\n  }\r\n\r\n  .publishedDate {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\r\n  return (\r\n    <SubInfoBlock hasMarginTop={hasMarginTop} className=\"subinfo\">\r\n      <span className=\"username\">\r\n        <Link to={`/blog/@${username}`}>\r\n          <b>{username}</b>\r\n        </Link>\r\n      </span>\r\n      {publishedDate && (\r\n        <span className=\"publishedDate\">\r\n          {moment(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n        </span>\r\n      )}\r\n    </SubInfoBlock>\r\n  );\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport SubInfo from './SubInfo';\r\nimport Tags from './Tags';\r\n\r\n/**\r\n * 포스팅 정보를 담고있는 아이템 컴포넌트\r\n */\r\n\r\nconst PostItemBlock = styled.div`\r\n  padding-top: 1rem;\r\n  padding-bottom: 1rem;\r\n\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n  & + & {\r\n    border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  h2 {\r\n    font-size: 1.5rem;\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .tags {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  & > a {\r\n    margin-top: 1rem;\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .item-body {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post, username }) => {\r\n  const { _id, title, body, tags, publisher, publishedDate } = post;\r\n  return (\r\n    <PostItemBlock>\r\n      <h2>\r\n        <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      </h2>\r\n      <SubInfo username={publisher.username} publishedDate={publishedDate} />\r\n      <Tags tags={tags} username={username} />\r\n      <Link className=\"item-body\" to={`/blog/@${publisher.username}/${_id}`}>\r\n        {body}\r\n      </Link>\r\n    </PostItemBlock>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import styled from 'styled-components';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n/**\r\n * 커스텀 페이지 슬라이더\r\n */\r\n\r\nexport const PageSlider = styled(Slider)`\r\n  &.MuiSlider-root {\r\n    flex: 1;\r\n    margin-top: -0.5rem;\r\n    color: ${({ theme }) => theme.sliderTrack};\r\n  }\r\n  & span.MulSlider-makr:first-of-type {\r\n    width: 0;\r\n  }\r\n  .MuiSlider-thumb {\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    background-color: ${({ theme }) => theme.sliderRail};\r\n    border: 2px solid ${({ theme }) => theme.sliderTrack};\r\n    margin-top: -0.5rem;\r\n    margin-left: -0.75rem;\r\n  }\r\n  .MuiSlider-mark {\r\n    height: 0.5rem;\r\n    width: 1px;\r\n    background-color: ${({ theme }) => theme.sliderRail};\r\n  }\r\n  .MuiSlider-track {\r\n    height: 0.5rem;\r\n  }\r\n  .MuiSlider-rail {\r\n    height: 0.5rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport Button from '../common/Button';\r\nimport PostItem from './common/PostItem';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport { PageSlider } from '../common/CustomSlider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\nconst PostListBlock = styled.div`\r\n  margin-top: 3rem;\r\n  .page-block {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    width: 50%;\r\n    @media screen and (max-width: 700px) {\r\n      width: 70%;\r\n    }\r\n    @media screen and (max-width: 500px) {\r\n      width: 90%;\r\n    }\r\n    color: ${({ theme }) => theme.text};\r\n    .MuiTypography-root {\r\n      font-family: 'NanumBarunGothic';\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostListErrorBlock = styled(ErrorBlock)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1rem;\r\n  .title {\r\n    font-size: 1.25rem;\r\n    font-family: 'Raleway';\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .sub-title {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst WritePostButton = ({ isDarkTheme }) => {\r\n  const btn = !isDarkTheme ? (\r\n    <Button cyan=\"true\" to={'/blog/write'}>\r\n      포스트 작성\r\n    </Button>\r\n  ) : (\r\n    <Button violet=\"true\" to={'/blog/write'}>\r\n      포스트 작성\r\n    </Button>\r\n  );\r\n  return btn;\r\n};\r\n\r\nconst PageBlock = ({ block, handlePageBlock }) => {\r\n  return (\r\n    <div className=\"page-block\">\r\n      <Typography>페이지당 포스트 개수</Typography>\r\n      <PageSlider\r\n        valueLabelDisplay=\"auto\"\r\n        defaultValue={10}\r\n        marks\r\n        min={10}\r\n        max={50}\r\n        step={10}\r\n        value={block}\r\n        onChange={handlePageBlock}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PostList = ({\r\n  postList,\r\n  loading,\r\n  error,\r\n  showWriteButton,\r\n  isDarkTheme,\r\n  username,\r\n  tag,\r\n  block,\r\n  handlePageBlock,\r\n}) => {\r\n  if (loading && postList.length === 0) {\r\n    return <LoadingProgress body />;\r\n  }\r\n  if (error) {\r\n    return (\r\n      <Responsive>\r\n        <PostListErrorBlock>\r\n          <span className=\"error-title\">블로그 리스트 요청 실패.</span>\r\n          <span className=\"error-msg\">ERROR MESSAGE: {error.message}</span>\r\n        </PostListErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <PostListBlock>\r\n        <Helmet>\r\n          <title>MAKE UP HARA :: BLOG</title>\r\n          {username && <title>{username} - MAKE UP HARA :: BLOG</title>}\r\n          {tag && <title>#{tag} - MAKE UP HARA :: BLOG</title>}\r\n          {username && tag && (\r\n            <title>\r\n              {username}#{tag} - MAKE UP HARA :: BLOG\r\n            </title>\r\n          )}\r\n        </Helmet>\r\n        <TitleWrapper>\r\n          <span className=\"title\">\r\n            BLOG\r\n            {username && !tag && (\r\n              <span>\r\n                {' '}\r\n                - <span className=\"sub-title\">{username}</span>\r\n              </span>\r\n            )}\r\n            {tag && !username && (\r\n              <span>\r\n                {' '}\r\n                - <span className=\"sub-title\">#{tag}</span>\r\n              </span>\r\n            )}\r\n            {username && tag && (\r\n              <span>\r\n                {' '}\r\n                - <span className=\"sub-title\">{username}</span>\r\n                <span className=\"sub-title\">#{tag}</span>\r\n              </span>\r\n            )}\r\n          </span>\r\n          {showWriteButton && <WritePostButton isDarkTheme={isDarkTheme} />}\r\n        </TitleWrapper>\r\n        <PageBlock handlePageBlock={handlePageBlock} />\r\n        {postList && (\r\n          <div>\r\n            {postList.map((post) => (\r\n              <PostItem post={post} username={username} key={post._id} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </PostListBlock>\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport qs from 'qs';\r\nimport { getList, unloadList } from '../../module/redux/post';\r\nimport PostList from '../../components/post/PostList';\r\nimport loadable from '@loadable/component';\r\nconst PaginationContainer = loadable(() => import('./PaginationContainer'));\r\n\r\nconst PostListContainer = ({ location, match }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { postList, error, loading, user, isDarkTheme } = useSelector(\r\n    ({ post, loading, user, theme }) => ({\r\n      postList: post.postList,\r\n      error: post.postListError,\r\n      loading: loading['post/GET_LIST'],\r\n      user: user.user,\r\n      isDarkTheme: theme.isDarkTheme,\r\n    }),\r\n  );\r\n  // 유저 정보는 path에서 불러오기\r\n  const { username } = match.params;\r\n  // tag, page는 쿼리에서 불러오기\r\n  const { tag, page } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const [block, setBlock] = useState(10);\r\n  const handlePageBlock = (e, newValue) => {\r\n    setBlock(newValue);\r\n  };\r\n\r\n  const pagination = useRef(false);\r\n  useEffect(() => {\r\n    pagination.current = false;\r\n    dispatch(getList({ username, tag, page }));\r\n    pagination.current = true;\r\n    return () => {\r\n      dispatch(unloadList());\r\n      pagination.current = false;\r\n    };\r\n  }, [dispatch, tag, page, username]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getList({ username, tag, page, block }));\r\n  }, [dispatch, tag, page, username, block]);\r\n\r\n  return (\r\n    <>\r\n      <PostList\r\n        loading={loading}\r\n        error={error}\r\n        postList={postList}\r\n        showWriteButton={user}\r\n        isDarkTheme={isDarkTheme}\r\n        username={username}\r\n        tag={tag}\r\n        block={block}\r\n        handlePageBlock={handlePageBlock}\r\n      />\r\n      {pagination.current && !loading && !error && <PaginationContainer />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(PostListContainer);\r\n"],"sourceRoot":""}