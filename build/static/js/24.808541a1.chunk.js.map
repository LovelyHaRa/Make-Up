{"version":3,"sources":["components/common/editor/WriteActionButtons.js","containers/wiki/edit/WriteActionButtonsContainer.js"],"names":["WriteActionButtonsBlock","styled","div","StyledButton","Button","WriteActionButtons","type","isEdit","onClick","onCancel","editorName","cyan","red","withRouter","localTitle","history","dispatch","useDispatch","useSelector","wiki","title","body","editDocument","editDocumentError","JSON","parse","sessionStorage","getItem","error","_id","useEffect","name","replace","goBack","writeDocument","id"],"mappings":"qbAQA,IAAMA,EAA0BC,IAAOC,IAAV,KAQvBC,EAAeF,YAAOG,IAAPH,CAAH,KAkBHI,IAdY,SAAC,GAAkD,IAAD,IAA/CC,YAA+C,MAAxC,OAAwC,EAAhCC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACtDC,EAAsB,SAATJ,EAAkB,qBAAQ,eAC7C,OACE,kBAACN,EAAD,KACE,kBAACG,EAAD,CAAcQ,MAAI,EAACH,QAASA,GACzBE,EADH,IACgBH,EAAS,eAAO,gBAEhC,kBAACJ,EAAD,CAAcS,KAAG,EAACJ,QAASC,GAA3B,mB,iCC3BN,4DAuDeI,uBAjDqB,SAAC,GAAiB,IAYhDC,EAZiCC,EAAc,EAAdA,QAE/BC,EAAWC,cAFkC,EAIMC,aACvD,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACbC,MAAOD,EAAKC,MACZC,KAAMF,EAAKE,KACXC,aAAcH,EAAKG,aACnBC,kBAAmBJ,EAAKI,sBALpBH,EAJ2C,EAI3CA,MAAOC,EAJoC,EAIpCA,KAAMC,EAJ8B,EAI9BA,aAAcC,EAJgB,EAIhBA,kBASnC,IACET,EAAaM,GAASI,KAAKC,MAAMC,eAAeC,QAAQ,eACxD,MAAOC,GACP,MAAMA,EAhB2C,IAkB3CC,EAAQf,EAARe,IA0BR,OAfAC,qBAAU,WACR,GAAIR,EAAc,CAAC,IACTS,EAAST,EAATS,KACRhB,EAAQiB,QAAR,aAAsBD,IACtBhB,EAAQkB,SAKV,IACEP,eAAeC,QAAQ,cACvB,MAAOC,GACP,MAAMA,KAEP,CAACb,EAASO,EAAcC,IAEzB,kBAAC,IAAD,CAAoBjB,KAAK,OAAOE,QAxBhB,WAChBQ,EAASkB,YAAc,CAAEC,GAAIN,EAAKR,WAuBkBZ,SApBrC,WACfM,EAAQkB","file":"static/js/24.808541a1.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\n\r\n/**\r\n * 에디터 작성버튼\r\n */\r\n\r\nconst WriteActionButtonsBlock = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 4rem;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n`;\r\n\r\nconst WriteActionButtons = ({ type = 'blog', isEdit, onClick, onCancel }) => {\r\n  const editorName = type === 'blog' ? '포스트' : '위키';\r\n  return (\r\n    <WriteActionButtonsBlock>\r\n      <StyledButton cyan onClick={onClick}>\r\n        {editorName} {isEdit ? '수정' : '등록'}\r\n      </StyledButton>\r\n      <StyledButton red onClick={onCancel}>\r\n        취소\r\n      </StyledButton>\r\n    </WriteActionButtonsBlock>\r\n  );\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import React, { useEffect } from 'react';\r\nimport WriteActionButtons from '../../../components/common/editor/WriteActionButtons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { writeDocument } from '../../../module/redux/wiki';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  // 액션함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body, editDocument, editDocumentError } = useSelector(\r\n    ({ wiki }) => ({\r\n      title: wiki.title,\r\n      body: wiki.body,\r\n      editDocument: wiki.editDocument,\r\n      editDocumentError: wiki.editDocumentError,\r\n    }),\r\n  );\r\n  let localTitle;\r\n  try {\r\n    localTitle = title || JSON.parse(sessionStorage.getItem('wiki-title'));\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n  const { _id } = localTitle;\r\n  // 이벤트 정의\r\n  // 문서 등록\r\n  const onPublish = () => {\r\n    dispatch(writeDocument({ id: _id, body }));\r\n  };\r\n  // 취소\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n  // 처리 후 작업\r\n  useEffect(() => {\r\n    if (editDocument) {\r\n      const { name } = editDocument;\r\n      history.replace(`/w/${name}`);\r\n      history.goBack();\r\n    }\r\n    if (editDocumentError) {\r\n      // TODO: Failure Write Document\r\n    }\r\n    try {\r\n      sessionStorage.getItem('wiki-title');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }, [history, editDocument, editDocumentError]);\r\n  return (\r\n    <WriteActionButtons type=\"wiki\" onClick={onPublish} onCancel={onCancel} />\r\n  );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n"],"sourceRoot":""}