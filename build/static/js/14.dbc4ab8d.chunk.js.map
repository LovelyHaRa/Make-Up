{"version":3,"sources":["components/common/ErrorBlock.js","components/common/LoadingProgress.js","components/post/common/Tags.js","components/post/common/SubInfo.js","components/main/BlogSection.js","components/main/WikiSection.js","containers/main/MainContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","LoadingProgressBlock","props","customHeight","css","CustomCircularProgress","CircularProgress","categoryBorder","LoadingProgress","full","body","className","TagsBlock","postTagText","postTagHoverText","buildLink","username","tag","query","qs","stringify","Tags","tags","limit","map","index","to","length","SubInfoBlock","hasMarginTop","postSubInfoText","postSubInfoHoverText","SubInfo","publishedDate","format","Date","BlogSectionBlock","hoverText","SectionErrorBlock","PostBlock","postBorder","hoverList","PostItem","post","_id","title","publisher","BlogSection","postList","loading","error","message","WikiSectionBlock","DocumentBlock","wikiBorder","DocumentItem","document","name","WikiSection","documentList","MainContainer","dispatch","useDispatch","useSelector","wiki","postError","postListError","postLoading","documentError","documentListError","documentLoading","useEffect","getList","block","getDocumentList","postUnload","wikiUnload"],"mappings":"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","file":"static/js/14.dbc4ab8d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={`${full && 'full-height'} ${body && 'body-height'}`}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 포스트의 태그를 출력하는 컴포넌트\r\n */\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => (\r\n  <TagsBlock className=\"tags\">\r\n    {limit > 0 &&\r\n      tags.map(\r\n        (tag, index) =>\r\n          index < limit && (\r\n            <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n              #{tag}\r\n            </Link>\r\n          ),\r\n      )}\r\n    {limit > 0 && limit < tags.length && <span>...</span>}\r\n    {!limit &&\r\n      tags.map((tag) => (\r\n        <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n          #{tag}\r\n        </Link>\r\n      ))}\r\n  </TagsBlock>\r\n);\r\n\r\nexport default Tags;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n\r\n/**\r\n *  포스트의 부가정보(작성자, 작성일자)를 출력하는 컴포넌트\r\n */\r\n\r\nconst SubInfoBlock = styled.div`\r\n  ${(props) =>\r\n    props.hasMarginTop &&\r\n    css`\r\n      margin-top: 1rem;\r\n    `}\r\n  color: ${({ theme }) => theme.postSubInfoText};\r\n  .username {\r\n    font-family: 'Raleway';\r\n    font-weight: 600;\r\n  }\r\n  .username:hover {\r\n    color: ${({ theme }) => theme.postSubInfoHoverText};\r\n  }\r\n\r\n  /* span 사이 가운뎃점 문자 출력 */\r\n  span + span::before {\r\n    padding: 0 0.25rem;\r\n    content: '\\\\B7'; /* 가운뎃점 문자 */\r\n  }\r\n\r\n  .publishedDate {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => (\r\n  <SubInfoBlock hasMarginTop={hasMarginTop} className=\"subinfo\">\r\n    <span className=\"username\">\r\n      <Link to={`/blog/@${username}`}>\r\n        <b>{username}</b>\r\n      </Link>\r\n    </span>\r\n    {publishedDate && (\r\n      <span className=\"publishedDate\">\r\n        {format(new Date(publishedDate), 'yyyy-MM-dd HH:mm:ss')}\r\n      </span>\r\n    )}\r\n  </SubInfoBlock>\r\n);\r\n\r\nexport default SubInfo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport SubInfo from '../post/common/SubInfo';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 최근 등록된 포스트 리스트\r\n */\r\n\r\nconst BlogSectionBlock = styled.div`\r\n  margin: 2rem;\r\n  color: ${({ theme }) => theme.text};\r\n  h3 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .footer {\r\n    font-family: 'Raleway';\r\n  }\r\n`;\r\n\r\nconst SectionErrorBlock = styled(ErrorBlock)`\r\n  margin-top: 2rem;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  & > a {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n        <SubInfo username={publisher.username} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst BlogSection = ({ postList, loading, error }) => {\r\n  if (error) {\r\n    return (\r\n      <SectionErrorBlock>\r\n        <span className=\"error-title\">블로그 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {error.message}</span>\r\n      </SectionErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <BlogSectionBlock>\r\n      <h3>최근 등록된 포스트</h3>\r\n      {!loading && postList && (\r\n        <div>\r\n          {postList.map((post) => (\r\n            <PostItem post={post} key={post._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      <span className=\"footer\">\r\n        <Link to=\"/blog\">MORE POST...</Link>\r\n      </span>\r\n    </BlogSectionBlock>\r\n  );\r\n};\r\n\r\nexport default BlogSection;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 최근 변경된 위키문서 리스트\r\n */\r\n\r\nconst WikiSectionBlock = styled.div`\r\n  margin: 2rem;\r\n  color: ${({ theme }) => theme.text};\r\n  h3 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .footer {\r\n    font-family: 'Raleway';\r\n  }\r\n`;\r\n\r\nconst SectionErrorBlock = styled(ErrorBlock)`\r\n  margin-top: 2rem;\r\n  margin-left: 2rem;\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  font-family: 'NanumBarunGothic';\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = ({ document }) => {\r\n  const { title, publishedDate } = document;\r\n  const { name } = title;\r\n  return (\r\n    <DocumentBlock>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\">\r\n        <span>{format(new Date(publishedDate), 'yyyy-MM-dd')}</span>\r\n      </div>\r\n    </DocumentBlock>\r\n  );\r\n};\r\n\r\nconst WikiSection = ({ documentList, loading, error }) => {\r\n  if (error) {\r\n    return (\r\n      <SectionErrorBlock>\r\n        <span className=\"error-title\">WIKI 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {error.message}</span>\r\n      </SectionErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <WikiSectionBlock>\r\n      <h3>최근 변경된 위키 문서</h3>\r\n      {!loading && documentList && (\r\n        <div>\r\n          {documentList.map((document) => (\r\n            <DocumentItem document={document} key={document._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <span className=\"footer\">\r\n        <Link to=\"/wiki/list\">MORE WIKI...</Link>\r\n      </span>\r\n    </WikiSectionBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSection;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList as postUnload } from '../../module/redux/post';\r\nimport {\r\n  getDocumentList,\r\n  unloadList as wikiUnload,\r\n} from '../../module/redux/wiki';\r\nimport LoadingProgress from '../../components/common/LoadingProgress';\r\nimport BlogSection from '../../components/main/BlogSection';\r\nimport WikiSection from '../../components/main/WikiSection';\r\n\r\nconst MainContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    postList,\r\n    postError,\r\n    postLoading,\r\n    documentList,\r\n    documentError,\r\n    documentLoading,\r\n  } = useSelector(({ post, wiki, loading }) => ({\r\n    postList: post.postList,\r\n    postError: post.postListError,\r\n    postLoading: loading['post/GET_LIST'],\r\n    documentList: wiki.documentList,\r\n    documentError: wiki.documentListError,\r\n    documentLoading: loading['wiki/GET_DOCUMENT_LIST'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(getList({ block: 5 }));\r\n    dispatch(getDocumentList({ block: 5 }));\r\n    return () => {\r\n      dispatch(postUnload());\r\n      dispatch(wikiUnload());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (postLoading || documentLoading) {\r\n    return <LoadingProgress body />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BlogSection\r\n        postList={postList}\r\n        loading={postLoading}\r\n        error={postError}\r\n      />\r\n      <WikiSection\r\n        documentList={documentList}\r\n        loading={documentLoading}\r\n        error={documentError}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n"],"sourceRoot":""}