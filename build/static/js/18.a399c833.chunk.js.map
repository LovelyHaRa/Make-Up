{"version":3,"sources":["components/common/ErrorBlock.js","components/profile/Profile.js","containers/profile/ProfileContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","ProfileBlock","categoryBorder","profileInfoValueBody","profileInputValid","profileInputInValid","StyleInput","input","body","ProfileSubmitButton","Button","ProfileErrorBlock","Profile","user","form","onChange","onSubmit","validName","nameMessage","existNameError","equalName","submitMessage","errorMessage","className","response","status","statusText","username","provider","type","name","value","themeColor","fullWidth","disabled","ProfileContainer","dispatch","useDispatch","useSelector","profile","isNotExistName","checkExistNameResult","isNotExistNameError","checkExistNameResultError","updateUser","updateUserError","useState","setValidName","setEqualName","setNameMessage","setSubmitMessage","setErrorMessage","loadingForm","useRef","useEffect","result","message","current","loginName","undefined","toLowerCase","checkExistName","changeField","key","check","initializeUpdateName","e","target","preventDefault","_id","updateName","id"],"mappings":"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","file":"static/js/18.a399c833.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 프로필 컴포넌트\r\n * 기능: 이름 변경\r\n */\r\n\r\nexport const ProfileBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  .profile-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .profile-info-title {\r\n    font-weight: 300;\r\n    font-size: 1.5rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n  }\r\n  .profile-info-explain {\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n    margin-top: 0.25rem;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-info-value {\r\n    margin-top: 1.25rem;\r\n    span {\r\n      padding: 0.25rem 0.5rem;\r\n      font-size: 1.125rem;\r\n      font-family: 'Raleway', 'NanumGothic';\r\n      border-radius: 0.25rem;\r\n      background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n    }\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-form {\r\n    margin: 1.5rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .value-provider {\r\n    text-transform: uppercase;\r\n  }\r\n  .possible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  .impossible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.errorText};\r\n    margin-top: 0.5rem;\r\n  }\r\n  .success-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyleInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1.125rem;\r\n  font-family: 'Raleway', 'NanumGothic';\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n`;\r\n\r\nconst ProfileSubmitButton = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const ProfileErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst Profile = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  validName,\r\n  nameMessage,\r\n  existNameError,\r\n  equalName,\r\n  submitMessage,\r\n  errorMessage,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  if (existNameError) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">프로필 요청 실패.</span>\r\n        <span>\r\n          Status:{' '}\r\n          <span className=\"error-msg\">{existNameError.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">\r\n            {existNameError.response.statusText}\r\n          </span>\r\n        </span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { username, provider } = user;\r\n  return (\r\n    <ProfileBlock>\r\n      <div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">ID</span>\r\n          <div className=\"profile-info-value\">\r\n            <span>{username}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">로그인 유형</span>\r\n          <span className=\"profile-info-explain\">\r\n            어떤 방식으로 로그인했는지를 확인합니다.\r\n          </span>\r\n          <div className=\"profile-info-value\">\r\n            <span className=\"value-provider\">{provider}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <form className=\"profile-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">DISPLAY NAME</span>\r\n            <span className=\"profile-info-explain\">\r\n              다른 사용자들에게 보여지는 이름입니다.\r\n            </span>\r\n            <StyleInput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={\r\n                !equalName && (validName === true ? 'possible' : 'impossible')\r\n              }\r\n              value={form.name ? form.name : ''}\r\n              onChange={onChange}\r\n            />\r\n            {validName === false && (\r\n              <span className=\"invalid-message\">{nameMessage}</span>\r\n            )}\r\n            {submitMessage !== '' && (\r\n              <span className=\"success-message\">{submitMessage}</span>\r\n            )}\r\n            {errorMessage !== '' && (\r\n              <span className=\"invalid-message\">{errorMessage}</span>\r\n            )}\r\n          </div>\r\n          <ProfileSubmitButton\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validName || equalName}\r\n          >\r\n            수정\r\n          </ProfileSubmitButton>\r\n        </form>\r\n      </div>\r\n    </ProfileBlock>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport Profile from '../../components/profile/Profile';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  checkExistName,\r\n  check,\r\n  initializeUpdateName,\r\n  updateName,\r\n} from '../../module/redux/user';\r\n\r\nconst ProfileContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    user,\r\n    form,\r\n    isNotExistName,\r\n    isNotExistNameError,\r\n    updateUser,\r\n    updateUserError,\r\n  } = useSelector(({ user }) => ({\r\n    user: user.user,\r\n    form: user.profile,\r\n    isNotExistName: user.checkExistNameResult,\r\n    isNotExistNameError: user.checkExistNameResultError,\r\n    updateUser: user.updateUser,\r\n    updateUserError: user.updateUserError,\r\n  }));\r\n\r\n  const [validName, setValidName] = useState(true); // 사용 가능한 이름 여부\r\n  const [equalName, setEqualName] = useState(true); // 기존 사용자 이름이랑 일치하는지 여부\r\n  const [nameMessage, setNameMessage] = useState(''); // 검증 실패 메시지\r\n  const [submitMessage, setSubmitMessage] = useState(''); // submit 결과 메시지\r\n  const [errorMessage, setErrorMessage] = useState(''); // submit 에러 메시지\r\n  const loadingForm = useRef(true);\r\n\r\n  // input 상태 반영\r\n  const onChange = (e) => {\r\n    setNameMessage('');\r\n    setSubmitMessage('');\r\n    setErrorMessage('');\r\n    const { value, name } = e.target;\r\n    dispatch(changeField({ form: 'profile', key: name, value }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name } = form;\r\n    const { _id } = user;\r\n    if (validName && !equalName) {\r\n      dispatch(updateName({ id: _id, name }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 중복되지 않은 이름일 때\r\n    if (!isNotExistName || (isNotExistName && isNotExistName.result)) {\r\n      setValidName(true);\r\n    } else {\r\n      // 상태 업데이트\r\n      setValidName(false);\r\n      setEqualName(false);\r\n      setNameMessage(isNotExistName ? isNotExistName.message : ''); // 메시지 저장\r\n    }\r\n  }, [isNotExistName]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    if (loadingForm.current) return;\r\n    const { name } = form;\r\n    const loginName = user ? user.name : '';\r\n    if (name === undefined) return;\r\n    // 이름이 현재 사용자 이름이랑 다르면\r\n    if (name && name.toLowerCase() !== loginName.toLowerCase()) {\r\n      // 이름이 사용 가능한지 비동기로 요청\r\n      dispatch(checkExistName({ username: user.username, name }));\r\n      setEqualName(false);\r\n    } else {\r\n      // 이름이 같으면\r\n      if (name) {\r\n        setEqualName(true); // 상태 갱신\r\n      } else {\r\n        // 공백일 때\r\n        dispatch(checkExistName({ username: user.username, name })); // 요청해서 공백일 떄의 결과 값을 갱신 한다\r\n      }\r\n    }\r\n  }, [dispatch, form, user]);\r\n\r\n  useEffect(() => {\r\n    const { name } = user ? user : '';\r\n    dispatch(changeField({ form: 'profile', key: 'name', value: name }));\r\n    loadingForm.current = false;\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    if (updateUser) {\r\n      dispatch(check());\r\n      setSubmitMessage('성공적으로 수정되었습니다.');\r\n      dispatch(initializeUpdateName());\r\n    } else if (updateUserError) {\r\n      setErrorMessage('에러가 발생했습니다.');\r\n      dispatch(initializeUpdateName());\r\n    }\r\n  }, [dispatch, updateUser, updateUserError]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeUpdateName());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Profile\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      validName={validName}\r\n      nameMessage={nameMessage}\r\n      isNotExistNameError={isNotExistNameError}\r\n      equalName={equalName}\r\n      submitMessage={submitMessage}\r\n      errorMessage={errorMessage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContainer;\r\n"],"sourceRoot":""}