{"version":3,"sources":["components/common/ErrorBlock.js","components/common/LoadingProgress.js","components/post/common/Tags.js","components/post/common/SubInfo.js","components/main/BlogSection.js","components/main/WikiSection.js","containers/main/MainContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","LoadingProgressBlock","props","customHeight","css","CustomCircularProgress","CircularProgress","categoryBorder","LoadingProgress","full","body","className","TagsBlock","postTagText","postTagHoverText","buildLink","username","tag","query","qs","stringify","Tags","tags","limit","map","index","to","key","length","SubInfoBlock","hasMarginTop","postSubInfoText","postSubInfoHoverText","SubInfo","publishedDate","moment","format","BlogSectionBlock","hoverText","PostBlock","postBorder","hoverList","PostItem","post","_id","title","publisher","BlogSection","postList","loading","postError","message","WikiSectionBlock","DocumentBlock","wikiBorder","DocumentItem","document","name","WikiSection","documentList","error","MainContainer","dispatch","useDispatch","useSelector","wiki","postListError","postLoading","documentError","documentListError","documentLoading","useEffect","getList","block","getDocumentList","postUnload","wikiUnload"],"mappings":"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","file":"static/js/15.8cf7812d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={full ? 'full-height' : body ? 'body-height' : ''}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 포스트의 태그를 출력하는 컴포넌트\r\n */\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => {\r\n  return (\r\n    <TagsBlock className=\"tags\">\r\n      {limit > 0 &&\r\n        tags.map(\r\n          (tag, index) =>\r\n            index < limit && (\r\n              <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n                #{tag}\r\n              </Link>\r\n            ),\r\n        )}\r\n      {limit > 0 && limit < tags.length && <span>...</span>}\r\n      {!limit &&\r\n        tags.map((tag) => (\r\n          <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n            #{tag}\r\n          </Link>\r\n        ))}\r\n    </TagsBlock>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n/**\r\n *  포스트의 부가정보(작성자, 작성일자)를 출력하는 컴포넌트\r\n */\r\n\r\nconst SubInfoBlock = styled.div`\r\n  ${(props) =>\r\n    props.hasMarginTop &&\r\n    css`\r\n      margin-top: 1rem;\r\n    `}\r\n  color: ${({ theme }) => theme.postSubInfoText};\r\n  .username {\r\n    font-family:'Raleway';\r\n    font-weight:600;\r\n  }\r\n  .username:hover {\r\n    color: ${({ theme }) => theme.postSubInfoHoverText};\r\n  }\r\n\r\n  /* span 사이 가운뎃점 문자 출력 */\r\n  span + span:before {\r\n    padding: 0 0.25rem;\r\n    content: '\\\\B7'; /* 가운뎃점 문자 */\r\n  }\r\n\r\n  .publishedDate {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\r\n  return (\r\n    <SubInfoBlock hasMarginTop={hasMarginTop} className=\"subinfo\">\r\n      <span className=\"username\">\r\n        <Link to={`/blog/@${username}`}>\r\n          <b>{username}</b>\r\n        </Link>\r\n      </span>\r\n      {publishedDate && (\r\n        <span className=\"publishedDate\">\r\n          {moment(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n        </span>\r\n      )}\r\n    </SubInfoBlock>\r\n  );\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport SubInfo from '../post/common/SubInfo';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 최근 등록된 포스트 리스트\r\n */\r\n\r\nconst BlogSectionBlock = styled.div`\r\n  margin: 2rem;\r\n  color: ${({ theme }) => theme.text};\r\n  h3 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .footer {\r\n    font-family: 'Raleway';\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  & > a {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n        <SubInfo username={publisher.username} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst BlogSection = ({ postList, loading, postError }) => {\r\n  if (postError) {\r\n    return (\r\n      <ErrorBlock>\r\n        <span className=\"error-title\">블로그 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {postError.message}</span>\r\n      </ErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <BlogSectionBlock>\r\n      <h3>최근 등록된 포스트</h3>\r\n      {!loading && postList && (\r\n        <div>\r\n          {postList.map((post) => (\r\n            <PostItem post={post} key={post._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      <span className=\"footer\">\r\n        <Link to=\"/blog\">MORE POST...</Link>\r\n      </span>\r\n    </BlogSectionBlock>\r\n  );\r\n};\r\n\r\nexport default BlogSection;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 최근 변경된 위키문서 리스트\r\n */\r\n\r\nconst WikiSectionBlock = styled.div`\r\n  margin: 2rem;\r\n  color: ${({ theme }) => theme.text};\r\n  h3 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .footer {\r\n    font-family: 'Raleway';\r\n  }\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  font-family: 'NanumBarunGothic';\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = ({ document }) => {\r\n  const { title, publishedDate } = document;\r\n  const { name } = title;\r\n  return (\r\n    <DocumentBlock>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\">\r\n        <span>{moment(publishedDate).format('YYYY-MM-DD')}</span>\r\n      </div>\r\n    </DocumentBlock>\r\n  );\r\n};\r\n\r\nconst WikiSection = ({ documentList, loading, error }) => {\r\n  if (loading) {\r\n    return <LoadingProgress />;\r\n  }\r\n  if (error) {\r\n    return (\r\n      <ErrorBlock>\r\n        <span className=\"error-title\">WIKI 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {error.message}</span>\r\n      </ErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <WikiSectionBlock>\r\n      <h3>최근 변경된 위키 문서</h3>\r\n      {!loading && documentList && (\r\n        <div>\r\n          {documentList.map((document) => (\r\n            <DocumentItem document={document} key={document._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <span className=\"footer\">\r\n        <Link to=\"/wiki/list\">MORE WIKI...</Link>\r\n      </span>\r\n    </WikiSectionBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSection;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList as postUnload } from '../../module/redux/post';\r\nimport {\r\n  getDocumentList,\r\n  unloadList as wikiUnload,\r\n} from '../../module/redux/wiki';\r\nimport LoadingProgress from '../../components/common/LoadingProgress';\r\nimport BlogSection from '../../components/main/BlogSection';\r\nimport WikiSection from '../../components/main/WikiSection';\r\n\r\nconst MainContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    postList,\r\n    postError,\r\n    postLoading,\r\n    documentList,\r\n    documentError,\r\n    documentLoading,\r\n  } = useSelector(({ post, wiki, loading }) => ({\r\n    postList: post.postList,\r\n    postError: post.postListError,\r\n    postLoading: loading['post/GET_LIST'],\r\n    documentList: wiki.documentList,\r\n    documentError: wiki.documentListError,\r\n    documentLoading: loading['wiki/GET_DOCUMENT_LIST'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(getList({ block: 5 }));\r\n    dispatch(getDocumentList({ block: 5 }));\r\n    return () => {\r\n      dispatch(postUnload());\r\n      dispatch(wikiUnload());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (postLoading || documentLoading) {\r\n    return <LoadingProgress body />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BlogSection\r\n        postList={postList}\r\n        loading={postLoading}\r\n        error={postError}\r\n      />\r\n      <WikiSection\r\n        documentList={documentList}\r\n        loading={documentLoading}\r\n        error={documentError}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainContainer;\r\n"],"sourceRoot":""}