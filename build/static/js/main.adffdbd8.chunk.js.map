{"version":3,"sources":["containers/auth/LoginForm.js","containers/auth/RegisterForm.js","module/redux/theme.js","module/redux/index.js","serviceWorker.js","lib/styles/theme.js","components/common/CustomSwitch.js","components/common/Header.js","containers/common/HeaderContainer.js","components/common/BodyBlock.js","pages/main/MainPage.js","pages/post/PostWritePage.js","pages/post/PostPage.js","pages/post/PostListPage.js","pages/auth/LoginPage.js","pages/auth/RegisterPage.js","pages/auth/callback/LoginWithNaverPage.js","pages/auth/callback/LoginWithKakaoPage.js","pages/wiki/WikiPage.js","pages/wiki/WikiEditPage.js","pages/wiki/WikiRequestPage.js","pages/wiki/WikiHistoryPage.js","pages/wiki/WikiListPage.js","components/common/FlexContentBlock.js","pages/profile/MyPage.js","pages/profile/SecurityPage.js","pages/profile/ActivityPage.js","pages/search/LocalSearchPage.js","App.js","index.js","lib/api/client.js","module/redux/auth.js","lib/styles/open-color.js","module/redux/user.js","lib/api/auth.js","lib/api/post.js","components/common/Button.js","lib/api/user.js","components/common/Responsive.js","module/redux/loading.js","module/redux/search.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","module/redux/wiki.js","lib/api/wiki.js","module/redux/post.js","lib/createRequest.js"],"names":["withRouter","history","useState","error","setError","dispatch","useDispatch","useSelector","auth","user","form","login","authError","onChange","useCallback","e","target","value","name","changeFieid","key","onSubmit","preventDefault","username","password","includes","onSocialLogin","id_token","loginWithGoogle","googleLoginBtn","useRef","auth2","loadGoogleLoginApi","window","googleSDKLoaded","gapi","load","current","init","client_id","process","cookiepolicy","scope","attachClickHandler","googleUser","getAuthResponse","Error","onNaverLoginClick","requestUrl","location","onKakaoLoginClick","loadScript","document","script","id","srcValue","referenceNode","getElementsByTagName","getElementById","googlejssdkNode","createElement","src","parentNode","insertBefore","removeApiScript","tagName","targetId","targetNode","map","node","indexOf","removeChild","removeTag","sdkNode","removeJssdk","useEffect","response","status","check","initializeForm","replace","sessionStorage","setItem","JSON","stringify","type","register","isNotExistUsername","checkExistUsernameResult","isNotExistUsernameError","checkExistUsernameResultError","isNotExistName","checkExistNameResult","isNotExistNameError","checkExistNameResultError","registerResult","registerResultError","passwordConfirm","isValid","setIsValid","validMessage","setValidMessage","prevState","checkExistUsername","result","message","isValidPassword","length","checkExistName","SET_THEME","setTheme","createAction","theme","handleActions","state","isDarkTheme","payload","rootSaga","all","authSaga","userSaga","postSaga","wikiSaga","rootReducer","combineReducers","loading","post","wiki","search","Boolean","hostname","match","lightTheme","body","text","palette","gray","hoverText","categoryBorder","cyan","themeColorBody","themeColorHoverBody","progressBar","progressBody","sliderTrack","sliderRail","hoverList","inputBody","placeholder","btnSearchBody","dropdownBody","loginBody","loginInputBorder","loginInputBorderFocus","darkThemeSwitchBody","darkThemeSwitchTrack","editorTitleBorder","editorText","editorTagComponentBorder","editorTagBoxBorder","editorTagTitle","editorTagButtonBody","editorHoverTagButtonBody","editorTagButtonText","editorTagText","footerText","btnBody","btnHoverBody","btnText","btnDisableBody","btnDisableColor","btnTransparentHoverBody","btnTransparentHoverText","postBorder","postSubInfoText","postSubInfoHoverText","postTagText","postTagHoverText","postActionButtonText","postActionButtonHoverText","postActionButtonBody","postActionButtonHoverBody","wikiMenuBorder","wikiActionButtonBody","wikiActionButtonHoverBody","wikiActionButtonText","wikitActionButtonHoverText","wikiBorder","wikiHistoryLinkText","wikiHistoryLinkHoverText","errorText","red","profileInfoValueBody","profileInputValid","profileInputInValid","searchBorder","darkTheme","violet","DarkThemeSwitch","styled","Switch","HeaderBlock","nav","Menu","div","SearchResponsive","SearchInputWrapper","SearchInput","input","SearchBtn","Link","SearchInputPackage","searchQuery","handleSearchInput","handleSearchKeyUp","focus","setFocus","className","tabIndex","onKeyUp","event","onFocus","onBlur","to","icon","EtcDropDown","MemoizedEtcDropDown","React","memo","SearchDropDown","currentPath","ProfileInfo","OptionMenu","handleDarkThemeToggle","classes","makeStyles","fontFamily","useStyles","setDarkTheme","Typography","component","Grid","container","display","alignItems","justify","style","fontSize","letterSpacing","item","checked","size","LogoutMenu","onLogout","onClick","UserDropDown","NoneUserDropDown","Spacer","Header","library","add","faSearch","faEllipsisH","faEllipsisV","faUserCircle","etc","setEtc","setSearch","userinfo","setUserinfo","noneuser","setNoneUser","handleEtcToggle","prevOpen","handleEtcClose","handleSearchToggle","handleSearchClose","handleUserInfoToggle","handleUserInfoClose","handleNoneUserToggle","handleNoneUserClose","ClickAwayListener","onClickAway","aria-haspopup","justifyContent","Button","transparent","AuthTemplate","loadable","LoginForm","RegisterForm","query","pathname","logout","push","changeInput","localStorage","preload","BodyBlock","props","includeHeader","MainContainer","MainPage","EditorContainer","TagBoxContainer","WriteActionButtonsContainer","EditorFooter","PostWritePage","useHistory","Responsive","PostViewerContainer","PostPage","PostListContainer","PostListPage","LoginPage","RegisterPage","LoginWithNaverPage","useLocation","qs","parse","ignoreQueryPrefix","code","client_secret","loginWithNaver","LoginWithKakaoPage","redirect_uri","loginWithKakao","err","WikiViewerContainer","WikiSearchContainer","WikiPage","WikiEditPage","WikiRequestContainer","WikiRequestPage","WikiHistoryContainer","WikiHistoryPage","WikiListContainer","WikiListPage","FlexContentBlock","direction","MyPageMenuContainer","ProfileContainer","MyPage","SecurityContainer","SecurityPage","ActivityContainer","ActivityPage","LocalSearchContainer","LocalSearchPage","App","getItem","path","exact","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","tempSetUser","loadUser","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console","client","axios","create","CHANGE_FIELD","INITIALIZE_FORM","createRequestActionTypes","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_WITH_GOOGLE","LOGIN_WITH_GOOGLE_SUCCESS","LOGIN_WITH_GOOGLE_FAILURE","LOGIN_WITH_NAVER","LOGIN_WITH_NAVER_SUCCESS","LOGIN_WITH_NAVER_FAILURE","LOGIN_WITH_KAKAO","LOGIN_WITH_KAKAO_SUCCESS","LOGIN_WITH_KAKAO_FAILURE","CHECK_EXIST_USERNAME","CHECK_EXIST_USERNAME_SUCCESS","CHECK_EXIST_USERNAME_FAILURE","CHECK_EXIST_NAME","CHECK_EXIST_NAME_SUCCESS","CHECK_EXIST_NAME_FAILURE","registerSaga","createRequestSaga","authAPI","loginSaga","loginWithGoogleSaga","loginWithNaverSaga","loginWithKakaoSaga","checkExistUsernameSaga","userAPI","checkExistNameSaga","takeLatest","debounce","initialState","produce","draft","indigo","yellow","checkFailureSaga","logoutSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","TEMP_SET_USER","UPDATE_NAME","UPDATE_NAME_SUCCESS","UPDATE_NAME_FAILURE","INITIALIZE_UPDATE_NAME","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","INITIALIZE_CHANGE_PASSWORD","changeField","updateName","initializeUpdateName","changePassword","newPassword","initializeChangePassword","checkSaga","updateNameSaga","changePasswordSaga","call","removeItem","checkError","updateUser","updateUserError","changePasswordResult","changePasswordError","curPassword","confirmPassword","profile","get","writePost","title","tags","readPost","updatePost","patch","removePost","delete","getList","page","tag","block","oldest","day","queryString","readComment","writeComment","updateComment","commentId","deleteComment","buttonStyle","css","fullWidth","themeColor","StyledButton","button","StyledLink","ResponsiveBlock","children","rest","START_LOADING","FINISH_LOADING","startLoading","requestType","finishLoading","action","CHANGE_INPUT","CHANGE_OPTION","INITIALIZE","INITIALIZE_OPTION","changeOption","initialize","option","totalSort","totalTerm","wikiSort","wikilength","blogSort","blogTerm","AuthTemplateBlock","ContentBox","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","GoogleLoginButton","socialBtnStyle","NaverLoginButton","a","KakaoLoginButton","textMap","signinGoogle","ErrorMessage","AuthForm","autoComplete","ref","faGoogle","alt","GET_REQUEST_LIST","GET_REQUEST_LIST_SUCCESS","GET_REQUEST_LIST_FAILURE","SET_TITLE","WRITE_DOCUMENT","WRITE_DOCUMENT_SUCCESS","WRITE_DOCUMENT_FAILURE","READ_DOCUMENT","READ_DOCUMENT_SUCCESS","READ_DOCUMENT_FAILURE","UNLOAD_DOCUMENT","SET_ORIGINAL_DOCUMENT","GET_DOCUMENT_LIST","GET_DOCUMENT_LIST_SUCCESS","GET_DOCUMENT_LIST_FAILURE","UNLOAD_LIST","GET_HISTORY_LIST","GET_HISTORY_LIST_SUCCESS","GET_HISTORY_LIST_FAILURE","GET_SEARCH_LIST","GET_SEARCH_LIST_SUCCESS","GET_SEARCH_LIST_FAILURE","GET_DIRECT_TITLE","GET_DIRECT_TITLE_SUCCESS","GET_DIRECT_TITLE_FAILURE","GET_RANDOM_TITLE","GET_RANDOM_TITLE_SUCCESS","GET_RANDOM_TITLE_FAILURE","GET_DOCUMENT_COUNT","GET_DOCUMENT_COUNT_SUCCESS","GET_DOCUMENT_COUNT_FAILURE","ADD_BARCODE_NUMBER","ADD_BARCODE_NUMBER_SUCCESS","ADD_BARCODE_NUMBER_FAILURE","getRequestList","setTitle","writeDocument","readDocument","r","unloadDocument","setOriginalDocument","getDocumentList","unloadList","getHistoryList","getSearchList","shortest","longest","getDirectTitle","getRandomTitle","getDocumentCount","addBarcodeNumber","getRequestListSaga","writeDocumentSaga","readDocumentSaga","getDocumentListSaga","getHistoryListSaga","getSearchListSaga","getDirectTitleSaga","getRandomTitleSaga","getDocumentCountSaga","addBarcodeNumberSaga","requestList","requestListError","titleError","editDocument","editDocumentError","directName","directError","randomTitle","randomTitleError","documentError","documentList","documentListError","historyList","historyListError","searchList","meta","searchListError","lastPage","parseInt","headers","documentCount","documentCountError","addBarcodeNumberResult","addBarcodeNumberResultError","SET_ORIGINAL_POST","UNLOAD_POST","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","GET_LIST","GET_LIST_SUCCESS","GET_LIST_FAILURE","READ_POST_COMMENT","READ_POST_COMMENT_SUCCESS","READ_POST_COMMENT_FAILURE","WRITE_POST_COMMENT","WRITE_POST_COMMENT_SUCCESS","WRITE_POST_COMMENT_FAILURE","UPDATE_POST_COMMENT","UPDATE_POST_COMMENT_SUCCESS","UPDATE_POST_COMMENT_FAILURE","UNLOAD_POST_COMMENT","setOriginalPost","unloadPost","readPostComment","writePostComment","unloadPostComment","writePostSaga","postAPI","readPostSaga","updatePostSaga","getListSaga","readPostCommentSaga","writePostCommentSaga","updatePostCommentSaga","editPost","editPostError","postError","postList","postCount","postListError","targetPostId","commentList","commentCount","commentLastPage","commentListError","editComment","editCommentError","_id","neditPosttError","request","SUCCESS","FAILURE","put","data"],"mappings":"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","file":"static/js/main.adffdbd8.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport {\r\n  changeFieid,\r\n  login,\r\n  loginWithGoogle,\r\n  initializeForm,\r\n} from '../../module/redux/auth';\r\nimport { check } from '../../module/redux/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  // 폼 데이터 변경 이벤트\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      dispatch(changeFieid({ form: 'login', key: name, value }));\r\n      setError(null);\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // submit 이벤트\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const { username, password } = form;\r\n      if ([username, password].includes('')) {\r\n        setError('빈 칸을 모두 입력하세요.');\r\n        return;\r\n      }\r\n      dispatch(login({ username, password }));\r\n    },\r\n    [dispatch, form],\r\n  );\r\n\r\n  // 구글 로그인 이벤트\r\n  const onSocialLogin = useCallback(\r\n    ({ id_token }) => {\r\n      dispatch(loginWithGoogle({ id_token }));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // Login with Google\r\n  const googleLoginBtn = useRef(null);\r\n  const auth2 = useRef(null);\r\n\r\n  // Config Google Login API\r\n  const loadGoogleLoginApi = useCallback(() => {\r\n    // 로그인 버튼 이벤트 주입\r\n    const prepareLoginButton = () => {\r\n      auth2.current.attachClickHandler(\r\n        googleLoginBtn.current,\r\n        {},\r\n        (googleUser) => {\r\n          // const profile = googleUser.getBasicProfile();\r\n          // console.log('Token || ' + googleUser.getAuthResponse().id_token);\r\n          // console.log('ID: ' + profile.getId());\r\n          // console.log('Name: ' + profile.getName());\r\n          // console.log('Image URL: ' + profile.getImageUrl());\r\n          // console.log('Email: ' + profile.getEmail());\r\n\r\n          const { id_token } = googleUser.getAuthResponse();\r\n          onSocialLogin({ id_token });\r\n        },\r\n        (error) => {\r\n          // console.log(JSON.stringify(error, undefined, 2));\r\n          Error(error);\r\n        },\r\n      );\r\n    };\r\n\r\n    window.googleSDKLoaded = () => {\r\n      window.gapi.load('auth2', () => {\r\n        auth2.current = window.gapi.auth2.init({\r\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          cookiepolicy: 'single_host_origin',\r\n          scope: 'profile email',\r\n        });\r\n        prepareLoginButton();\r\n      });\r\n    };\r\n  }, [onSocialLogin]);\r\n\r\n  // 네이버 로그인 클릭 이벤트\r\n  const onNaverLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_NAVER_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_NAVER_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://nid.naver.com/oauth2.0/authorize?response_type=code';\r\n    requestUrl += `&client_id=${client_id}`;\r\n    requestUrl += `&redirect_uri=${redirect_uri}`;\r\n    requestUrl += `&state=${state}`;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // 카카오 로그인 클릭 이벤트\r\n  const onKakaoLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_KAKAO_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://kauth.kakao.com/oauth/authorize?response_type=code';\r\n    requestUrl += `&client_id=${client_id}`;\r\n    requestUrl += `&redirect_uri=${redirect_uri}`;\r\n    requestUrl += `&state=${state}`;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // Load Script\r\n  const loadScript = useCallback((document, script, id, srcValue) => {\r\n    const referenceNode = document.getElementsByTagName(script)[0];\r\n    if (document.getElementById(id)) {\r\n      return;\r\n    }\r\n    const googlejssdkNode = document.createElement(script);\r\n    googlejssdkNode.id = id;\r\n    googlejssdkNode.src = srcValue;\r\n    referenceNode.parentNode.insertBefore(googlejssdkNode, referenceNode);\r\n  }, []);\r\n\r\n  // 언마운트시 API 스크립트 제거\r\n  const removeApiScript = useCallback(() => {\r\n    const removeTag = (tagName, targetId) => {\r\n      const targetNode = document.getElementsByTagName(tagName);\r\n      [...targetNode].map(\r\n        (node) =>\r\n          node.src.indexOf(targetId) >= 0 && node.parentNode.removeChild(node),\r\n      );\r\n    };\r\n\r\n    removeTag('script', 'apis.google.com');\r\n\r\n    const removeJssdk = (id) => {\r\n      const sdkNode = document.getElementById(id);\r\n      if (sdkNode) {\r\n        sdkNode.parentNode.removeChild(sdkNode);\r\n      }\r\n    };\r\n\r\n    removeJssdk('google-jssdk');\r\n  }, []);\r\n\r\n  // 컴포넌트 업데이트시 소셜로그인 스크립트 로딩\r\n  // 언마운트시 스크립트 제거\r\n  useEffect(() => {\r\n    loadScript(\r\n      document,\r\n      'script',\r\n      'google-jssdk',\r\n      'https://apis.google.com/js/platform.js?onload=googleSDKLoaded',\r\n    );\r\n    loadGoogleLoginApi();\r\n\r\n    return () => {\r\n      removeApiScript();\r\n    };\r\n  }, [loadScript, removeApiScript, loadGoogleLoginApi]);\r\n\r\n  // 로그인 성공/실페에 따른 처리\r\n  useEffect(() => {\r\n    // 로그인 실패 시 에러 메시지 출력\r\n    if (authError) {\r\n      if (authError.response.status === 401) {\r\n        setError('계정 또는 비밀번호가 일치하지 않습니다.');\r\n        return;\r\n      }\r\n      setError(`로그인 실패: ${authError}`);\r\n      return;\r\n    }\r\n    // 로그인 성공 시 check 액션을 통해 유저 정보를 리덕스 상태에 업데이트\r\n    if (auth) {\r\n      dispatch(check());\r\n      dispatch(initializeForm()); // 폼 입력 초기화\r\n    }\r\n    return () => {\r\n      dispatch(initializeForm()); // 언마운트 시 폼 입력 초기화\r\n    };\r\n  }, [auth, authError, dispatch]);\r\n\r\n  // 로그인 성공시 유저 정보 세션에 저장 후 페이지 리다이렉션\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/');\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n      } catch (error) {\r\n        throw new Error('cannot access sessionStorage');\r\n      }\r\n    }\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n      googleLoginBtn={googleLoginBtn}\r\n      onNaverLoginClick={onNaverLoginClick}\r\n      onKakaoLoginClick={onKakaoLoginClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport {\r\n  changeFieid,\r\n  register,\r\n  initializeForm,\r\n  checkExistUsername,\r\n  checkExistName,\r\n} from '../../module/redux/auth';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    form,\r\n    isNotExistUsername,\r\n    isNotExistUsernameError,\r\n    isNotExistName,\r\n    isNotExistNameError,\r\n    registerResult,\r\n    registerResultError,\r\n  } = useSelector(({ auth }) => ({\r\n    form: auth.register,\r\n    isNotExistUsername: auth.checkExistUsernameResult,\r\n    isNotExistUsernameError: auth.checkExistUsernameResultError,\r\n    isNotExistName: auth.checkExistNameResult,\r\n    isNotExistNameError: auth.checkExistNameResultError,\r\n    registerResult: auth.registerResult,\r\n    registerResultError: auth.registerResultError,\r\n  }));\r\n\r\n  const [isValid, setIsValid] = useState({\r\n    username: true,\r\n    password: true,\r\n    passwordConfirm: true,\r\n    name: true,\r\n  });\r\n  const [validMessage, setValidMessage] = useState({\r\n    username: null,\r\n    password: null,\r\n    passwordConfirm: null,\r\n    name: null,\r\n  });\r\n  const MIN_PASSWORD_LENGTH = 8;\r\n\r\n  // 폼 데이터 변경 이벤트\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      dispatch(changeFieid({ form: 'register', key: name, value }));\r\n      setError(null);\r\n      if (name === 'username') {\r\n        setIsValid((prevState) => ({ ...prevState, username: true }));\r\n        setValidMessage((prevState) => ({\r\n          ...prevState,\r\n          username: null,\r\n        }));\r\n      } else if (name === 'name') {\r\n        setIsValid((prevState) => ({ ...prevState, name: true }));\r\n        setValidMessage((prevState) => ({\r\n          ...prevState,\r\n          name: null,\r\n        }));\r\n      }\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // submit 이벤트\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const { username, password, passwordConfirm, name } = form;\r\n      // 하나라도 비어 있다면\r\n      if ([username, password, passwordConfirm, name].includes('')) {\r\n        setError('빈 칸을 모두 입력하세요.');\r\n        return;\r\n      }\r\n      // 비밀번호가 일치하지 않는다면\r\n      if (password !== passwordConfirm) {\r\n        setError('비밀번호가 일치하지 않습니다.');\r\n        dispatch(changeFieid({ form: 'register', key: 'password', value: '' }));\r\n        dispatch(\r\n          changeFieid({ form: 'register', key: 'passwordConfirm', value: '' }),\r\n        );\r\n        return;\r\n      }\r\n      dispatch(register({ username, password, name }));\r\n    },\r\n    [dispatch, form],\r\n  );\r\n\r\n  // const isLoading = useRef(true);\r\n  // // 컴포넌트가 처음 렌더링 될 때  form을 초기화함\r\n  // useEffect(() => {\r\n  //   dispatch(initializeForm('register'));\r\n  //   isLoading.current = false;\r\n  // }, [dispatch]);\r\n\r\n  // 비동기 계정명 중복 체크\r\n  useEffect(() => {\r\n    if (form.username !== '') {\r\n      dispatch(checkExistUsername({ username: form.username }));\r\n    }\r\n  }, [dispatch, form.username]);\r\n\r\n  // 계정명 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistUsernameError) {\r\n      setIsValid((prevState) => ({ ...prevState, username: false }));\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        username: '인증 서버 연결에 실패했습니다.',\r\n      }));\r\n    } else if (isNotExistUsername?.result) {\r\n      setIsValid((prevState) => ({ ...prevState, username: true }));\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        username: null,\r\n      }));\r\n    } else {\r\n      setIsValid((prevState) => ({ ...prevState, username: false }));\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        username: isNotExistUsername ? isNotExistUsername.message : null,\r\n      }));\r\n    }\r\n  }, [isNotExistUsername, isNotExistUsernameError]);\r\n\r\n  useEffect(() => {\r\n    const isValidPassword =\r\n      form.password.length >= MIN_PASSWORD_LENGTH || form.password.length === 0;\r\n    setIsValid((prevState) => ({ ...prevState, password: isValidPassword }));\r\n    if (isValidPassword) {\r\n      setValidMessage((prevState) => ({ ...prevState, password: null }));\r\n    } else {\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        password: '비밀번호는 8자 이상 입력해야 합니다.',\r\n      }));\r\n    }\r\n  }, [form.password]);\r\n\r\n  useEffect(() => {\r\n    const isValidPassword =\r\n      form.passwordConfirm === form.password ||\r\n      form.passwordConfirm.length === 0;\r\n    setIsValid((prevState) => ({\r\n      ...prevState,\r\n      passwordConfirm: isValidPassword,\r\n    }));\r\n    if (isValidPassword) {\r\n      setValidMessage((prevState) => ({ ...prevState, passwordConfirm: null }));\r\n    } else {\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        passwordConfirm: '비밀번호가 일치하지 않습니다.',\r\n      }));\r\n    }\r\n  }, [form.password, form.passwordConfirm]);\r\n\r\n  // 비동기 이름 중복 체크\r\n  useEffect(() => {\r\n    if (form.name === '') {\r\n      return;\r\n    }\r\n    if (!isNotExistUsername || !isNotExistUsername.result) {\r\n      setIsValid((prevState) => ({ ...prevState, name: false }));\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        name: '계정 이름이 유효하지 않습니다.',\r\n      }));\r\n      return;\r\n    }\r\n    dispatch(checkExistName({ username: form.username, name: form.name }));\r\n  }, [form.username, form.name, isNotExistUsername, dispatch]);\r\n\r\n  // 이름 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistNameError) {\r\n      setIsValid((prevState) => ({ ...prevState, name: false }));\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        name: '인증 서버 연결에 실패했습니다.',\r\n      }));\r\n    } else if (isNotExistName?.result) {\r\n      setIsValid((prevState) => ({ ...prevState, name: true }));\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        name: null,\r\n      }));\r\n    } else if (!isNotExistName?.result) {\r\n      setIsValid((prevState) => ({ ...prevState, name: false }));\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        name: isNotExistName ? isNotExistName.message : null,\r\n      }));\r\n    }\r\n  }, [isNotExistName, isNotExistNameError]);\r\n\r\n  // 회원가입 성공/실패 처리\r\n  useEffect(() => {\r\n    if (registerResultError) {\r\n      // 계정명이 이미 존재할 때\r\n      if (registerResultError.response.status === 409) {\r\n        setError('이미 존재하는 계정입니다.');\r\n        return;\r\n      }\r\n      // 기타 이유\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n    if (registerResult) {\r\n      history.replace('/login');\r\n    }\r\n  }, [registerResult, registerResultError, history]);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      dispatch(initializeForm('register'));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      isValid={isValid}\r\n      validMessage={validMessage}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\n/* action type */\r\nconst SET_THEME = 'theme/SET_THEME';\r\n\r\n/* action */\r\nexport const setTheme = createAction(SET_THEME);\r\n\r\n/* redux-saga */\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  isDarkTheme: false,\r\n};\r\n\r\n/* reducer */\r\nconst theme = handleActions(\r\n  {\r\n    [SET_THEME]: (state, { payload: isDarkTheme }) => ({\r\n      ...state,\r\n      isDarkTheme,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default theme;\r\n","import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport post, { postSaga } from './post';\r\nimport wiki, { wikiSaga } from './wiki';\r\nimport theme from './theme';\r\nimport search from './search';\r\n\r\n/* root reducer */\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n  theme,\r\n  post,\r\n  wiki,\r\n  search,\r\n});\r\n\r\n/* root saga */\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), postSaga(), wikiSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import palette from './open-color';\r\n\r\nexport const lightTheme = {\r\n  /* Common */\r\n  body: '#fff',\r\n  text: palette.gray[9],\r\n  hoverText: palette.gray[6],\r\n  categoryBorder: palette.cyan[7],\r\n  themeColorBody: palette.cyan[7],\r\n  themeColorHoverBody: palette.cyan[5],\r\n  progressBar: palette.cyan[3],\r\n  progressBody: palette.cyan[1],\r\n  sliderTrack: palette.cyan[3],\r\n  sliderRail: palette.cyan[1],\r\n  /* Header */\r\n  hoverList: palette.gray[2],\r\n  inputBody: palette.gray[1],\r\n  placeholder: palette.gray[7],\r\n  btnSearchBody: palette.gray[1],\r\n  dropdownBody: '#fff',\r\n  /* AuthForm */\r\n  loginBody: palette.gray[2],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[7],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: palette.gray[7],\r\n  darkThemeSwitchTrack: palette.gray[5],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[4],\r\n  editorText: palette.gray[8],\r\n  editorTagComponentBorder: palette.gray[4],\r\n  editorTagBoxBorder: palette.gray[9],\r\n  editorTagTitle: palette.gray[8],\r\n  editorTagButtonBody: palette.gray[8],\r\n  editorHoverTagButtonBody: palette.gray[6],\r\n  editorTagButtonText: '#fff',\r\n  editorTagText: palette.gray[6],\r\n  /* Footer */\r\n  footerText: palette.gray[8],\r\n  /* Button */\r\n  btnBody: palette.gray[9],\r\n  btnHoverBody: palette.gray[7],\r\n  btnText: '#fff',\r\n  btnDisableBody: palette.cyan[2],\r\n  btnDisableColor: palette.gray[9],\r\n  btnTransparentHoverBody: palette.gray[1],\r\n  btnTransparentHoverText: palette.gray[7],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[4],\r\n  postSubInfoText: palette.gray[6],\r\n  postSubInfoHoverText: palette.gray[7],\r\n  postTagText: palette.cyan[7],\r\n  postTagHoverText: palette.cyan[5],\r\n  postActionButtonText: palette.gray[7],\r\n  postActionButtonHoverText: palette.gray[6],\r\n  postActionButtonBody: palette.gray[2],\r\n  postActionButtonHoverBody: palette.gray[1],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[5],\r\n  wikiActionButtonBody: palette.gray[2],\r\n  wikiActionButtonHoverBody: palette.gray[1],\r\n  wikiActionButtonText: palette.gray[7],\r\n  wikitActionButtonHoverText: palette.gray[6],\r\n  wikiBorder: palette.gray[4],\r\n  wikiHistoryLinkText: palette.cyan[7],\r\n  wikiHistoryLinkHoverText: palette.cyan[5],\r\n  /* Error */\r\n  errorText: palette.red[5],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.cyan[0],\r\n  profileInputValid: palette.cyan[2],\r\n  profileInputInValid: palette.red[3],\r\n  /* Searck */\r\n  searchBorder: palette.gray[4],\r\n};\r\n\r\nexport const darkTheme = {\r\n  /* Common */\r\n  body: palette.gray[9],\r\n  text: '#fff',\r\n  hoverText: palette.gray[3],\r\n  categoryBorder: palette.violet[5],\r\n  themeColorBody: palette.violet[5],\r\n  themeColorHoverBody: palette.violet[3],\r\n  progressBar: palette.violet[3],\r\n  progressBody: palette.violet[1],\r\n  sliderTrack: palette.violet[3],\r\n  sliderRail: palette.violet[1],\r\n  /* Header */\r\n  hoverList: palette.gray[7],\r\n  inputBody: palette.gray[7],\r\n  placeholder: palette.gray[2],\r\n  btnSearchBody: palette.gray[8],\r\n  dropdownBody: palette.gray[9],\r\n  /* AuthForm */\r\n  loginBody: palette.gray[7],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[3],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: '#fff',\r\n  darkThemeSwitchTrack: palette.gray[2],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[5],\r\n  editorText: palette.gray[5],\r\n  editorTagComponentBorder: palette.gray[5],\r\n  editorTagBoxBorder: palette.gray[5],\r\n  editorTagTitle: palette.gray[6],\r\n  editorTagButtonBody: palette.gray[2],\r\n  editorHoverTagButtonBody: palette.gray[4],\r\n  editorTagButtonText: palette.gray[9],\r\n  editorTagText: palette.gray[4],\r\n  /* Footer */\r\n  footerText: palette.gray[2],\r\n  /* Button */\r\n  btnBody: '#fff',\r\n  btnHoverBody: palette.gray[4],\r\n  btnText: palette.gray[9],\r\n  btnDisableBody: palette.violet[3],\r\n  btnDisableColor: palette.gray[9],\r\n  btnTransparentHoverBody: palette.gray[7],\r\n  btnTransparentHoverText: palette.gray[1],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[5],\r\n  postSubInfoText: palette.gray[5],\r\n  postSubInfoHoverText: palette.gray[4],\r\n  postTagText: palette.violet[7],\r\n  postTagHoverText: palette.violet[5],\r\n  postActionButtonText: palette.gray[5],\r\n  postActionButtonHoverText: palette.gray[3],\r\n  postActionButtonBody: palette.gray[8],\r\n  postActionButtonHoverBody: palette.gray[7],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[7],\r\n  wikiActionButtonBody: palette.gray[8],\r\n  wikiActionButtonHoverBody: palette.gray[7],\r\n  wikiActionButtonText: palette.gray[5],\r\n  wikitActionButtonHoverText: palette.gray[3],\r\n  wikiBorder: palette.gray[5],\r\n  wikiHistoryLinkText: palette.violet[7],\r\n  wikiHistoryLinkHoverText: palette.violet[5],\r\n  /* Error */\r\n  errorText: palette.red[9],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.violet[5],\r\n  profileInputValid: palette.violet[3],\r\n  profileInputInValid: palette.red[3],\r\n  /* Searck */\r\n  searchBorder: palette.gray[5],\r\n};\r\n","import styled from 'styled-components';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n/**\r\n * 커스텀 스위치(Dark Theme)\r\n */\r\n\r\nexport const DarkThemeSwitch = styled(Switch)`\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n    background-color: ${({ theme }) => theme.darkThemeSwitchTrack};\r\n  }\r\n  .MuiSwitch-switchBase {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n`;\r\n\r\nexport default null;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faEllipsisH,\r\n  faEllipsisV,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from './Button';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { DarkThemeSwitch } from './CustomSwitch';\r\n\r\n// Header 컴포넌트의 css 정의\r\nconst HeaderBlock = styled.nav`\r\n  position: fixed;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.body};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  z-index: 10;\r\n  li {\r\n    list-style-type: none !important;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n  }\r\n  .header-left {\r\n    align-items: center;\r\n  }\r\n  .header-mid {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .header-right {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .logo {\r\n    margin-left: 0.25rem;\r\n    margin-right: 0.25rem;\r\n    font-size: 1rem;\r\n    letter-spacing: 0.5px;\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .menu {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .main-menu {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .menu div > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .main-menu {\r\n      display: none;\r\n    }\r\n    .all-menu p {\r\n      margin: 0.5rem 0.5rem 0;\r\n      color: ${({ theme }) => theme.hoverText};\r\n      font-family: 'Raleway';\r\n      font-weight: 600;\r\n    }\r\n    .all-menu li {\r\n      margin: 0;\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n  }\r\n  @media screen and (min-width: 501px) {\r\n    .all-menu {\r\n      display: none;\r\n    }\r\n  }\r\n  .btn-sign-in {\r\n    margin-right: 0.5rem;\r\n    margin-left: 1rem;\r\n  }\r\n  .user-info {\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .dropdown {\r\n    position: fixed;\r\n    z-index: 2000;\r\n  }\r\n  .dropdown.dropdown-menu {\r\n    width: 14rem;\r\n    top: 2.5rem;\r\n    background: ${({ theme }) => theme.dropdownBody};\r\n    color: ${({ theme }) => theme.text};\r\n    border: none;\r\n    border-radius: 3px;\r\n    box-shadow: ${({ theme }) =>\r\n      theme.body === '#fff'\r\n        ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n        : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n    font-size: 0.8rem;\r\n  }\r\n  .dropdown.dropdown-menu hr {\r\n    margin: 0 0.25rem;\r\n    border: 0;\r\n    height: 1px;\r\n    background: ${palette.gray[5]};\r\n  }\r\n  .dropdown.dropdown-menu ul {\r\n    padding: 0.5rem 0.25rem;\r\n    margin: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li {\r\n    margin-top: 0.25rem;\r\n    padding: 0.5rem;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  .dropdown.dropdown-menu li:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  .dropdown.dropdown-menu.dropdown-user-info {\r\n    width: 16rem;\r\n    right: 0.5rem;\r\n  }\r\n  .etc-menu,\r\n  .logout-menu {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .profile-menu p {\r\n    margin: 0.5rem 0.5rem 0;\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: 'Raleway';\r\n    font-weight: 600;\r\n  }\r\n  .profile-menu li {\r\n    margin: 0;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n  .profile-menu-mypage {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .logout-menu {\r\n    font-size: 0.9rem;\r\n  }\r\n  .dropdown.dropdown-search-input {\r\n    display: flex;\r\n    top: 2.75rem;\r\n    right: 6.625rem;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.55);\r\n  }\r\n  .none-user {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .none-user div > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\n// 메뉴 영역 컴포넌트\r\nconst Menu = styled.div`\r\n  &:first-child {\r\n    margin-left: 1rem;\r\n  }\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n  &:last-child {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\n// 반응형 검색 컴포넌트\r\nconst SearchResponsive = styled.div`\r\n  .search-input.focus {\r\n    border: 2px solid ${({ theme }) => theme.themeColorBody};\r\n    border-radius: 3px;\r\n  }\r\n  @media screen and (min-width: 769px) {\r\n    .search-input {\r\n      display: flex;\r\n    }\r\n    .search-btn {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    .search-input {\r\n      display: none;\r\n    }\r\n    .search-btn {\r\n      display: inherit;\r\n      color: ${({ theme }) => theme.text};\r\n      margin: 0 1rem;\r\n    }\r\n    .search-btn > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\n// 검색 컴포넌트 Wrapper\r\nconst SearchInputWrapper = styled.div`\r\n  height: 2rem;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n// 검색 컴포넌트의 input style 정의\r\nconst SearchInput = styled.input`\r\n  appearance: none;\r\n  -webkit-appearance: none;\r\n  border-radius: 0;\r\n  padding: 0.55rem;\r\n  border: none;\r\n  border-top-left-radius: 3px;\r\n  border-bottom-left-radius: 3px;\r\n  background: ${({ theme }) => theme.inputBody};\r\n  color: ${({ theme }) => theme.text};\r\n  &::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n// 검색 컴포넌트 드롭다운 버튼\r\nconst SearchBtn = styled(Link)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.btnSearchBody};\r\n  color: ${({ theme }) => theme.text};\r\n  border-top-right-radius: 3px;\r\n  border-bottom-right-radius: 3px;\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n`;\r\n\r\n// 검색 input과 액션 버튼을 패키징\r\nconst SearchInputPackage = ({\r\n  type,\r\n  searchQuery,\r\n  handleSearchInput,\r\n  handleSearchKeyUp,\r\n}) => {\r\n  const [focus, setFocus] = useState(false);\r\n  return (\r\n    <div className={`${type}${focus ? ' focus' : ''}`} tabIndex=\"-1\">\r\n      <SearchInputWrapper>\r\n        <SearchInput\r\n          placeholder=\"검색\"\r\n          value={searchQuery}\r\n          onChange={handleSearchInput}\r\n          onKeyUp={(event) => {\r\n            if (event.key === 'Enter') {\r\n              handleSearchKeyUp(searchQuery);\r\n            }\r\n          }}\r\n          onFocus={() => setFocus(true)}\r\n          onBlur={() => setFocus(false)}\r\n        />\r\n      </SearchInputWrapper>\r\n      <SearchBtn to={`/search?query=${searchQuery}`}>\r\n        <FontAwesomeIcon icon=\"search\" />\r\n      </SearchBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 기타메뉴 드롭다운 컴포넌트\r\nconst EtcDropDown = ({ state }) =>\r\n  state && (\r\n    <div className=\"dropdown dropdown-menu\">\r\n      <div className=\"all-menu\">\r\n        <p>MAIN MENU</p>\r\n        <ul>\r\n          <Link to=\"/w\">\r\n            <li>WIKI</li>\r\n          </Link>\r\n          <Link to=\"/blog\">\r\n            <li>blog</li>\r\n          </Link>\r\n        </ul>\r\n        <hr />\r\n      </div>\r\n      <ul className=\"etc-menu\">\r\n        <Link to=\"/wiki/request\">\r\n          <li>작성이 필요한 문서[WIKI]</li>\r\n        </Link>\r\n        {/* <li>외부사이트 검색(구현 중...)</li>\r\n          <li>바코드 / QR코드 만들기(구현 중...)</li>\r\n          <li>실시간 검색어 순위(구현 중...)</li>\r\n          <li>TODO(구현 중...)</li> */}\r\n      </ul>\r\n    </div>\r\n  );\r\nconst MemoizedEtcDropDown = React.memo(EtcDropDown);\r\n\r\n// 검색 컴포넌트 드롭다운 처리\r\nconst SearchDropDown = ({ state, currentPath }) =>\r\n  state && (\r\n    <SearchInputPackage\r\n      type=\"dropdown dropdown-search-input\"\r\n      currentPath={currentPath}\r\n    />\r\n  );\r\n\r\n// 유저 정보 드롭다운\r\nconst ProfileInfo = ({ user }) => (\r\n  <div className=\"profile-menu\">\r\n    <p>{user.name}</p>\r\n    <ul>\r\n      <Link to=\"/mypage\">\r\n        <li className=\"profile-menu-mypage\">My Page</li>\r\n      </Link>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\n// 옵션 메뉴 드롭다운\r\nconst OptionMenu = ({ isDarkTheme, handleDarkThemeToggle }) => {\r\n  const useStyles = makeStyles(() => ({\r\n    darkTheme: { fontFamily: 'Raleway' },\r\n  }));\r\n  const classes = useStyles();\r\n  // 다크 모드 상태 저장\r\n  const [darkTheme, setDarkTheme] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isDarkTheme) {\r\n      setDarkTheme(true);\r\n    }\r\n  }, [isDarkTheme]);\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Typography component=\"div\">\r\n          <Grid\r\n            component=\"label\"\r\n            container\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            style={{\r\n              fontSize: '0.9rem',\r\n              fontFamily: 'sans-serif',\r\n              letterSpacing: '0',\r\n            }}\r\n          >\r\n            <Grid className={classes.darkTheme} item>\r\n              DARK THEME\r\n            </Grid>\r\n            <Grid item>\r\n              <DarkThemeSwitch\r\n                checked={darkTheme}\r\n                onChange={() => {\r\n                  handleDarkThemeToggle(darkTheme);\r\n                  setDarkTheme(!darkTheme);\r\n                }}\r\n                name=\"darkTheme\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\n// 로그아웃 메뉴\r\nconst LogoutMenu = ({ onLogout, currentPath }) => (\r\n  <ul className=\"logout-menu\">\r\n    <Link to={currentPath} onClick={onLogout}>\r\n      <li>로그아웃</li>\r\n    </Link>\r\n  </ul>\r\n);\r\n\r\n// 로그인 상태일 때 옵션 메뉴\r\nconst UserDropDown = ({\r\n  state,\r\n  user,\r\n  onLogout,\r\n  isDarkTheme,\r\n  handleDarkThemeToggle,\r\n  currentPath,\r\n}) =>\r\n  state && (\r\n    <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n      <ProfileInfo user={user} />\r\n      <hr />\r\n      <OptionMenu\r\n        isDarkTheme={isDarkTheme}\r\n        handleDarkThemeToggle={handleDarkThemeToggle}\r\n      />\r\n      <hr />\r\n      <LogoutMenu onLogout={onLogout} currentPath={currentPath} />\r\n    </div>\r\n  );\r\n\r\n// 비로그인 상태일 때 옵션 메뉴\r\nconst NoneUserDropDown = ({ state, isDarkTheme, handleDarkThemeToggle }) =>\r\n  state && (\r\n    <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n      <OptionMenu\r\n        isDarkTheme={isDarkTheme}\r\n        handleDarkThemeToggle={handleDarkThemeToggle}\r\n      />\r\n    </div>\r\n  );\r\n\r\n// Header는 position 처리했으므로 공간을 띄워준다\r\nconst Spacer = styled.div`\r\n  height: 3rem;\r\n`;\r\n\r\nconst Header = ({\r\n  user,\r\n  onLogout,\r\n  isDarkTheme,\r\n  currentPath,\r\n  searchQuery,\r\n  handleSearchInput,\r\n  handleSearchKeyUp,\r\n  handleDarkThemeToggle,\r\n}) => {\r\n  library.add([faSearch, faEllipsisH, faEllipsisV, faUserCircle]);\r\n  // 드롭다운 관련 핸들러\r\n  const [etc, setEtc] = useState(false);\r\n  const [search, setSearch] = useState(false);\r\n  const [userinfo, setUserinfo] = useState(false);\r\n  const [noneuser, setNoneUser] = useState(false);\r\n\r\n  const handleEtcToggle = useCallback(() => {\r\n    setEtc((prevOpen) => !prevOpen);\r\n  }, []);\r\n  const handleEtcClose = useCallback(() => {\r\n    setEtc(false);\r\n  }, []);\r\n  const handleSearchToggle = useCallback(() => {\r\n    setSearch((prevOpen) => !prevOpen);\r\n  }, []);\r\n  const handleSearchClose = useCallback(() => {\r\n    setSearch(false);\r\n  }, []);\r\n  const handleUserInfoToggle = useCallback(() => {\r\n    setUserinfo((prevOpen) => !prevOpen);\r\n  }, []);\r\n  const handleUserInfoClose = useCallback(() => {\r\n    setUserinfo(false);\r\n  }, []);\r\n  const handleNoneUserToggle = useCallback(() => {\r\n    setNoneUser((prevOpen) => !prevOpen);\r\n  }, []);\r\n  const handleNoneUserClose = useCallback(() => {\r\n    setNoneUser(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\" className=\"logo\">\r\n            MAKE UP HARA\r\n          </Link>\r\n          <div className=\"menu\">\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/w\">WIKI</Link>\r\n            </Menu>\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/blog\">Blog</Link>\r\n            </Menu>\r\n            <ClickAwayListener onClickAway={handleEtcClose}>\r\n              <Menu className=\"etc-menu-button\">\r\n                <Link\r\n                  to={currentPath}\r\n                  onClick={handleEtcToggle}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </Link>\r\n                <MemoizedEtcDropDown state={etc} />\r\n              </Menu>\r\n            </ClickAwayListener>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-mid\">\r\n          <SearchResponsive>\r\n            <SearchInputPackage\r\n              type=\"search-input\"\r\n              searchQuery={searchQuery}\r\n              handleSearchInput={handleSearchInput}\r\n              handleSearchKeyUp={handleSearchKeyUp}\r\n            />\r\n          </SearchResponsive>\r\n        </div>\r\n        <div className=\"header-rigit\">\r\n          <SearchResponsive\r\n            style={{\r\n              display: 'inherit',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ClickAwayListener onClickAway={handleSearchClose}>\r\n              <div className=\"search-btn\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleSearchToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"search\" />\r\n                </Link>\r\n                <SearchDropDown state={search} currentPath={currentPath} />\r\n              </div>\r\n            </ClickAwayListener>\r\n          </SearchResponsive>\r\n          {user ? (\r\n            <ClickAwayListener onClickAway={handleUserInfoClose}>\r\n              <div className=\"user-info\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleUserInfoToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"user-circle\" size=\"lg\" />\r\n                </Link>\r\n                <UserDropDown\r\n                  state={userinfo}\r\n                  user={user}\r\n                  onLogout={onLogout}\r\n                  isDarkTheme={isDarkTheme}\r\n                  handleDarkThemeToggle={handleDarkThemeToggle}\r\n                  currentPath={currentPath}\r\n                />\r\n              </div>\r\n            </ClickAwayListener>\r\n          ) : (\r\n            <div className=\"none-user\">\r\n              <ClickAwayListener onClickAway={handleNoneUserClose}>\r\n                <div className=\"none-user-menu\">\r\n                  <Link to={currentPath} onClick={handleNoneUserToggle}>\r\n                    <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n                  </Link>\r\n                  <NoneUserDropDown\r\n                    state={noneuser}\r\n                    isDarkTheme={isDarkTheme}\r\n                    handleDarkThemeToggle={handleDarkThemeToggle}\r\n                  />\r\n                </div>\r\n              </ClickAwayListener>\r\n              <Button className=\"btn-sign-in\" transparent=\"true\" to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport loadable from '@loadable/component';\r\nimport { logout } from '../../module/redux/user';\r\nimport { setTheme } from '../../module/redux/theme';\r\nimport Header from '../../components/common/Header';\r\nimport { changeInput } from '../../module/redux/search';\r\n\r\nconst AuthTemplate = loadable(() =>\r\n  import('../../components/auth/AuthTemplate'),\r\n);\r\nconst LoginForm = loadable(() => import('../../containers/auth/LoginForm'), {});\r\nconst RegisterForm = loadable(() =>\r\n  import('../../containers/auth/RegisterForm'),\r\n);\r\n\r\nconst HeaderContainer = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { user, isDarkTheme, searchQuery } = useSelector(\r\n    ({ user, theme, search }) => ({\r\n      user: user.user,\r\n      isDarkTheme: theme.isDarkTheme,\r\n      searchQuery: search.query,\r\n    }),\r\n  );\r\n\r\n  const currentPath = location.pathname + location.search;\r\n\r\n  const onLogout = useCallback(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n\r\n  const handleSearchKeyUp = useCallback(\r\n    (searchQuery) => {\r\n      history.push(`/search?query=${searchQuery}`);\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const handleSearchInput = useCallback(\r\n    (event) => {\r\n      dispatch(changeInput(event.target.value));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const handleDarkThemeToggle = useCallback(\r\n    (state) => {\r\n      dispatch(setTheme(!state));\r\n      try {\r\n        // 로컬스토리지에 다크모드 상태값 저장\r\n        localStorage.setItem('darkTheme', `${!state}`);\r\n      } catch (error) {\r\n        throw new Error('cannot access localStorage');\r\n      }\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // 사용자 인증 관련 컴포넌트를 미리 로딩\r\n  useEffect(() => {\r\n    AuthTemplate.preload();\r\n    LoginForm.preload();\r\n    RegisterForm.preload();\r\n  }, []);\r\n\r\n  return (\r\n    <Header\r\n      user={user}\r\n      onLogout={onLogout}\r\n      isDarkTheme={isDarkTheme}\r\n      currentPath={currentPath}\r\n      searchQuery={searchQuery}\r\n      handleSearchInput={handleSearchInput}\r\n      handleSearchKeyUp={handleSearchKeyUp}\r\n      handleDarkThemeToggle={handleDarkThemeToggle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import styled from 'styled-components';\r\n\r\n/**\r\n * 다크모드 활성화에 따른 배경색 변경을 위한 컴포넌트\r\n */\r\n\r\nconst BodyBlock = styled.div`\r\n  position: fixed;\r\n  top: ${(props) => (props.includeHeader ? '3rem' : 0)};\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: ${({ theme }) => theme.body};\r\n  z-index: -1;\r\n`;\r\n\r\nexport default BodyBlock;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst MainContainer = loadable(() =>\r\n  import('../../containers/main/MainContainer'),\r\n);\r\n\r\nconst MainPage = () => (\r\n  <>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <MainContainer />\r\n  </>\r\n);\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport loadable from '@loadable/component';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport Responsive from '../../components/common/Responsive';\r\n\r\nconst EditorContainer = loadable(() =>\r\n  import('../../containers/post/write/EditorContainer'),\r\n);\r\nconst TagBoxContainer = loadable(() =>\r\n  import('../../containers/post/write/TagBoxContainer'),\r\n);\r\nconst WriteActionButtonsContainer = loadable(() =>\r\n  import('../../containers/post/write/WriteActionButtonsContainer'),\r\n);\r\nconst EditorFooter = loadable(() =>\r\n  import('../../components/common/editor/EditorFooter'),\r\n);\r\n\r\nconst PostWritePage = () => {\r\n  const history = useHistory();\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>POST 작성 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <TagBoxContainer />\r\n      <WriteActionButtonsContainer />\r\n      <EditorFooter />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default PostWritePage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst PostViewerContainer = loadable(() =>\r\n  import('../../containers/post/PostViewerContainer'),\r\n);\r\n\r\nconst PostPage = () => (\r\n  <>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <PostViewerContainer />\r\n  </>\r\n);\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst PostListContainer = loadable(() =>\r\n  import('../../containers/post/PostListContainer'),\r\n);\r\n\r\nconst PostListPage = () => (\r\n  <>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <PostListContainer />\r\n  </>\r\n);\r\n\r\nexport default PostListPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport LoginForm from '../../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => (\r\n  <AuthTemplate>\r\n    <Helmet>\r\n      <title>로그인 - MAKE UP HARA</title>\r\n    </Helmet>\r\n    <LoginForm />\r\n  </AuthTemplate>\r\n);\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport RegisterForm from '../../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => (\r\n  <AuthTemplate>\r\n    <Helmet>\r\n      <title>회원가입 - MAKE UP HARA</title>\r\n    </Helmet>\r\n    <RegisterForm />\r\n  </AuthTemplate>\r\n);\r\n\r\nexport default RegisterPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithNaver } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithNaverPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, state, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_NAVER_CLIENT_SECRET;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithNaver({ client_id, client_secret, code, state }));\r\n  }, [dispatch, client_id, client_secret, code, state]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw new Error('cannot access sessionStorage');\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginWithNaverPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithKakao } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithKakaoPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_KAKAO_CLIENT_SECRET;\r\n  const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithKakao({ client_id, client_secret, redirect_uri, code }));\r\n  }, [dispatch, client_id, client_secret, code, redirect_uri]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (err) {\r\n        throw new Error('cannot access sessionStorage');\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginWithKakaoPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst WikiViewerContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiViewerContainer'),\r\n);\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\n\r\nconst WikiPage = () => (\r\n  <>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <WikiSearchContainer />\r\n    <WikiViewerContainer />\r\n  </>\r\n);\r\n\r\nexport default WikiPage;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst EditorContainer = loadable(() =>\r\n  import('../../containers/wiki/edit/EditorContainer'),\r\n);\r\nconst EditorFooter = loadable(() =>\r\n  import('../../components/common/editor/EditorFooter'),\r\n);\r\nconst WriteActionButtonsContainer = loadable(() =>\r\n  import('../../containers/wiki/edit/WriteActionButtonsContainer'),\r\n);\r\n\r\nconst WikiEditPage = () => {\r\n  const history = useHistory();\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>WIKI 에디터 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <EditorFooter type=\"wiki\" />\r\n      <WriteActionButtonsContainer />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default WikiEditPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst WikiRequestContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiRequestContainer'),\r\n);\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\n\r\nconst WikiRequestPage = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>작성이 필요한 문서 - MAKE UP HARA</title>\r\n    </Helmet>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <WikiSearchContainer />\r\n    <WikiRequestContainer />\r\n  </>\r\n);\r\n\r\nexport default WikiRequestPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\nconst WikiHistoryContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiHistoryContainer'),\r\n);\r\n\r\nconst WikiHistoryPage = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>문서 역사 - MAKE UP HARA</title>\r\n    </Helmet>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <WikiSearchContainer />\r\n    <WikiHistoryContainer />\r\n  </>\r\n);\r\n\r\nexport default WikiHistoryPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\nconst WikiListContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiListContainer'),\r\n);\r\n\r\nconst WikiListPage = () => (\r\n  <>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <WikiSearchContainer />\r\n    <WikiListContainer />\r\n  </>\r\n);\r\n\r\nexport default WikiListPage;\r\n","import styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\n\r\n/**\r\n * 최상의 flex 컴포넌트\r\n */\r\n\r\nconst FlexContentBlock = styled(Responsive)`\r\n  display: flex;\r\n  flex-direction: ${(props) =>\r\n    props.direction === 'column' ? 'column' : 'row'};\r\n`;\r\n\r\nexport default FlexContentBlock;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\n\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\nconst ProfileContainer = loadable(() =>\r\n  import('../../containers/profile/ProfileContainer'),\r\n);\r\n\r\nconst MyPage = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>MY PAGE - MAKE UP HARA</title>\r\n    </Helmet>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <FlexContentBlock>\r\n      <MyPageMenuContainer />\r\n      <ProfileContainer />\r\n    </FlexContentBlock>\r\n  </>\r\n);\r\n\r\nexport default MyPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\n\r\nconst SecurityContainer = loadable(() =>\r\n  import('../../containers/profile/SecurityContainer'),\r\n);\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\n\r\nconst SecurityPage = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>보안 - MAKE UP HARA</title>\r\n    </Helmet>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <FlexContentBlock>\r\n      <MyPageMenuContainer />\r\n      <SecurityContainer />\r\n    </FlexContentBlock>\r\n  </>\r\n);\r\n\r\nexport default SecurityPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\n\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\nconst ActivityContainer = loadable(() =>\r\n  import('../../containers/profile/ActivityContainer'),\r\n);\r\n\r\nconst ActivityPage = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>활동 기록 - MAKE UP HARA</title>\r\n    </Helmet>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <FlexContentBlock>\r\n      <MyPageMenuContainer />\r\n      <ActivityContainer />\r\n    </FlexContentBlock>\r\n  </>\r\n);\r\n\r\nexport default ActivityPage;\r\n","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\n\r\nconst LocalSearchContainer = loadable(() =>\r\n  import('../../containers/search/LocalSearchContainer'),\r\n);\r\n\r\nconst LocalSearchPage = () => (\r\n  <>\r\n    <HeaderContainer />\r\n    <BodyBlock includeHeader />\r\n    <LocalSearchContainer />\r\n  </>\r\n);\r\n\r\nexport default LocalSearchPage;\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { lightTheme, darkTheme } from './lib/styles/theme';\r\n\r\nimport { setTheme } from './module/redux/theme';\r\nimport MainPage from './pages/main/MainPage';\r\nimport PostWritePage from './pages/post/PostWritePage';\r\nimport PostPage from './pages/post/PostPage';\r\nimport PostListPage from './pages/post/PostListPage';\r\nimport LoginPage from './pages/auth/LoginPage';\r\nimport RegisterPage from './pages/auth/RegisterPage';\r\nimport LoginWithNaverPage from './pages/auth/callback/LoginWithNaverPage';\r\nimport LoginWithKakaoPage from './pages/auth/callback/LoginWithKakaoPage';\r\nimport WikiPage from './pages/wiki/WikiPage';\r\nimport WikiEditPage from './pages/wiki/WikiEditPage';\r\nimport WikiRequestPage from './pages/wiki/WikiRequestPage';\r\nimport WikiHistoryPage from './pages/wiki/WikiHistoryPage';\r\nimport WikiListPage from './pages/wiki/WikiListPage';\r\nimport MyPage from './pages/profile/MyPage';\r\nimport SecurityPage from './pages/profile/SecurityPage';\r\nimport ActivityPage from './pages/profile/ActivityPage';\r\nimport LocalSearchPage from './pages/search/LocalSearchPage';\r\n\r\nconst App = () => {\r\n  const { isDarkTheme } = useSelector(({ theme }) => ({\r\n    isDarkTheme: theme.isDarkTheme,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const storageTheme = localStorage.getItem('darkTheme');\r\n      if (storageTheme === 'true') {\r\n        dispatch(setTheme(true));\r\n      }\r\n    } catch (error) {\r\n      throw new Error('cannot access localStorage');\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\r\n      <>\r\n        <Helmet>\r\n          <title>MAKE UP HARA</title>\r\n        </Helmet>\r\n        <Route component={MainPage} path={['/']} exact />\r\n        <Route component={LoginPage} path=\"/login\" exact />\r\n        <Route component={LoginWithNaverPage} path=\"/login/naver\" />\r\n        <Route component={LoginWithKakaoPage} path=\"/login/kakao\" />\r\n        <Route component={RegisterPage} path=\"/register\" />\r\n        <Route\r\n          component={PostListPage}\r\n          path={['/blog', '/blog/@:username']}\r\n          exact\r\n        />\r\n        <Route component={PostWritePage} path=\"/blog/write\" />\r\n        <Route component={PostPage} path=\"/blog/@:username/:postId\" exact />\r\n        <Route component={WikiPage} path={['/w', '/w/:docName']} exact />\r\n        <Route component={WikiEditPage} path=\"/wiki/edit\" exact />\r\n        <Route component={WikiRequestPage} path=\"/wiki/request\" exact />\r\n        <Route\r\n          component={WikiHistoryPage}\r\n          path=\"/wiki/history/:docName\"\r\n          exact\r\n        />\r\n        <Route component={WikiListPage} path=\"/wiki/list\" exact />\r\n        <Route component={MyPage} path=\"/mypage\" exact />\r\n        <Route component={SecurityPage} path=\"/mypage/security\" exact />\r\n        <Route component={ActivityPage} path=\"/mypage/activity\" exact />\r\n        <Route component={LocalSearchPage} path=\"/search\" exact />\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport rootReducer, { rootSaga } from './module/redux/index';\r\nimport { tempSetUser, check } from './module/redux/user';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  rootReducer,\r\n  // composeWithDevTools(applyMiddleware(sagaMiddleware)), // dev\r\n  applyMiddleware(sagaMiddleware),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\nconst loadUser = () => {\r\n  try {\r\n    const user = sessionStorage.getItem('user');\r\n    if (!user) return;\r\n    store.dispatch(tempSetUser(user));\r\n    store.dispatch(check());\r\n  } catch (error) {\r\n    throw new Error('cannot access sessionStorage');\r\n  }\r\n};\r\nloadUser();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <HelmetProvider>\r\n        <App />\r\n      </HelmetProvider>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest, debounce } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\n\r\n/* action type */\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n  'auth/REGISTER',\r\n);\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n  'auth/LOGIN',\r\n);\r\nconst [\r\n  LOGIN_WITH_GOOGLE,\r\n  LOGIN_WITH_GOOGLE_SUCCESS,\r\n  LOGIN_WITH_GOOGLE_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_GOOGLE');\r\nconst [\r\n  LOGIN_WITH_NAVER,\r\n  LOGIN_WITH_NAVER_SUCCESS,\r\n  LOGIN_WITH_NAVER_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_NAVER');\r\nconst [\r\n  LOGIN_WITH_KAKAO,\r\n  LOGIN_WITH_KAKAO_SUCCESS,\r\n  LOGIN_WITH_KAKAO_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_KAKAO');\r\n// api - check username\r\nconst [\r\n  CHECK_EXIST_USERNAME,\r\n  CHECK_EXIST_USERNAME_SUCCESS,\r\n  CHECK_EXIST_USERNAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_USERNAME');\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_NAME');\r\n\r\n/* action */\r\nexport const changeFieid = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // register, login\r\n    key, // username, password, passwordConfirm\r\n    value, // 변경 하려는 값\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\nexport const register = createAction(\r\n  REGISTER,\r\n  ({ username, password, name }) => ({\r\n    username,\r\n    password,\r\n    name,\r\n  }),\r\n);\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const loginWithGoogle = createAction(\r\n  LOGIN_WITH_GOOGLE,\r\n  ({ id_token }) => ({ id_token }),\r\n);\r\nexport const loginWithNaver = createAction(\r\n  LOGIN_WITH_NAVER,\r\n  ({ client_id, client_secret, code, state }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  }),\r\n);\r\nexport const loginWithKakao = createAction(\r\n  LOGIN_WITH_KAKAO,\r\n  ({ client_id, client_secret, code, redirect_uri }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  }),\r\n);\r\nexport const checkExistUsername = createAction(\r\n  CHECK_EXIST_USERNAME,\r\n  (username) => username,\r\n);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\n\r\n/* redux-saga */\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nconst loginWithGoogleSaga = createRequestSaga(\r\n  LOGIN_WITH_GOOGLE,\r\n  authAPI.loginWithGoogle,\r\n);\r\nconst loginWithNaverSaga = createRequestSaga(\r\n  LOGIN_WITH_NAVER,\r\n  authAPI.loginWithNaver,\r\n);\r\nconst loginWithKakaoSaga = createRequestSaga(\r\n  LOGIN_WITH_KAKAO,\r\n  authAPI.loginWithKakao,\r\n);\r\nconst checkExistUsernameSaga = createRequestSaga(\r\n  CHECK_EXIST_USERNAME,\r\n  userAPI.checkExistUsername,\r\n);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(LOGIN_WITH_GOOGLE, loginWithGoogleSaga);\r\n  yield takeLatest(LOGIN_WITH_NAVER, loginWithNaverSaga);\r\n  yield takeLatest(LOGIN_WITH_KAKAO, loginWithKakaoSaga);\r\n  yield debounce(500, CHECK_EXIST_USERNAME, checkExistUsernameSaga);\r\n  yield debounce(500, CHECK_EXIST_NAME, checkExistNameSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    name: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  checkExistUsernameResult: null,\r\n  checkExistUsernameResultError: null,\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  auth: null,\r\n  authError: null,\r\n  registerResult: null,\r\n  registerResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n      registerResult: null,\r\n      registerResultError: null, // 폼 전환 시 회원인증 에러 초기화\r\n    }),\r\n    [REGISTER_SUCCESS]: (state, { payload: registerResult }) => ({\r\n      ...state,\r\n      registerResultError: null,\r\n      registerResult,\r\n    }),\r\n    [REGISTER_FAILURE]: (state, { payload: registerResultError }) => ({\r\n      ...state,\r\n      registerResult: null,\r\n      registerResultError,\r\n    }),\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      auth: null,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      auth: null,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_NAVER_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_NAVER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      auth: null,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      auth: null,\r\n      authError: error,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_SUCCESS]: (\r\n      state,\r\n      { payload: checkExistUsernameResult },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult,\r\n      checkExistUsernameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistUsernameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError,\r\n    }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","const palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n  red: [\r\n    '#fff5f5',\r\n    '#ffe3e3',\r\n    '#ffc9c9',\r\n    '#ffa8a8',\r\n    '#ff8787',\r\n    '#ff6b6b',\r\n    '#fa5252',\r\n    '#f03e3e',\r\n    '#e03131',\r\n    '#c92a2a',\r\n  ],\r\n  violet: [\r\n    '#f3f0ff',\r\n    '#e5dbff',\r\n    '#d0bfff',\r\n    '#b197fc',\r\n    '#9775fa',\r\n    '#845ef7',\r\n    '#7950f2',\r\n    '#7048e8',\r\n    '#6741d9',\r\n    '#5f3dc4',\r\n  ],\r\n  indigo: [\r\n    '#edf2ff',\r\n    '#dbe4ff',\r\n    '#bac8ff',\r\n    '#91a7ff',\r\n    '#748ffc',\r\n    '#5c7cfa',\r\n    '#4c6ef5',\r\n    '#4263eb',\r\n    '#3b5bdb',\r\n    '#364fc7',\r\n  ],\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '#0b7285',\r\n  ],\r\n  yellow: [\r\n    '#fff9db',\r\n    '#fff3bf',\r\n    '#ffec99',\r\n    '#ffe066',\r\n    '#ffd43b',\r\n    '#fcc419',\r\n    '#fab005',\r\n    '#f59f00',\r\n    '#f08c00',\r\n    '#e67700',\r\n  ]\r\n};\r\n\r\nexport default palette;","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\n\r\n/* action type */\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('user/CHECK_EXIST_NAME');\r\nconst CHANGE_FIELD = 'user/CHANGE_FIELD';\r\n// api- update name\r\nconst [\r\n  UPDATE_NAME,\r\n  UPDATE_NAME_SUCCESS,\r\n  UPDATE_NAME_FAILURE,\r\n] = createRequestActionTypes('user/UPDATE_NAME');\r\nconst INITIALIZE_UPDATE_NAME = 'user/INITIALIZE_UPDATE_NAME';\r\n// api - change password\r\nconst [\r\n  CHANGE_PASSWORD,\r\n  CHANGE_PASSWORD_SUCCESS,\r\n  CHANGE_PASSWORD_FAILURE,\r\n] = createRequestActionTypes('user/CHANGE_PASSWORD');\r\nconst INITIALIZE_CHANGE_PASSWORD = 'user/INITIALIZE_CHANGE_PASSWORD';\r\n\r\n/* action */\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\nexport const tempSetUser = createAction(TEMP_SET_USER);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({ form, key, value }),\r\n);\r\nexport const updateName = createAction(UPDATE_NAME, ({ id, name }) => ({\r\n  id,\r\n  name,\r\n}));\r\nexport const initializeUpdateName = createAction(INITIALIZE_UPDATE_NAME);\r\nexport const changePassword = createAction(\r\n  CHANGE_PASSWORD,\r\n  ({ id, password, newPassword }) => ({ id, password, newPassword }),\r\n);\r\nexport const initializeChangePassword = createAction(\r\n  INITIALIZE_CHANGE_PASSWORD,\r\n);\r\n\r\n/* redux-saga */\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\nconst updateNameSaga = createRequestSaga(UPDATE_NAME, userAPI.updateName);\r\nconst changePasswordSaga = createRequestSaga(\r\n  CHANGE_PASSWORD,\r\n  userAPI.changePassword,\r\n);\r\n\r\nfunction* checkFailureSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw new Error('cannot access sessionStorage');\r\n  }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw new Error('cannot access sessionStorage');\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n  yield takeLatest(CHECK_EXIST_NAME, checkExistNameSaga);\r\n  yield takeLatest(UPDATE_NAME, updateNameSaga);\r\n  yield takeLatest(CHANGE_PASSWORD, changePasswordSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n  profile: {\r\n    name: '',\r\n  },\r\n  password: {\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  updateUser: null,\r\n  updateUserError: null,\r\n  changePasswordResult: null,\r\n  changePasswordError: null,\r\n};\r\n\r\n/* reducer */\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError,\r\n    }),\r\n    [UPDATE_NAME_SUCCESS]: (state, { payload: updateUser }) => ({\r\n      ...state,\r\n      updateUser,\r\n      updateUserError: null,\r\n    }),\r\n    [UPDATE_NAME_FAILURE]: (state, { payload: updateUserError }) => ({\r\n      ...state,\r\n      updateUser: null,\r\n      updateUserError,\r\n    }),\r\n    [INITIALIZE_UPDATE_NAME]: (state) => ({\r\n      ...state,\r\n      updateUser: null,\r\n      updateUserError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHANGE_PASSWORD_SUCCESS]: (state, { payload: changePasswordResult }) => ({\r\n      ...state,\r\n      changePasswordResult: !!changePasswordResult,\r\n      changePasswordError: null,\r\n    }),\r\n    [CHANGE_PASSWORD_FAILURE]: (state, { payload: changePasswordError }) => ({\r\n      ...state,\r\n      changePasswordResult: false,\r\n      changePasswordError,\r\n    }),\r\n    [INITIALIZE_CHANGE_PASSWORD]: (state) => ({\r\n      ...state,\r\n      changePasswordResult: null,\r\n      changePasswordError: null,\r\n      password: {\r\n        curPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import client from './client';\r\n\r\nexport const register = ({ username, password, name }) =>\r\n  client.post('/api/auth/register', { username, password, name });\r\n\r\nexport const login = ({ username, password }) =>\r\n  client.post('/api/auth/login', { username, password });\r\n\r\nexport const loginWithGoogle = ({ id_token }) =>\r\n  client.post('/api/auth/login/google', { id_token });\r\n\r\nexport const loginWithNaver = ({ client_id, client_secret, code, state }) =>\r\n  client.post('/api/auth/login/naver', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  });\r\n\r\nexport const loginWithKakao = ({\r\n  client_id,\r\n  client_secret,\r\n  code,\r\n  redirect_uri,\r\n}) =>\r\n  client.post('/api/auth/login/kakao', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  });\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import qs from 'qs';\r\nimport client from './client';\r\n\r\nexport const writePost = ({ title, body, tags }) =>\r\n  client.post('/api/post/write', { title, body, tags });\r\n\r\nexport const readPost = (id) => client.get(`/api/post/${id}`);\r\n\r\nexport const updatePost = ({ id, title, body, tags }) =>\r\n  client.patch(`/api/post/${id}`, { title, body, tags });\r\n\r\nexport const removePost = (id) => client.delete(`/api/post/${id}`);\r\n\r\nexport const getList = ({ page, tag, username, query, block, oldest, day }) => {\r\n  const queryString = qs.stringify({\r\n    page,\r\n    tag,\r\n    username,\r\n    query,\r\n    block,\r\n    oldest,\r\n    day,\r\n  });\r\n  return client.get(`/api/post/list?${queryString}`);\r\n};\r\n\r\nexport const readComment = ({ id, page, block }) => {\r\n  const queryString = qs.stringify({ page, block });\r\n  return client.get(`/api/post/${id}/comment?${queryString}`);\r\n};\r\n\r\nexport const writeComment = ({ id, body }) =>\r\n  client.post(`/api/post/${id}/comment`, { body });\r\n\r\nexport const updateComment = ({ id, commentId, body }) =>\r\n  client.patch(`/api/post/${id}/comment/${commentId}`, { body });\r\n\r\nexport const deleteComment = ({ id, commentId }) =>\r\n  client.delete(`/api/post/${id}/comment/${commentId}`);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/open-color';\r\n\r\n/**\r\n * 소셜 로그인 버튼에서 css를 사용하기 위해 export\r\n * 소셜 로그인은 ref를 설정해주어야 하기 때문에 prop 전달이 어려움\r\n */\r\n\r\nexport const buttonStyle = css`\r\n  border: none;\r\n  border-radius: 2px;\r\n  font-size: 1rem;\r\n  font-family: 'NanumBarunGothic';\r\n  font-weight: normal;\r\n  padding: 0.25rem 1rem;\r\n  color: ${({ theme }) => theme.btnText};\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: ${({ theme }) => theme.btnBody};\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.btnHoverBody};\r\n  }\r\n\r\n  &:disabled,\r\n  &[disabled] {\r\n    cursor: default;\r\n    pointer-events: none;\r\n    background: ${({ theme }) => theme.btnDisableBody};\r\n    color: ${({ theme }) => theme.btnDisableColor};\r\n    &:hover {\r\n      background: ${({ theme }) => theme.btnDisableBody};\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      display: inline-block;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.indigo &&\r\n    css`\r\n      background: ${palette.indigo[9]};\r\n      &:hover {\r\n        background: ${palette.indigo[7]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.violet &&\r\n    css`\r\n      background: ${palette.violet[9]};\r\n      color: #fff;\r\n      &:hover {\r\n        background: ${palette.violet[7]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.red &&\r\n    css`\r\n      background: ${palette.red[8]};\r\n      &:hover {\r\n        background: ${palette.red[6]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[6]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.yellow &&\r\n    css`\r\n      background: ${palette.yellow[5]};\r\n      &:hover {\r\n        background: ${palette.yellow[3]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.transparent &&\r\n    css`\r\n      background: none;\r\n      color: ${({ theme }) => theme.text};\r\n      border: 1px solid ${({ theme }) => theme.text};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.btnTransparentHoverBody};\r\n        color: ${({ theme }) => theme.btnTransparentHoverText};\r\n      }\r\n    `}\r\n    \r\n  ${(props) =>\r\n    props.themeColor &&\r\n    css`\r\n      background: ${({ theme }) => theme.themeColorBody};\r\n      color: ${palette.gray[1]};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.themeColorHoverBody};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  const { to } = props;\r\n  return to ? <StyledLink {...props} /> : <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","import client from './client';\r\n\r\nexport const checkExistUsername = ({ username }) =>\r\n  client.post('/api/user/check/username', { username });\r\n\r\nexport const checkExistName = ({ username, name }) =>\r\n  client.post('/api/user/check/name', { username, name });\r\n\r\nexport const updateName = ({ id, name }) =>\r\n  client.patch('/api/user/profile', { id, name });\r\n\r\nexport const changePassword = ({ id, password, newPassword }) =>\r\n  client.patch('/api/user/password', { id, password, newPassword });\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/**\r\n * viewport에 따른 컨테이너 width 제어\r\n */\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  padding: 0, 1rem;\r\n  width: 986px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 748px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 98%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => (\r\n  <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>\r\n);\r\n\r\nexport default Responsive;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({ ...state, [action.payload]: true }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_INPUT = 'search/CHANGE_INPUT';\r\nconst CHANGE_OPTION = 'search/CHANGE_OPTION';\r\nconst INITIALIZE = 'search/INITIALIZE';\r\nconst INITIALIZE_OPTION = 'search/INITIALIZE_OPTION';\r\n\r\n/* action */\r\nexport const changeInput = createAction(CHANGE_INPUT, (value) => value);\r\nexport const changeOption = createAction(CHANGE_OPTION, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const initializeOption = createAction(INITIALIZE_OPTION);\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  query: '',\r\n  option: {\r\n    totalSort: '',\r\n    totalTerm: '',\r\n    wikiSort: '',\r\n    wikilength: '',\r\n    blogSort: '',\r\n    blogTerm: '',\r\n  },\r\n};\r\n\r\n/* reducer */\r\nconst search = handleActions(\r\n  {\r\n    [CHANGE_INPUT]: (state, { payload: value }) => ({ ...state, query: value }),\r\n    [CHANGE_OPTION]: (state, { payload: { key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft.option[key] = value;\r\n      }),\r\n    [INITIALIZE]: () => initialState,\r\n    [INITIALIZE_OPTION]: (state) => ({\r\n      ...state,\r\n      option: initialState.option,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default search;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 로그인/회원가입 공통 컴포넌트\r\n */\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: ${({ theme }) => theme.loginBody};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    text-align: center;\r\n    padding-bottom: 2rem;\r\n    font-size: 1.25rem;\r\n    letter-spacing: 1px;\r\n  }\r\n  .logo-area > a {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .logo-area > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  box-shadow: 0 0 8px\r\n    ${({ theme }) =>\r\n      theme.body === '#fff' ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.5)'};\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: ${({ theme }) => theme.body};\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => (\r\n  <AuthTemplateBlock>\r\n    <ContentBox>\r\n      <div className=\"logo-area\">\r\n        <Link to=\"/\">MAKE UP HARA</Link>\r\n      </div>\r\n      {children}\r\n    </ContentBox>\r\n  </AuthTemplateBlock>\r\n);\r\n\r\nexport default AuthTemplate;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport Button, { buttonStyle } from '../common/Button';\r\nimport palette from '../../lib/styles/open-color';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.text};\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.loginInputBorder};\r\n  }\r\n  .social-login {\r\n    button + a {\r\n      margin-top: 0.5rem;\r\n    }\r\n    a + button {\r\n      margin-top: 0.5rem;\r\n    }\r\n  }\r\n  input.possible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  input.impossible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    color: ${({ theme }) => theme.errorText};\r\n    font-size: 0.75rem;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 2px solid ${({ theme }) => theme.loginInputBorder};\r\n  padding-bottom: 0.5rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    border-bottom: 2px solid ${({ theme }) => theme.loginInputBorderFocus};\r\n    -webkit-transition: all 0.3s ease;\r\n    transition: all 0.3s ease;\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 1rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      text-decoration: underline !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst GoogleLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  border-radius: 0.375rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst socialBtnStyle = css`\r\n  border: none;\r\n  padding: 0;\r\n  display: block;\r\n  border-radius: 0.5rem;\r\n  img {\r\n    width: 100%;\r\n    display: flex;\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NaverLoginButton = styled.a`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst KakaoLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  signinGoogle: '구글로 로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${palette.red[9]};\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  isValid,\r\n  validMessage,\r\n  onChange,\r\n  onSubmit,\r\n  error,\r\n  googleLoginBtn,\r\n  onNaverLoginClick,\r\n  onKakaoLoginClick,\r\n}) => {\r\n  const text = textMap[type];\r\n\r\n  return (\r\n    <AuthFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          className={\r\n            type === 'register' &&\r\n            form.username.length > 0 &&\r\n            (isValid.username ? 'possible' : 'impossible')\r\n          }\r\n          name=\"username\"\r\n          placeholder=\"계정 이름\"\r\n          value={form.username}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' && !isValid.username && (\r\n          <span className=\"invalid-message\">{validMessage.username}</span>\r\n        )}\r\n        <StyledInput\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          className={\r\n            type === 'register' &&\r\n            form.password.length > 0 &&\r\n            (isValid.password ? 'possible' : 'impossible')\r\n          }\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={form.password}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' && !isValid.password && (\r\n          <span className=\"invalid-message\">{validMessage.password}</span>\r\n        )}\r\n        {type === 'register' && (\r\n          <>\r\n            <StyledInput\r\n              type=\"password\"\r\n              autoComplete=\"new-password\"\r\n              className={\r\n                form.passwordConfirm.length > 0 &&\r\n                (isValid.passwordConfirm ? 'possible' : 'impossible')\r\n              }\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"비밀번호 확인\"\r\n              value={form.passwordConfirm}\r\n              onChange={onChange}\r\n            />\r\n            {!isValid.passwordConfirm && (\r\n              <span className=\"invalid-message\">\r\n                {validMessage.passwordConfirm}\r\n              </span>\r\n            )}\r\n            <StyledInput\r\n              type=\"text\"\r\n              className={\r\n                type === 'register' &&\r\n                form.name.length > 0 &&\r\n                (isValid.name ? 'possible' : 'impossible')\r\n              }\r\n              name=\"name\"\r\n              placeholder=\"활동명\"\r\n              value={form.name}\r\n              onChange={onChange}\r\n            />\r\n            {type === 'register' && !isValid.name && (\r\n              <span className=\"invalid-message\">{validMessage.name}</span>\r\n            )}\r\n          </>\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonWithMarginTop cyan fullWidth>\r\n          {text}\r\n        </ButtonWithMarginTop>\r\n      </form>\r\n      {type === 'login' && (\r\n        <div className=\"social-login\">\r\n          <hr />\r\n          <GoogleLoginButton fullWidth indigo ref={googleLoginBtn}>\r\n            <FontAwesomeIcon icon={faGoogle} />\r\n            {` ${textMap.signinGoogle}`}\r\n            <span> </span>\r\n          </GoogleLoginButton>\r\n          <NaverLoginButton transparent onClick={() => onNaverLoginClick()}>\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/images/auth/naver_login_btn.png`}\r\n              alt=\"naver-login-btn\"\r\n            />\r\n          </NaverLoginButton>\r\n          <KakaoLoginButton transparent onClick={() => onKakaoLoginClick()}>\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/images/auth/kakao_login_btn.png`}\r\n              alt=\"kakao-login-btn\"\r\n            />\r\n          </KakaoLoginButton>\r\n          <hr />\r\n        </div>\r\n      )}\r\n\r\n      <Footer className=\"auth-link\">\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as wikiAPI from '../../lib/api/wiki';\r\n\r\n/* action type */\r\n// api - request list\r\nconst [\r\n  GET_REQUEST_LIST,\r\n  GET_REQUEST_LIST_SUCCESS,\r\n  GET_REQUEST_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_REQUEST_LIST');\r\n// edit - set title\r\nconst SET_TITLE = createRequestActionTypes('wiki/SET_TITLE');\r\n// edit - initialize\r\nconst INITIALIZE = 'wiki/INITIALIZE';\r\n// edit - change field\r\nconst CHANGE_FIELD = 'wiki/CHANGE_FIELD';\r\n// edit - write document\r\nconst [\r\n  WRITE_DOCUMENT,\r\n  WRITE_DOCUMENT_SUCCESS,\r\n  WRITE_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/WRITE_DOCUMENT');\r\n// api - read\r\nconst [\r\n  READ_DOCUMENT,\r\n  READ_DOCUMENT_SUCCESS,\r\n  READ_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/READ_DOCUMENT');\r\nconst UNLOAD_DOCUMENT = 'wiki/UNLOAD_DOCUMENT'; // 위키 문서 뷰 언마운트시 문서 정보 제거\r\nconst SET_ORIGINAL_DOCUMENT = 'wiki/SET_ORIGINAL_DOCUMENT'; // 위키 문서 편집 시 에디터에 문서 세팅\r\n// api - list\r\nconst [\r\n  GET_DOCUMENT_LIST,\r\n  GET_DOCUMENT_LIST_SUCCESS,\r\n  GET_DOCUMENT_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_LIST');\r\nconst UNLOAD_LIST = 'wiki/UNLOAD_LIST'; // 위키 리스트 뷰 언마운트시 document list 정보 제거\r\n// api - history list\r\nconst [\r\n  GET_HISTORY_LIST,\r\n  GET_HISTORY_LIST_SUCCESS,\r\n  GET_HISTORY_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_HISTORY_LIST');\r\n// api - search\r\nconst [\r\n  GET_SEARCH_LIST,\r\n  GET_SEARCH_LIST_SUCCESS,\r\n  GET_SEARCH_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_SEARCH_LIST');\r\n// api- search/direct\r\nconst [\r\n  GET_DIRECT_TITLE,\r\n  GET_DIRECT_TITLE_SUCCESS,\r\n  GET_DIRECT_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DIRECT_TITLE');\r\n// api - search/random\r\nconst [\r\n  GET_RANDOM_TITLE,\r\n  GET_RANDOM_TITLE_SUCCESS,\r\n  GET_RANDOM_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_RANDOM_TITLE');\r\n// api - document count\r\nconst [\r\n  GET_DOCUMENT_COUNT,\r\n  GET_DOCUMENT_COUNT_SUCCESS,\r\n  GET_DOCUMENT_COUNT_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_COUNT');\r\n// api = add barcode to document\r\nconst [\r\n  ADD_BARCODE_NUMBER,\r\n  ADD_BARCODE_NUMBER_SUCCESS,\r\n  ADD_BARCODE_NUMBER_FAILURE,\r\n] = createRequestActionTypes('wiki/ADD_BARCODE_NUMBER');\r\n\r\n/* action */\r\nexport const getRequestList = createAction(GET_REQUEST_LIST);\r\nexport const setTitle = createAction(SET_TITLE, (title) => title);\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writeDocument = createAction(WRITE_DOCUMENT, ({ id, body }) => ({\r\n  id,\r\n  body,\r\n}));\r\nexport const readDocument = createAction(READ_DOCUMENT, ({ id, r }) => ({\r\n  id,\r\n  r,\r\n}));\r\nexport const unloadDocument = createAction(UNLOAD_DOCUMENT);\r\nexport const setOriginalDocument = createAction(\r\n  SET_ORIGINAL_DOCUMENT,\r\n  (document) => document,\r\n);\r\nexport const getDocumentList = createAction(\r\n  GET_DOCUMENT_LIST,\r\n  (block) => block,\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\nexport const getHistoryList = createAction(GET_HISTORY_LIST, ({ id }) => ({\r\n  id,\r\n}));\r\nexport const getSearchList = createAction(\r\n  GET_SEARCH_LIST,\r\n  ({ query, oldest, shortest, longest, page, block }) => ({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  }),\r\n);\r\nexport const getDirectTitle = createAction(GET_DIRECT_TITLE, ({ query }) => ({\r\n  query,\r\n}));\r\nexport const getRandomTitle = createAction(GET_RANDOM_TITLE);\r\nexport const getDocumentCount = createAction(\r\n  GET_DOCUMENT_COUNT,\r\n  ({ username }) => ({ username }),\r\n);\r\nexport const addBarcodeNumber = createAction(\r\n  ADD_BARCODE_NUMBER,\r\n  ({ title, code }) => ({ title, code }),\r\n);\r\n\r\n/* redux-saga */\r\nconst getRequestListSaga = createRequestSaga(\r\n  GET_REQUEST_LIST,\r\n  wikiAPI.requestDocument,\r\n);\r\nconst writeDocumentSaga = createRequestSaga(\r\n  WRITE_DOCUMENT,\r\n  wikiAPI.writeDocument,\r\n);\r\nconst readDocumentSaga = createRequestSaga(READ_DOCUMENT, wikiAPI.readDocument);\r\nconst getDocumentListSaga = createRequestSaga(\r\n  GET_DOCUMENT_LIST,\r\n  wikiAPI.getDocumentList,\r\n);\r\nconst getHistoryListSaga = createRequestSaga(\r\n  GET_HISTORY_LIST,\r\n  wikiAPI.getHistoryList,\r\n);\r\nconst getSearchListSaga = createRequestSaga(\r\n  GET_SEARCH_LIST,\r\n  wikiAPI.getSearchList,\r\n);\r\nconst getDirectTitleSaga = createRequestSaga(\r\n  GET_DIRECT_TITLE,\r\n  wikiAPI.getDirectTitle,\r\n);\r\nconst getRandomTitleSaga = createRequestSaga(\r\n  GET_RANDOM_TITLE,\r\n  wikiAPI.getRandomTitle,\r\n);\r\nconst getDocumentCountSaga = createRequestSaga(\r\n  GET_DOCUMENT_COUNT,\r\n  wikiAPI.getDocumentCount,\r\n);\r\nconst addBarcodeNumberSaga = createRequestSaga(\r\n  ADD_BARCODE_NUMBER,\r\n  wikiAPI.addBarcodeNumber,\r\n);\r\n\r\nexport function* wikiSaga() {\r\n  yield takeLatest(GET_REQUEST_LIST, getRequestListSaga);\r\n  yield takeLatest(WRITE_DOCUMENT, writeDocumentSaga);\r\n  yield takeLatest(READ_DOCUMENT, readDocumentSaga);\r\n  yield takeLatest(GET_DOCUMENT_LIST, getDocumentListSaga);\r\n  yield takeLatest(GET_HISTORY_LIST, getHistoryListSaga);\r\n  yield takeLatest(GET_SEARCH_LIST, getSearchListSaga);\r\n  yield takeLatest(GET_DIRECT_TITLE, getDirectTitleSaga);\r\n  yield takeLatest(GET_RANDOM_TITLE, getRandomTitleSaga);\r\n  yield takeLatest(GET_DOCUMENT_COUNT, getDocumentCountSaga);\r\n  yield takeLatest(ADD_BARCODE_NUMBER, addBarcodeNumberSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: null,\r\n  titleError: null,\r\n  body: '',\r\n  document: null,\r\n  documentError: null,\r\n  editDocument: null,\r\n  editDocumentError: null,\r\n  requestList: [],\r\n  requestListError: null,\r\n  documentList: null,\r\n  documentListError: null,\r\n  historyList: null,\r\n  historyListError: null,\r\n  query: '',\r\n  searchList: [],\r\n  searchListError: null,\r\n  lastPage: 1,\r\n  directName: null,\r\n  directError: null,\r\n  randomTitle: null,\r\n  randomTitleError: null,\r\n  documentCount: 0,\r\n  documentCountError: null,\r\n  addBarcodeNumberResult: null,\r\n  addBarcodeNumberResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst wiki = handleActions(\r\n  {\r\n    [GET_REQUEST_LIST_SUCCESS]: (state, { payload: requestList }) => ({\r\n      ...state,\r\n      requestList,\r\n      requestListError: null,\r\n    }),\r\n    [GET_REQUEST_LIST_FAILURE]: (state, { payload: requestListError }) => ({\r\n      ...state,\r\n      requestList: [],\r\n      requestListError,\r\n    }),\r\n    [SET_TITLE]: (state, { payload: title }) => ({\r\n      ...state,\r\n      title,\r\n    }),\r\n    [INITIALIZE]: (state) => ({\r\n      ...state,\r\n      title: null,\r\n      titleError: null,\r\n      body: '',\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n      query: '',\r\n      directName: null,\r\n      directError: null,\r\n      randomTitle: null,\r\n      randomTitleError: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키 값을 업데이트\r\n    }),\r\n    [WRITE_DOCUMENT_SUCCESS]: (state, { payload: editDocument }) => ({\r\n      ...state,\r\n      editDocument,\r\n      editDocumentError: null,\r\n    }),\r\n    [WRITE_DOCUMENT_FAILURE]: (state, { payload: editDocumentError }) => ({\r\n      ...state,\r\n      editDocument: null,\r\n      editDocumentError,\r\n    }),\r\n    [READ_DOCUMENT_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      document,\r\n      documentError: null,\r\n    }),\r\n    [READ_DOCUMENT_FAILURE]: (state, { payload: documentError }) => ({\r\n      ...state,\r\n      document: null,\r\n      documentError,\r\n    }),\r\n    [UNLOAD_DOCUMENT]: (state) => ({\r\n      ...state,\r\n      document: null,\r\n      documentError: null,\r\n    }),\r\n    [SET_ORIGINAL_DOCUMENT]: (state, { payload: document }) => ({\r\n      ...state,\r\n      title: document.title,\r\n      body: document.body,\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n    }),\r\n    [GET_DOCUMENT_LIST_SUCCESS]: (state, { payload: documentList }) => ({\r\n      ...state,\r\n      documentList,\r\n      documentListError: null,\r\n    }),\r\n    [GET_DOCUMENT_LIST_FAILURE]: (state, { payload: documentListError }) => ({\r\n      ...state,\r\n      documentList: null,\r\n      documentListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      documentList: null,\r\n      documentListError: null,\r\n    }),\r\n    [GET_HISTORY_LIST_SUCCESS]: (state, { payload: historyList }) => ({\r\n      ...state,\r\n      historyList,\r\n      historyListError: null,\r\n    }),\r\n    [GET_HISTORY_LIST_FAILURE]: (state, { payload: historyListError }) => ({\r\n      ...state,\r\n      historyList: null,\r\n      historyListError,\r\n    }),\r\n    [GET_SEARCH_LIST_SUCCESS]: (\r\n      state,\r\n      { payload: searchList, meta: response },\r\n    ) => ({\r\n      ...state,\r\n      searchList,\r\n      searchListError: null,\r\n      lastPage: parseInt(response.headers['makeuphara-wiki-last-page'], 10),\r\n    }),\r\n    [GET_SEARCH_LIST_FAILURE]: (state, { payload: searchListError }) => ({\r\n      ...state,\r\n      searchList: [],\r\n      searchListError,\r\n    }),\r\n    [GET_DIRECT_TITLE_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      directName: document.title.name,\r\n      directError: null,\r\n    }),\r\n    [GET_DIRECT_TITLE_FAILURE]: (state, { payload: directError }) => ({\r\n      ...state,\r\n      directName: null,\r\n      directError,\r\n    }),\r\n    [GET_RANDOM_TITLE_SUCCESS]: (state, { payload: title }) => ({\r\n      ...state,\r\n      randomTitle: title.name,\r\n      randomTitleError: null,\r\n    }),\r\n    [GET_RANDOM_TITLE_FAILURE]: (state, { payload: randomTitleError }) => ({\r\n      ...state,\r\n      randomTitle: null,\r\n      randomTitleError,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_SUCCESS]: (state, { payload: documentCount }) => ({\r\n      ...state,\r\n      documentCount,\r\n      documentCountError: null,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_FAILURE]: (state, { payload: documentCountError }) => ({\r\n      ...state,\r\n      documentCount: 0,\r\n      documentCountError,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_SUCCESS]: (\r\n      state,\r\n      { payload: addBarcodeNumberResult },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResult,\r\n      addBarcodeNumberResultError: null,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_FAILURE]: (\r\n      state,\r\n      { payload: addBarcodeNumberResultError },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResult: null,\r\n      addBarcodeNumberResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default wiki;\r\n","import qs from 'qs';\r\nimport client from './client';\r\n\r\nexport const requestDocument = () => client.get('/api/wiki/request');\r\n\r\nexport const writeDocument = ({ id, body }) =>\r\n  client.post(`/api/wiki/write/${id}`, { body });\r\n\r\nexport const readDocument = ({ id, r }) => {\r\n  const queryString = qs.stringify({ r });\r\n  return client.get(`/api/wiki/${id}?${queryString}`);\r\n};\r\n\r\nexport const getDocumentList = (block) => {\r\n  const queryString = qs.stringify({ block });\r\n  return client.get(`/api/wiki/list?${queryString}`);\r\n};\r\n\r\nexport const getHistoryList = ({ id }) => client.get(`/api/wiki/${id}/history`);\r\n\r\nexport const getSearchList = ({\r\n  query,\r\n  oldest,\r\n  shortest,\r\n  longest,\r\n  page,\r\n  block,\r\n}) => {\r\n  const queryString = qs.stringify({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  });\r\n  return client.get(`/api/wiki/search?${queryString}`);\r\n};\r\n\r\nexport const getDirectTitle = ({ query }) => {\r\n  const queryString = qs.stringify({ query });\r\n  return client.get(`/api/wiki/search/direct?${queryString}`);\r\n};\r\n\r\nexport const getRandomTitle = () => client.get('/api/wiki/search/random');\r\n\r\nexport const getDocumentCount = ({ username }) =>\r\n  client.post('/api/wiki/doc/count', { username });\r\n\r\nexport const addBarcodeNumber = ({ title, code }) =>\r\n  client.patch(`/api/wiki/${title}/barcode`, { code });\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as postAPI from '../../lib/api/post';\r\n\r\n/* action type */\r\n// local\r\nconst INITIALIZE = 'post/INITIALIZE'; // 작성 내용 초기화\r\nconst CHANGE_FIELD = 'post/CHANGE_FIELD'; // 특정 key값 바꾸기\r\nconst SET_ORIGINAL_POST = 'post/SET_ORIGINAL_POST'; // 포스트 편집 시 에디터에 포스트 정보 세팅\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 뷰 언마운트시 post 정보 제거\r\n// api - write\r\nconst [\r\n  WRITE_POST,\r\n  WRITE_POST_SUCCESS,\r\n  WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('post/WRITE_POST');\r\n// api - read\r\nconst [\r\n  READ_POST,\r\n  READ_POST_SUCCESS,\r\n  READ_POST_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST');\r\n// api - update\r\nconst [\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAILURE,\r\n] = createRequestActionTypes('post/UPDATE_POST');\r\n// api - list\r\nconst [GET_LIST, GET_LIST_SUCCESS, GET_LIST_FAILURE] = createRequestActionTypes(\r\n  'post/GET_LIST',\r\n);\r\nconst UNLOAD_LIST = 'post/UNLOAD_LIST'; // 포스트 리스트 뷰 언마운트시 post list 정보 제거\r\nconst [\r\n  READ_POST_COMMENT,\r\n  READ_POST_COMMENT_SUCCESS,\r\n  READ_POST_COMMENT_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST_COMMENT');\r\nconst [\r\n  WRITE_POST_COMMENT,\r\n  WRITE_POST_COMMENT_SUCCESS,\r\n  WRITE_POST_COMMENT_FAILURE,\r\n] = createRequestActionTypes('post/WRITE_POST_COMMENT');\r\nconst [\r\n  UPDATE_POST_COMMENT,\r\n  UPDATE_POST_COMMENT_SUCCESS,\r\n  UPDATE_POST_COMMENT_FAILURE,\r\n] = createRequestActionTypes('post/UPDATE_POST_COMMENT');\r\nconst UNLOAD_POST_COMMENT = 'post/UNLOAD_POST_COMMENT';\r\n\r\n/* action */\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, (post) => post);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\nexport const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\r\n  title,\r\n  body,\r\n  tags,\r\n}));\r\nexport const readPost = createAction(READ_POST, (id) => id);\r\nexport const updatePost = createAction(\r\n  UPDATE_POST,\r\n  ({ id, title, body, tags }) => ({ id, title, body, tags }),\r\n);\r\nexport const getList = createAction(\r\n  GET_LIST,\r\n  ({ page, tag, username, query, block, oldest, day }) => ({\r\n    page,\r\n    tag,\r\n    username,\r\n    query,\r\n    block,\r\n    oldest,\r\n    day,\r\n  }),\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\nexport const readPostComment = createAction(\r\n  READ_POST_COMMENT,\r\n  ({ id, page, block }) => ({\r\n    id,\r\n    page,\r\n    block,\r\n  }),\r\n);\r\nexport const writePostComment = createAction(\r\n  WRITE_POST_COMMENT,\r\n  ({ id, body }) => ({ id, body }),\r\n);\r\nexport const updatePostComment = createAction(\r\n  UPDATE_POST_COMMENT,\r\n  ({ id, commentId, body }) => ({ id, commentId, body }),\r\n);\r\nexport const unloadPostComment = createAction(UNLOAD_POST_COMMENT);\r\n\r\n/* redux-saga */\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\nconst getListSaga = createRequestSaga(GET_LIST, postAPI.getList);\r\nconst readPostCommentSaga = createRequestSaga(\r\n  READ_POST_COMMENT,\r\n  postAPI.readComment,\r\n);\r\nconst writePostCommentSaga = createRequestSaga(\r\n  WRITE_POST_COMMENT,\r\n  postAPI.writeComment,\r\n);\r\nconst updatePostCommentSaga = createRequestSaga(\r\n  UPDATE_POST_COMMENT,\r\n  postAPI.updateComment,\r\n);\r\n\r\nexport function* postSaga() {\r\n  yield takeLatest(WRITE_POST, writePostSaga);\r\n  yield takeLatest(READ_POST, readPostSaga);\r\n  yield takeLatest(UPDATE_POST, updatePostSaga);\r\n  yield takeLatest(GET_LIST, getListSaga);\r\n  yield takeLatest(READ_POST_COMMENT, readPostCommentSaga);\r\n  yield takeLatest(WRITE_POST_COMMENT, writePostCommentSaga);\r\n  yield takeLatest(UPDATE_POST_COMMENT, updatePostCommentSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n  editPost: null,\r\n  editPostError: null,\r\n  post: null,\r\n  postError: null,\r\n  postList: [],\r\n  lastPage: 1,\r\n  postCount: 0,\r\n  postListError: null,\r\n  targetPostId: null,\r\n  commentList: [],\r\n  commentCount: 0,\r\n  commentLastPage: 1,\r\n  commentListError: null,\r\n  editComment: null,\r\n  editCommentError: null,\r\n};\r\n\r\n/* reducer */\r\nconst post = handleActions(\r\n  {\r\n    [INITIALIZE]: () => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키값을 업데이트\r\n    }),\r\n    [SET_ORIGINAL_POST]: (state, { payload: post }) => ({\r\n      ...state,\r\n      title: post.title,\r\n      body: post.body,\r\n      tags: post.tags,\r\n      targetPostId: post._id,\r\n    }),\r\n    [UNLOAD_POST]: (state) => ({\r\n      ...state,\r\n      post: null,\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST]: (state) => ({\r\n      ...state,\r\n      editPost: null,\r\n      neditPosttError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n      editPostError: null,\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPost: null,\r\n      editPostError,\r\n    }),\r\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n      postError: null,\r\n    }),\r\n    [READ_POST_FAILURE]: (state, { payload: postError }) => ({\r\n      ...state,\r\n      post: null,\r\n      postError,\r\n    }),\r\n    [UPDATE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n      editPostError: null,\r\n    }),\r\n    [UPDATE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPost: null,\r\n      editPostError,\r\n    }),\r\n    [GET_LIST_SUCCESS]: (state, { payload: postList, meta: response }) => ({\r\n      ...state,\r\n      postList,\r\n      postCount: parseInt(response.headers['makeuphara-post-count'], 10),\r\n      lastPage: parseInt(response.headers['makeuphara-post-last-page'], 10),\r\n    }),\r\n    [GET_LIST_FAILURE]: (state, { payload: postListError }) => ({\r\n      ...state,\r\n      postList: [],\r\n      postListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      postList: [],\r\n      postListError: null,\r\n    }),\r\n    [READ_POST_COMMENT_SUCCESS]: (\r\n      state,\r\n      { payload: commentList, meta: response },\r\n    ) => ({\r\n      ...state,\r\n      commentList,\r\n      commentCount: parseInt(\r\n        response.headers['makeuphara-post-comment-count'],\r\n        10,\r\n      ),\r\n      commentLastPage: parseInt(\r\n        response.headers['makeuphara-post-comment-last-page'],\r\n        10,\r\n      ),\r\n      commentListError: null,\r\n    }),\r\n    [READ_POST_COMMENT_FAILURE]: (state, { payload: commentListError }) => ({\r\n      ...state,\r\n      commentList: [],\r\n      commentListError,\r\n    }),\r\n    [WRITE_POST_COMMENT_SUCCESS]: (state, { payload: editComment }) => ({\r\n      ...state,\r\n      editComment,\r\n      editCommentError: null,\r\n    }),\r\n    [WRITE_POST_COMMENT_FAILURE]: (state, { payload: editCommentError }) => ({\r\n      ...state,\r\n      editComment: null,\r\n      editCommentError,\r\n    }),\r\n    [UPDATE_POST_COMMENT_SUCCESS]: (state, { payload: editComment }) => ({\r\n      ...state,\r\n      editComment,\r\n      editCommentError: null,\r\n    }),\r\n    [UPDATE_POST_COMMENT_FAILURE]: (state, { payload: editCommentError }) => ({\r\n      ...state,\r\n      editComment: null,\r\n      editCommentError,\r\n    }),\r\n    [UNLOAD_POST_COMMENT]: (state) => ({\r\n      ...state,\r\n      commentList: [],\r\n      commentListError: null,\r\n      commentCount: 0,\r\n      commentLastPage: 1,\r\n      editComment: null,\r\n      editCommentError: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default post;\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../module/redux/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport const createRequestSaga = (type, request) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function* (action) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n        meta: response,\r\n      });\r\n    } catch (error) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: error,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type));\r\n  };\r\n};\r\n"],"sourceRoot":""}