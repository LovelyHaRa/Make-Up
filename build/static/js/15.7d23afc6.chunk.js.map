{"version":3,"sources":["components/common/LoadingProgress.js","components/post/common/Tags.js","lib/util.js","components/common/Pagination.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","components/profile/Activity.js","containers/profile/ActivityContainer.js"],"names":["LoadingProgressBlock","styled","div","props","customHeight","css","CustomCircularProgress","CircularProgress","theme","categoryBorder","LoadingProgress","full","body","className","TagsBlock","postTagText","postTagHoverText","buildLink","username","tag","query","qs","stringify","Tags","tags","limit","map","index","to","length","getPageNumber","page","lastPage","result","front","mid","end","endpointSite","endpointBlockCount","i","push","halfBlockCount","parseInt","blockCount","count","sort","a","b","concat","PaginationBlock","text","PageLink","Button","PageButton","path","AsyncPagination","handleClick","pageNumber","number","disabled","onClick","Pagination","SIZE","React","ref","classes","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","transform","_extends","clsx","root","capitalize","determinate","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","name","flip","ActivityBlock","profileInfoValueBody","PostBlock","postBorder","hoverList","PostItem","post","_id","title","publisher","Activity","postList","postCount","documentCount","loadingPost","loadingWiki","paginationProps","ActivityContainer","dispatch","useDispatch","useSelector","user","wiki","loading","postLastPage","postListError","documentCountError","location","useLocation","parse","search","ignoreQueryPrefix","useEffect","getList","getDocumentCount","unloadList","pagenationProps","useMemo"],"mappings":"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","file":"static/js/15.7d23afc6.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={`${full && 'full-height'} ${body && 'body-height'}`}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 포스트의 태그를 출력하는 컴포넌트\r\n */\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => (\r\n  <TagsBlock className=\"tags\">\r\n    {limit > 0 &&\r\n      tags.map(\r\n        (tag, index) =>\r\n          index < limit && (\r\n            <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n              #{tag}\r\n            </Link>\r\n          ),\r\n      )}\r\n    {limit > 0 && limit < tags.length && <span>...</span>}\r\n    {!limit &&\r\n      tags.map((tag) => (\r\n        <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n          #{tag}\r\n        </Link>\r\n      ))}\r\n  </TagsBlock>\r\n);\r\n\r\nexport default Tags;\r\n","/* 페이지 번호를 저장한 배열을 구하는 함수 */\r\nexport const getPageNumber = (page, lastPage) => {\r\n  /* CONFIG */\r\n  const endpointBlockCount = 3;\r\n  const blockCount = 5;\r\n\r\n  // 페이지 번호 그룹을 3개로 분할\r\n  // 총 페이지 블록 개수 : endpointBlockCount + blockCount + 1(첫/마지막 페이지)\r\n  const result = {\r\n    front: [],\r\n    mid: [],\r\n    end: [],\r\n  };\r\n  // 전체 페이지의 중간지점을 기준으로 위치 설정\r\n  // 해당되는 위치에 endpointBlockCount 값만큼 페이지 번호 할당, 반대편은 1개 할당(첫/마지막 페이지)\r\n  const endpointSite = page <= lastPage / 2 ? 'first' : 'last';\r\n  // 1. 전체 페이지 개수(lastPage)가 총 페이지 블록 개수보다 작으면 mid 위치에 페이지 블록 모두 삽입\r\n  if (lastPage <= endpointBlockCount + blockCount + 1) {\r\n    // 페이지 블록 모두 삽입\r\n    for (let i = 1; i <= lastPage; i += 1) {\r\n      result.mid.push(i);\r\n    }\r\n    // 양 끝 그룹 비활성화\r\n    result.front = null;\r\n    result.end = null;\r\n    // 리턴\r\n    return result;\r\n  }\r\n  // blockCount의 절반 값을 정수로 저장\r\n  const halfBlockCount = parseInt(blockCount / 2, 10);\r\n  // 2. 현 페이지가 왼쪽 구역일 경우\r\n  if (endpointSite === 'first') {\r\n    // front: 왼쪽 구역 블록 삽입\r\n    for (let i = 1; i <= endpointBlockCount; i += 1) {\r\n      result.front.push(i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page <= endpointBlockCount) {\r\n      page = endpointBlockCount + 1;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 왼쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page - halfBlockCount <= endpointBlockCount) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page - 1; i > endpointBlockCount; i -= 1) {\r\n        result.mid.push(i);\r\n        count -= 1;\r\n      }\r\n      // 겹친 개수만큼 오른쪽 블록에 추가\r\n      for (let i = page; i <= page + halfBlockCount + count; i += 1) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i += 1) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n    // end: 마지막 페이지 번호만 삽입\r\n    result.end.push(lastPage);\r\n  } else if (endpointSite === 'last') {\r\n    // 오른쪽 구역일 경우\r\n    // front: 첫 페이지 번호만 삽입\r\n    result.front.push(1);\r\n    // end: 오른쪽 구역 블록 삽입\r\n    for (let i = 0; i < endpointBlockCount; i += 1) {\r\n      result.end.push(lastPage - i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page >= lastPage - endpointBlockCount + 1) {\r\n      page = lastPage - endpointBlockCount;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 오른쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page + halfBlockCount >= lastPage - endpointBlockCount + 1) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page + 1; i < lastPage - endpointBlockCount + 1; i += 1) {\r\n        result.mid.push(i);\r\n        count -= 1;\r\n      }\r\n      // 겹친 개수만큼 왼쪽 블록에 추가\r\n      for (let i = page; i >= page - halfBlockCount - count; i -= 1) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i += 1) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n  }\r\n  // 3. 페이지 블록을 정렬\r\n  result.front.sort((a, b) => a - b);\r\n  result.mid.sort((a, b) => a - b);\r\n  result.end.sort((a, b) => a - b);\r\n\r\n  // 4. 각 그룹이 연결되면 mid로 병합\r\n  if (result.front[result.front.length - 1] + 1 === result.mid[0]) {\r\n    result.mid = result.front.concat(result.mid);\r\n    result.front = null;\r\n  }\r\n  if (result.mid[result.mid.length - 1] + 1 === result.end[0]) {\r\n    result.mid = result.mid.concat(result.end);\r\n    result.end = null;\r\n  }\r\n  // 리턴\r\n  return result;\r\n};\r\n\r\nexport default null;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getPageNumber } from '../../lib/util';\r\nimport Button from './Button';\r\n\r\nconst PaginationBlock = styled.div`\r\n  width: 320px;\r\n  margin: 2rem auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  span {\r\n    margin: 0 0.25rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  span::before {\r\n    content: '\\\\B7\\\\B7\\\\B7';\r\n  }\r\n`;\r\n\r\nconst PageLink = styled(Button)`\r\n  width: 1rem;\r\n  padding: 0.375rem;\r\n  text-align: center;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst PageButton = styled(Button)`\r\n  width: 1.5rem;\r\n  padding: 0.375rem;\r\n  text-align: center;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ path, query, page }) =>\r\n  query.length > 0 ? `${path}?${query}&page=${page}` : `${path}?page=${page}`;\r\n\r\nconst Pagination = ({ path, query, page, lastPage }) => {\r\n  const pageNumber = getPageNumber(page, lastPage);\r\n  return (\r\n    <PaginationBlock>\r\n      {pageNumber.front &&\r\n        pageNumber.front.map((number) => (\r\n          <PageLink\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageLink>\r\n        ))}\r\n      {pageNumber.front && <span className=\"page-skip\" />}\r\n      {pageNumber.mid &&\r\n        pageNumber.mid.map((number) => (\r\n          <PageLink\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageLink>\r\n        ))}\r\n      {pageNumber.end && <span className=\"page-skip\" />}\r\n      {pageNumber.end &&\r\n        pageNumber.end.map((number) => (\r\n          <PageLink\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageLink>\r\n        ))}\r\n    </PaginationBlock>\r\n  );\r\n};\r\n\r\nexport const AsyncPagination = ({ handleClick, page, lastPage }) => {\r\n  const pageNumber = getPageNumber(page, lastPage);\r\n  return (\r\n    <PaginationBlock>\r\n      {pageNumber.front &&\r\n        pageNumber.front.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            onClick={() => handleClick(number)}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.front && <span />}\r\n      {pageNumber.mid &&\r\n        pageNumber.mid.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            onClick={() => handleClick(number)}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.end && <span />}\r\n      {pageNumber.end &&\r\n        pageNumber.end.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            onClick={() => handleClick(number)}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n    </PaginationBlock>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\nimport Pagination from '../common/Pagination';\r\n\r\n/**\r\n * 활동정보 컴포넌트\r\n * 위키문서/블로그 포스팅 카운트 확인\r\n * 작성한 블로그 포스트 리스트 출력\r\n */\r\n\r\nconst ActivityBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 700px;\r\n  @media screen and (max-width: 1024px) {\r\n    width: 580px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 70vw;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 60vw;\r\n  }\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  .activity-count-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media screen and (min-width: 769px) {\r\n      flex-direction: row;\r\n      .profile-info-group {\r\n        &:first-of-type {\r\n          margin-left: 0;\r\n        }\r\n        margin-left: 3rem;\r\n      }\r\n    }\r\n  }\r\n  .profile-info-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .profile-info-title {\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    font-size: 1.5rem;\r\n  }\r\n  .profile-info-content {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .profile-info-content-col {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .content-title {\r\n    margin-right: 1rem;\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n  }\r\n  .content-value {\r\n    padding: 0.25rem 0.5rem;\r\n    font-size: 1rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    border-radius: 0.25rem;\r\n    background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  }\r\n  .activity-post-list {\r\n    margin: 1rem 0;\r\n  }\r\n  .activity-post-item {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  & > a {\r\n    font-family: 'NanumGothic';\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    font-family: 'NanumGothic';\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\n// 활동 정보 내의 유저가 작성한 블로그 포스트 리스트 아이템\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst Activity = ({\r\n  postList,\r\n  postCount,\r\n  documentCount,\r\n  loadingPost,\r\n  loadingWiki,\r\n  ...paginationProps\r\n}) => {\r\n  if (loadingPost || loadingWiki) {\r\n    return (\r\n      <ActivityBlock>\r\n        <LoadingProgress customHeight={70} />\r\n      </ActivityBlock>\r\n    );\r\n  }\r\n  return (\r\n    <ActivityBlock>\r\n      <div className=\"activity-count-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">WIKI DOCUMENT</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 위키 문서 개수</span>\r\n            {!loadingWiki && (\r\n              <span className=\"content-value\">{documentCount}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">POST</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 개수</span>\r\n            {!loadingPost && <span className=\"content-value\">{postCount}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"activity-post-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">PUBLISHED POST LIST</span>\r\n          <div className=\"profile-info-content-col\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 목록</span>\r\n            {!loadingPost && postList && (\r\n              <div className=\"activity-post-list\">\r\n                <div className=\"activity-post-item\">\r\n                  {postList.map((post) => (\r\n                    <PostItem post={post} key={post._id} />\r\n                  ))}\r\n                </div>\r\n                <Pagination {...paginationProps} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ActivityBlock>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\nimport { getList, unloadList } from '../../module/redux/post';\r\nimport { getDocumentCount } from '../../module/redux/wiki';\r\nimport Activity from '../../components/profile/Activity';\r\n\r\nconst ActivityContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    user,\r\n    postList,\r\n    postCount,\r\n    postLastPage,\r\n    documentCount,\r\n    postListError,\r\n    documentCountError,\r\n    loadingPost,\r\n    loadingWiki,\r\n  } = useSelector(({ user, post, wiki, loading }) => ({\r\n    user: user.user,\r\n    postList: post.postList,\r\n    postCount: post.postCount,\r\n    postLastPage: post.lastPage,\r\n    documentCount: wiki.documentCount,\r\n    postListError: post.postListError,\r\n    documentCountError: wiki.documentCountError,\r\n    loadingPost: loading['post/GET_LIST'],\r\n    loadingWiki: loading['wiki/GET_DOCUMENT_COUNT'],\r\n  }));\r\n  const location = useLocation();\r\n\r\n  // 이벤트 정의\r\n  const { username } = user;\r\n  const { page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (username) {\r\n      dispatch(getList({ username, page }));\r\n      dispatch(getDocumentCount({ username }));\r\n    }\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch, username, page]);\r\n\r\n  const pagenationProps = useMemo(\r\n    () => ({\r\n      path: '/mypage/activity',\r\n      query: '',\r\n      page: parseInt(page, 10),\r\n      lastPage: postLastPage,\r\n    }),\r\n    [page, postLastPage],\r\n  );\r\n\r\n  return (\r\n    <Activity\r\n      user={user}\r\n      postList={postList}\r\n      postCount={postCount}\r\n      documentCount={documentCount}\r\n      postListError={postListError}\r\n      documentCountError={documentCountError}\r\n      loadingPost={loadingPost}\r\n      loadingWiki={loadingWiki}\r\n      {...pagenationProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ActivityContainer;\r\n"],"sourceRoot":""}