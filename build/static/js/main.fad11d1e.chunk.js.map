{"version":3,"sources":["components/common/Pagination.js","containers/post/PaginationContainer.js","lib/createRequest.js","lib/api/auth.js","lib/api/user.js","module/redux/user.js","components/common/CustomSwitch.js","module/redux/theme.js","components/common/Header.js","containers/common/HeaderContainer.js","components/common/BodyBlock.js","components/main/BlogSection.js","containers/main/BlogSectionContainer.js","components/main/WikiSection.js","module/redux/wiki.js","lib/api/wiki.js","containers/main/WikiSectionContainer.js","components/main/Main.js","containers/main/MainContainer.js","pages/main/MainPage.js","lib/styles/theme.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","module/redux/auth.js","containers/auth/LoginForm.js","pages/auth/LoginPage.js","containers/auth/RegisterForm.js","pages/auth/RegisterPage.js","components/common/editor/EditorFooter.js","components/post/write/Editor.js","containers/post/write/EditorContainer.js","components/post/write/TagBox.js","containers/post/write/TagBoxContainer.js","components/common/editor/WriteActionButtons.js","containers/post/write/WriteActionButtonsContainer.js","pages/post/PostWritePage.js","components/post/PostViewer.js","components/common/Modal.js","components/post/AskRemoveModal.js","components/post/PostActionButtions.js","containers/post/PostViewerContainer.js","pages/post/PostPage.js","pages/post/PostListPage.js","pages/auth/callback/LoginWithNaverPage.js","pages/auth/callback/LoginWithKakaoPage.js","components/wiki/InputBarcodeModal.js","components/wiki/WikiViewer.js","containers/wiki/WikiViewerContainer.js","components/wiki/WikiSearch.js","containers/wiki/WikiSearchContainer.js","pages/wiki/WikiPage.js","components/wiki/edit/Editor.js","containers/wiki/edit/EditorContainer.js","containers/wiki/edit/WriteActionButtonsContainer.js","pages/wiki/WikiEditPage.js","components/wiki/WikiRequest.js","containers/wiki/WikiRequestContainer.js","pages/wiki/WikiRequestPage.js","components/wiki/WikiHistory.js","containers/wiki/WikiHistoryContainer.js","pages/wiki/WikiHistoryPage.js","components/wiki/WikiList.js","components/common/Category.js","components/wiki/Categories.js","containers/wiki/WikiListContainer.js","pages/wiki/WikiListPage.js","components/profile/MyPageMenu.js","containers/profile/MyPageMenuContainer.js","components/common/FlexContentBlock.js","components/profile/Profile.js","containers/profile/ProfileContainer.js","pages/profile/MyPage.js","components/profile/Security.js","containers/profile/SecurityContainer.js","pages/profile/SecurityPage.js","components/profile/Activity.js","containers/profile/ActivityContainer.js","pages/profile/ActivityPage.js","App.js","serviceWorker.js","module/redux/index.js","index.js","lib/api/client.js","module/redux/post.js","components/common/Responsive.js","components/common/Button.js","components/common/ErrorBlock.js","lib/styles/open-color.js","lib/api/post.js","components/post/common/Tags.js","module/redux/loading.js","components/post/common/SubInfo.js"],"names":["PaginationBlock","styled","div","theme","text","PageButton","Button","buildLink","username","tag","page","query","qs","stringify","Pagination","lastPage","pageNumber","result","front","mid","end","endpointSite","endpointBlockCount","i","push","halfBlockCount","parseInt","blockCount","count","sort","a","b","length","concat","getPageNumber","map","number","disabled","to","key","withRouter","location","match","useSelector","post","loading","postList","params","parse","search","ignoreQueryPrefix","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","action","put","startLoading","call","payload","response","data","meta","error","finishLoading","logout","client","checkExistName","name","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","CHECK_EXIST_NAME","CHECK_EXIST_NAME_SUCCESS","CHECK_EXIST_NAME_FAILURE","UPDATE_NAME","UPDATE_NAME_SUCCESS","UPDATE_NAME_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","check","createAction","tempSetUser","changeField","form","value","updateName","id","initializeUpdateName","changePassword","password","newPassword","initializeChangePassword","checkSaga","get","checkExistNameSaga","userAPI","updateNameSaga","patch","changePasswordSaga","checkFailureSaga","sessionStorage","removeItem","authAPI","takeLatest","handleActions","state","user","checkError","produce","draft","checkExistNameResult","checkExistNameResultError","updateUser","updateUserError","changePasswordResult","changePasswordError","curPassword","confirmPassword","profile","DarkThemeSwitch","Switch","darkThemeSwitchTrack","darkThemeSwitchBody","setTheme","isDarkTheme","HeaderBlock","nav","body","hoverText","dropdownBody","palette","gray","hoverList","Menu","SearchResponsive","SearchInputWrapper","SearchInput","input","inputBody","placeholder","indigo","SearchBtn","Link","btnSearchBody","MemoizedEtcDropDown","React","memo","className","SearchDropDown","currentPath","ProfileInfo","OptionMenu","classes","makeStyles","darkTheme","fontFamily","useStyles","useState","setDarkTheme","dispatch","useDispatch","useEffect","Typography","component","Grid","container","display","alignItems","justify","style","fontSize","letterSpacing","item","checked","onChange","localStorage","setItem","size","LogoutMenu","onLogout","onClick","UserDropDown","NoneUserDropDown","SearchInputPackage","tabIndex","icon","Spacer","Header","library","add","faSearch","faEllipsisH","faEllipsisV","faUserCircle","etc","setEtc","setSearch","userinfo","setUserinfo","noneuser","setNoneUser","ClickAwayListener","onClickAway","prevOpen","aria-haspopup","justifyContent","transparent","pathname","BodyBlock","props","includeHeader","BlogSectionBlock","PostBlock","postBorder","PostItem","_id","title","tags","publisher","Tags","limit","SubInfo","BlogSection","postError","ErrorBlock","message","BlogSectionContainer","postListError","postLoading","getList","block","unloadList","WikiSectionBlock","DocumentBlock","wikiBorder","DocumentItem","document","publishedDate","dayjs","format","WikiSection","documentList","wikiSaga","GET_REQUEST_LIST","GET_REQUEST_LIST_SUCCESS","GET_REQUEST_LIST_FAILURE","SET_TITLE","WRITE_DOCUMENT","WRITE_DOCUMENT_SUCCESS","WRITE_DOCUMENT_FAILURE","READ_DOCUMENT","READ_DOCUMENT_SUCCESS","READ_DOCUMENT_FAILURE","GET_DOCUMENT_LIST","GET_DOCUMENT_LIST_SUCCESS","GET_DOCUMENT_LIST_FAILURE","GET_HISTORY_LIST","GET_HISTORY_LIST_SUCCESS","GET_HISTORY_LIST_FAILURE","GET_SEARCH_LIST","GET_SEARCH_LIST_SUCCESS","GET_SEARCH_LIST_FAILURE","GET_DIRECT_TITLE","GET_DIRECT_TITLE_SUCCESS","GET_DIRECT_TITLE_FAILURE","GET_RANDOM_TITLE","GET_RANDOM_TITLE_SUCCESS","GET_RANDOM_TITLE_FAILURE","GET_DOCUMENT_COUNT","GET_DOCUMENT_COUNT_SUCCESS","GET_DOCUMENT_COUNT_FAILURE","ADD_BARCODE_NUMBER","ADD_BARCODE_NUMBER_SUCCESS","ADD_BARCODE_NUMBER_FAILURE","getRequestList","setTitle","initialize","writeDocument","readDocument","r","unloadDocument","setOriginalDocument","getDocumentList","getHistoryList","getSearchList","oldest","shortest","longest","getDirectTitle","getRandomTitle","getDocumentCount","addBarcodeNumber","code","getRequestListSaga","writeDocumentSaga","readDocumentSaga","queryString","getDocumentListSaga","getHistoryListSaga","getSearchListSaga","getDirectTitleSaga","getRandomTitleSaga","getDocumentCountSaga","addBarcodeNumberSaga","wiki","requestList","requestListError","titleError","editDocument","editDocumentError","directName","directError","randomTitle","randomTitleError","documentError","documentListError","historyList","historyListError","searchList","searchListError","documentCount","documentCountError","addBarcodeNumberResult","addBarcodeNumberResultError","WikiSectionContainer","MainBlock","Main","MainContainer","MainPage","lightTheme","categoryBorder","cyan","themeColorBody","themeColorHoverBody","progressBar","progressBody","sliderTrack","sliderRail","loginBody","loginInputBorder","loginInputBorderFocus","editorTitleBorder","editorText","editorTagComponentBorder","editorTagBoxBorder","editorTagTitle","editorTagButtonBody","editorHoverTagButtonBody","editorTagButtonText","editorTagText","footerText","btnBody","btnHoverBody","btnText","btnDisableBody","btnDisableColor","postSubInfoText","postSubInfoHoverText","postTagText","postTagHoverText","postActionButtonText","postActionButtonHoverText","postActionButtonBody","postActionButtonHoverBody","wikiMenuBorder","wikiActionButtonBody","wikiActionButtonHoverBody","wikiActionButtonText","wikitActionButtonHoverText","wikiHistoryLinkText","wikiHistoryLinkHoverText","errorText","red","profileInfoValueBody","profileInputValid","profileInputInValid","violet","AuthTemplateBlock","ContentBox","AuthTemplate","children","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","GoogleLoginButton","button","buttonStyle","socialBtnStyle","css","NaverLoginButton","KakaoLoginButton","textMap","login","signinGoogle","register","ErrorMessage","AuthForm","onSubmit","onSocialLogin","validUsername","validName","googleLoginBtn","useRef","auth2","loadGoogleLoginApi","useCallback","window","load","current","init","client_id","process","cookiepolicy","scope","attachClickHandler","googleUser","id_token","getAuthResponse","onNaverLoginClick","requestUrl","onKakaoLoginClick","loadScript","script","srcValue","referenceNode","getElementsByTagName","getElementById","googlejssdkNode","createElement","src","parentNode","insertBefore","removeApiScript","tagName","targetId","targetNode","node","indexOf","removeChild","removeTag","sdkNode","removeJssdk","autoComplete","passwordConfirm","fullWidth","ref","faGoogle","alt","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_WITH_GOOGLE","LOGIN_WITH_GOOGLE_SUCCESS","LOGIN_WITH_GOOGLE_FAILURE","LOGIN_WITH_NAVER","LOGIN_WITH_NAVER_SUCCESS","LOGIN_WITH_NAVER_FAILURE","LOGIN_WITH_KAKAO","LOGIN_WITH_KAKAO_SUCCESS","LOGIN_WITH_KAKAO_FAILURE","CHECK_EXIST_USERNAME","CHECK_EXIST_USERNAME_SUCCESS","CHECK_EXIST_USERNAME_FAILURE","changeFieid","initializeForm","loginWithGoogle","loginWithNaver","client_secret","loginWithKakao","redirect_uri","checkExistUsername","registerSaga","loginSaga","loginWithGoogleSaga","loginWithNaverSaga","loginWithKakaoSaga","checkExistUsernameSaga","debounce","initialState","checkExistUsernameResult","checkExistUsernameResultError","auth","authError","registerResult","registerResultError","history","setError","status","replace","JSON","e","target","preventDefault","includes","LoginPage","isNotExistUsername","isNotExistUsernameError","isNotExistName","isNotExistNameError","setValidUsername","setValidName","isLoading","RegisterPage","EditorFooterBlock","EditorFooter","editorName","editorHref","Quill","ImageResize","EditorBlock","Responsive","TitleInput","QuillWrapper","Editor","onChangeField","quillElement","quillInstance","modules","imageResize","toolbar","header","indent","align","list","color","background","quill","on","delta","oldDelta","source","root","innerHTML","mounted","EditorContainer","TagBoxBlock","TagForm","Tag","TagListBlock","TagItem","onRemove","TagList","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","nextTags","filter","t","trim","TagBoxContainer","WriteActionButtonsBlock","StyledButton","WriteActionButtons","isEdit","onCancel","editPost","editPostError","targetPostId","updatePost","writePost","goBack","PostViewerBlock","PostViewerErrorBlock","PostHead","PostContent","PostViewer","actionButtons","statusText","hasMarginTop","dangerouslySetInnerHTML","__html","FullScreen","AskModalBlock","SingleInputModalBlock","StyledTextField","TextField","AskModal","visible","description","confirmText","cancelText","onConfirm","Fade","in","themeColor","SingleInputModal","inputLabel","inputName","submitText","resultMessage","success","failure","label","require","AskRemoveModal","PostActionButtionsBlock","ActionButton","PostActionButtions","onEdit","modal","setModal","onclick","event","postId","removePost","readPost","unloadPost","isPublisher","setOriginalPost","PostPage","PostListContainer","loadable","PostListPage","InputBarcodeModal","WikiViewerBlock","WikiViewerErrorBlock","DocumentMenuBlock","DocumentMenu","docName","handleBarcodeChange","handleBarcodeSubmit","barcode","inputBarcodeError","availableBarcode","TitleBlock","DocumentContent","WikiViewer","resultError","setBarcode","setInputBarcodeError","setResultMessage","setAvailableBarcode","isNaN","console","log","WikiSearchBlock","SearchBlock","SearchButton","WikiSearch","onSearch","onDirect","onShuffle","faRandom","faArrowRight","onKeyUp","keyCode","WikiPage","localTitle","getItem","WikiRequestBlock","wikiActionButtonHoverText","WikiRequestErrorBlock","RequestItem","WikiRequest","WikiRequestPage","WikiHistoryBlock","HistoryErrorBlock","HistoryItem","revision","WikiHistory","WikiHistoryPage","WikiListBlock","WikiListErrorBlock","forwardRef","LoadingProgress","LinearProgress","WikiList","lastDocumentRef","isLastPage","index","Category","NavLink","categories","CategoriesBlock","category","activeClassName","exact","isActive","undefined","setDocumentList","setIsLastPage","active","setActive","element","isValidQuery","intersectionObserver","IntersectionObserver","entries","observer","lastDocument","intersectionRatio","unobserve","setTimeout","observe","WikiListPage","MyPageMenuBlock","MenuList","link","NavMenu","MyPageMenu","menu","MyPageMenuContainer","FlexContentBlock","direction","ProfileBlock","StyleInput","ProfileSubmitButton","ProfileErrorBlock","Profile","nameMessage","existNameError","equalName","submitMessage","errorMessage","provider","ProfileContainer","setEqualName","setNameMessage","setSubmitMessage","setErrorMessage","loadingForm","loginName","toLowerCase","MyPage","SecurityBlock","PasswordInput","Security","valid","validMessage","submitPassword","validCur","validNew","validConfirm","validMessageCur","validMessageNew","validMessageConfirm","SecurityContainer","setValid","setValidMessage","setSubmitPassword","stateValidMessage","isValidNewPassword","isValidConfirmPassword","curValid","newValid","confirmValid","SecurityPage","ActivityBlock","Activity","postCount","loadingPost","loadingWiki","PaginationContainer","ActivityContainer","ActivityPage","App","path","LoginWithNaverPage","LoginWithKakaoPage","PostWritePage","WikiEditPage","Boolean","hostname","rootSaga","all","postSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","loadUser","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","axios","create","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","GET_LIST","GET_LIST_SUCCESS","GET_LIST_FAILURE","writePostSaga","postAPI","readPostSaga","updatePostSaga","getListSaga","neditPosttError","headers","ResponsiveBlock","rest","yellow","StyledLink","delete","TagsBlock","requestType","SubInfoBlock"],"mappings":"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","file":"static/js/main.fad11d1e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport qs from 'qs';\r\nimport Button from './Button';\r\n\r\nconst PaginationBlock = styled.div`\r\n  width: 320px;\r\n  margin: 2rem auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  span {\r\n    margin: 0 0.25rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  span:before {\r\n    content: '\\\\B7\\\\B7\\\\B7';\r\n  }\r\n`;\r\n\r\nconst PageButton = styled(Button)`\r\n  width: 1rem;\r\n  padding: 0.375rem;\r\n  text-align: center;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag, page }) => {\r\n  const query = qs.stringify({ tag, page });\r\n  return username ? `/blog/@${username}?${query}` : `/blog/?${query}`;\r\n};\r\n\r\n/* CONFIG */\r\nconst endpointBlockCount = 3;\r\nconst blockCount = 5;\r\n\r\n/* 페이지 번호를 저장한 배열을 구하는 함수 */\r\nconst getPageNumber = (page, lastPage) => {\r\n  // 페이지 번호 그룹을 3개로 분할\r\n  // 총 페이지 블록 개수 : endpointBlockCount + blockCount + 1(첫/마지막 페이지)\r\n  const result = {\r\n    front: [],\r\n    mid: [],\r\n    end: [],\r\n  };\r\n  // 전체 페이지의 중간지점을 기준으로 위치 설정\r\n  // 해당되는 위치에 endpointBlockCount 값만큼 페이지 번호 할당, 반대편은 1개 할당(첫/마지막 페이지)\r\n  const endpointSite = page <= lastPage / 2 ? 'first' : 'last';\r\n  // 1. 전체 페이지 개수(lastPage)가 총 페이지 블록 개수보다 작으면 mid 위치에 페이지 블록 모두 삽입\r\n  if (lastPage <= endpointBlockCount + blockCount + 1) {\r\n    // 페이지 블록 모두 삽입\r\n    for (let i = 1; i <= lastPage; i++) {\r\n      result.mid.push(i);\r\n    }\r\n    // 양 끝 그룹 비활성화\r\n    result.front = null;\r\n    result.end = null;\r\n    // 리턴\r\n    return result;\r\n  }\r\n  // blockCount의 절반 값을 정수로 저장\r\n  const halfBlockCount = parseInt(blockCount / 2);\r\n  // 2. 현 페이지가 왼쪽 구역일 경우\r\n  if (endpointSite === 'first') {\r\n    // front: 왼쪽 구역 블록 삽입\r\n    for (let i = 1; i <= endpointBlockCount; i++) {\r\n      result.front.push(i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page <= endpointBlockCount) {\r\n      page = endpointBlockCount + 1;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 왼쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page - halfBlockCount <= endpointBlockCount) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page - 1; i > endpointBlockCount; i--) {\r\n        result.mid.push(i);\r\n        count--;\r\n      }\r\n      // 겹친 개수만큼 오른쪽 블록에 추가\r\n      for (let i = page; i <= page + halfBlockCount + count; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n    // end: 마지막 페이지 번호만 삽입\r\n    result.end.push(lastPage);\r\n  } else if (endpointSite === 'last') {\r\n    // 오른쪽 구역일 경우\r\n    // front: 첫 페이지 번호만 삽입\r\n    result.front.push(1);\r\n    // end: 오른쪽 구역 블록 삽입\r\n    for (let i = 0; i < endpointBlockCount; i++) {\r\n      result.end.push(lastPage - i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page >= lastPage - endpointBlockCount + 1) {\r\n      page = lastPage - endpointBlockCount;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 오른쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page + halfBlockCount >= lastPage - endpointBlockCount + 1) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page + 1; i < lastPage - endpointBlockCount + 1; i++) {\r\n        result.mid.push(i);\r\n        count--;\r\n      }\r\n      // 겹친 개수만큼 왼쪽 블록에 추가\r\n      for (let i = page; i >= page - halfBlockCount - count; i--) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n  }\r\n  // 3. 페이지 블록을 정렬\r\n  result.front.sort((a, b) => a - b);\r\n  result.mid.sort((a, b) => a - b);\r\n  result.end.sort((a, b) => a - b);\r\n\r\n  // 4. 각 그룹이 연결되면 mid로 병합\r\n  if (result.front[result.front.length - 1] + 1 === result.mid[0]) {\r\n    result.mid = result.front.concat(result.mid);\r\n    result.front = null;\r\n  }\r\n  if (result.mid[result.mid.length - 1] + 1 === result.end[0]) {\r\n    result.mid = result.mid.concat(result.end);\r\n    result.end = null;\r\n  }\r\n  // 리턴\r\n  return result;\r\n};\r\n\r\nconst Pagination = ({ page, lastPage, username, tag }) => {\r\n  const pageNumber = getPageNumber(page, lastPage);\r\n  return (\r\n    <PaginationBlock>\r\n      {pageNumber.front &&\r\n        pageNumber.front.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ username, tag, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.front && <span />}\r\n      {pageNumber.mid &&\r\n        pageNumber.mid.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ username, tag, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.end && <span />}\r\n      {pageNumber.end &&\r\n        pageNumber.end.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ username, tag, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n    </PaginationBlock>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport qs from 'qs';\r\n\r\nconst PaginationContainer = ({ location, match }) => {\r\n  // 전역 변수 불러오기\r\n  const { postList, loading, lastPage } = useSelector(({ post, loading }) => ({\r\n    postList: post.postList,\r\n    loading: loading['post/GET_LIST'],\r\n    lastPage: post.lastPage,\r\n  }));\r\n\r\n  // 포스트 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\r\n  if (!postList || loading) return null;\r\n\r\n  // page가 없으면 1을 기본으로 사용\r\n  const { username } = match.params;\r\n  const { tag, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  return (\r\n    <Pagination\r\n      tag={tag}\r\n      username={username}\r\n      page={parseInt(page, 10)}\r\n      lastPage={lastPage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../module/redux/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport const createRequestSaga = (type, request) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function* (action) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n        meta: response,\r\n      });\r\n    } catch (error) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: error,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type));\r\n  };\r\n};\r\n","import client from './client';\r\n\r\nexport const register = ({ username, password, name }) =>\r\n  client.post('/api/auth/register', { username, password, name });\r\n\r\nexport const login = ({ username, password }) =>\r\n  client.post('/api/auth/login', { username, password });\r\n\r\nexport const loginWithGoogle = ({ id_token }) =>\r\n  client.post('/api/auth/login/google', { id_token });\r\n\r\nexport const loginWithNaver = ({ client_id, client_secret, code, state }) =>\r\n  client.post('/api/auth/login/naver', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  });\r\n\r\nexport const loginWithKakao = ({\r\n  client_id,\r\n  client_secret,\r\n  code,\r\n  redirect_uri,\r\n}) =>\r\n  client.post('/api/auth/login/kakao', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  });\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import client from './client';\r\n\r\nexport const checkExistUsername = ({ username }) =>\r\n  client.post('/api/user/check/username', { username });\r\n\r\nexport const checkExistName = ({ username, name }) =>\r\n  client.post('/api/user/check/name', { username, name });\r\n\r\nexport const updateName = ({ id, name }) =>\r\n  client.patch('/api/user/profile', { id, name });\r\n\r\nexport const changePassword = ({ id, password, newPassword }) =>\r\n  client.patch('/api/user/password', { id, password, newPassword });\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('user/CHECK_EXIST_NAME');\r\nconst CHANGE_FIELD = 'user/CHANGE_FIELD';\r\n// api- update name\r\nconst [\r\n  UPDATE_NAME,\r\n  UPDATE_NAME_SUCCESS,\r\n  UPDATE_NAME_FAILURE,\r\n] = createRequestActionTypes('user/UPDATE_NAME');\r\nconst INITIALIZE_UPDATE_NAME = 'user/INITIALIZE_UPDATE_NAME';\r\n// api - change password\r\nconst [\r\n  CHANGE_PASSWORD,\r\n  CHANGE_PASSWORD_SUCCESS,\r\n  CHANGE_PASSWORD_FAILURE,\r\n] = createRequestActionTypes('user/CHANGE_PASSWORD');\r\nconst INITIALIZE_CHANGE_PASSWORD = 'user/INITIALIZE_CHANGE_PASSWORD';\r\n\r\n/* action */\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\nexport const tempSetUser = createAction(TEMP_SET_USER);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({ form, key, value }),\r\n);\r\nexport const updateName = createAction(UPDATE_NAME, ({ id, name }) => ({\r\n  id,\r\n  name,\r\n}));\r\nexport const initializeUpdateName = createAction(INITIALIZE_UPDATE_NAME);\r\nexport const changePassword = createAction(\r\n  CHANGE_PASSWORD,\r\n  ({ id, password, newPassword }) => ({ id, password, newPassword }),\r\n);\r\nexport const initializeChangePassword = createAction(\r\n  INITIALIZE_CHANGE_PASSWORD,\r\n);\r\n\r\n/* redux-saga */\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\nconst updateNameSaga = createRequestSaga(UPDATE_NAME, userAPI.updateName);\r\nconst changePasswordSaga = createRequestSaga(\r\n  CHANGE_PASSWORD,\r\n  userAPI.changePassword,\r\n);\r\n\r\nconst checkFailureSaga = () => {\r\n  try {\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n  yield takeLatest(CHECK_EXIST_NAME, checkExistNameSaga);\r\n  yield takeLatest(UPDATE_NAME, updateNameSaga);\r\n  yield takeLatest(CHANGE_PASSWORD, changePasswordSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n  profile: {\r\n    name: '',\r\n  },\r\n  password: {\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  updateUser: null,\r\n  updateUserError: null,\r\n  changePasswordResult: null,\r\n  changePasswordError: null,\r\n};\r\n\r\n/* reducer */\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResultError,\r\n    }),\r\n    [UPDATE_NAME_SUCCESS]: (state, { payload: updateUser }) => ({\r\n      ...state,\r\n      updateUser,\r\n    }),\r\n    [UPDATE_NAME_FAILURE]: (state, { payload: updateUserError }) => ({\r\n      ...state,\r\n      updateUserError,\r\n    }),\r\n    [INITIALIZE_UPDATE_NAME]: (state) => ({\r\n      ...state,\r\n      updateUser: null,\r\n      updateUserError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHANGE_PASSWORD_SUCCESS]: (state, { payload: changePasswordResult }) => ({\r\n      ...state,\r\n      changePasswordResult: !!changePasswordResult,\r\n    }),\r\n    [CHANGE_PASSWORD_FAILURE]: (state, { payload: changePasswordError }) => ({\r\n      ...state,\r\n      changePasswordResult: false,\r\n      changePasswordError,\r\n    }),\r\n    [INITIALIZE_CHANGE_PASSWORD]: (state) => ({\r\n      ...state,\r\n      changePasswordResult: null,\r\n      changePasswordError: null,\r\n      password: {\r\n        curPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import styled from 'styled-components';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const DarkThemeSwitch = styled(Switch)`\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n    background-color: ${({ theme }) => theme.darkThemeSwitchTrack};\r\n  }\r\n  .MuiSwitch-switchBase {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n`;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\n/* action type */\r\nconst SET_THEME = 'theme/SET_THEME';\r\n\r\n/* action */\r\nexport const setTheme = createAction(SET_THEME);\r\n\r\n/* redux-saga */\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  isDarkTheme: false,\r\n};\r\n\r\n/* reducer */\r\nconst theme = handleActions(\r\n  {\r\n    [SET_THEME]: (state, { payload: isDarkTheme }) => ({\r\n      ...state,\r\n      isDarkTheme,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default theme;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faEllipsisH,\r\n  faEllipsisV,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Button from './Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DarkThemeSwitch } from './CustomSwitch';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTheme } from '../../module/redux/theme';\r\n\r\nconst HeaderBlock = styled.nav`\r\n  position: fixed;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.body};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  li {\r\n    list-style-type: none !important;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n  }\r\n  .header-mid {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .header-right {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .logo {\r\n    margin-left: 0.25rem;\r\n    margin-right: 0.25rem;\r\n    font-size: 1rem;\r\n    letter-spacing: 0.5px;\r\n    font-family: 'DancingScript';\r\n    font-weight: 700;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .menu {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .main-menu {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .menu div > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .main-menu {\r\n      display: none;\r\n    }\r\n    .all-menu p {\r\n      margin: 0.5rem 0.5rem 0;\r\n      color: ${({ theme }) => theme.hoverText};\r\n      font-family: 'Raleway';\r\n      font-weight: 600;\r\n    }\r\n    .all-menu li {\r\n      margin: 0;\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n  }\r\n  @media screen and (min-width: 501px) {\r\n    .all-menu {\r\n      display: none;\r\n    }\r\n  }\r\n  .btn-sign-in {\r\n    margin-right: 0.5rem;\r\n    margin-left: 1rem;\r\n  }\r\n  .user-info {\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .dropdown {\r\n    position: fixed;\r\n    z-index: 100;\r\n  }\r\n  .dropdown.dropdown-menu {\r\n    width: 14rem;\r\n    top: 2.5rem;\r\n    background: ${({ theme }) => theme.dropdownBody};\r\n    color: ${({ theme }) => theme.text};\r\n    border: none;\r\n    border-radius: 3px;\r\n    box-shadow: ${({ theme }) =>\r\n      theme.body === '#fff'\r\n        ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n        : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n    font-size: 0.8rem;\r\n  }\r\n  .dropdown.dropdown-menu hr {\r\n    margin: 0 0.25rem;\r\n    border: 0;\r\n    height: 1px;\r\n    background: ${palette.gray[5]};\r\n  }\r\n  .dropdown.dropdown-menu ul {\r\n    padding: 0.5rem 0.25rem;\r\n    margin: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li {\r\n    margin-top: 0.25rem;\r\n    padding: 0.5rem;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  .dropdown.dropdown-menu li:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  .dropdown.dropdown-menu.dropdown-user-info {\r\n    width: 16rem;\r\n    right: 0.5rem;\r\n  }\r\n  .etc-menu,\r\n  .logout-menu {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .profile-menu p {\r\n    margin: 0.5rem 0.5rem 0;\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: 'Raleway';\r\n    font-weight: 600;\r\n  }\r\n  .profile-menu li {\r\n    margin: 0;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n  .profile-menu-mypage {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .logout-menu {\r\n    font-size: 0.9rem;\r\n  }\r\n  .dropdown.dropdown-search-input {\r\n    display: flex;\r\n    top: 2.75rem;\r\n    right: 6.625rem;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.55);\r\n  }\r\n  .none-user {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  &:first-child {\r\n    margin-left: 1rem;\r\n  }\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n  &:last-child {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\nconst SearchResponsive = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    .search-input {\r\n      display: flex;\r\n    }\r\n    .search-btn {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    .search-input {\r\n      display: none;\r\n    }\r\n    .search-btn {\r\n      display: inherit;\r\n      color: ${({ theme }) => theme.text};\r\n      margin: 0 1rem;\r\n    }\r\n    .search-btn > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchInputWrapper = styled.div`\r\n  height: 2rem;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst SearchInput = styled.input`\r\n  height: 1.875rem;\r\n  border: none;\r\n  border-top-left-radius: 3px;\r\n  border-bottom-left-radius: 3px;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  background: ${({ theme }) => theme.inputBody};\r\n  color: ${({ theme }) => theme.text};\r\n  &::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  &:focus {\r\n    outline: 2px solid ${palette.indigo[9]};\r\n  }\r\n`;\r\nconst SearchBtn = styled(Link)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.btnSearchBody};\r\n  color: ${({ theme }) => theme.text};\r\n  border-top-right-radius: 3px;\r\n  border-bottom-right-radius: 3px;\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n`;\r\n\r\nconst EtcDropDown = ({ state }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu\">\r\n        <div className=\"all-menu\">\r\n          <p>MAIN MENU</p>\r\n          <ul>\r\n            <Link to=\"/w\">\r\n              <li>WIKI</li>\r\n            </Link>\r\n            <Link to=\"/blog\">\r\n              <li>blog</li>\r\n            </Link>\r\n          </ul>\r\n          <hr />\r\n        </div>\r\n        <ul className=\"etc-menu\">\r\n          <Link to=\"/wiki/request\">\r\n            <li>작성이 필요한 문서[WIKI]</li>\r\n          </Link>\r\n          <li>외부사이트 검색(구현 중...)</li>\r\n          <li>바코드 / QR코드 만들기(구현 중...)</li>\r\n          <li>실시간 검색어 순위(구현 중...)</li>\r\n          <li>TODO(구현 중...)</li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nconst MemoizedEtcDropDown = React.memo(EtcDropDown);\r\n\r\nconst SearchDropDown = ({ state, currentPath }) => {\r\n  return (\r\n    state && (\r\n      <SearchInputPackage\r\n        type=\"dropdown dropdown-search-input\"\r\n        currentPath={currentPath}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nconst ProfileInfo = ({ user }) => {\r\n  return (\r\n    <div className=\"profile-menu\">\r\n      <p>{user.name}</p>\r\n      <ul>\r\n        <Link to={'/mypage'}>\r\n          <li className=\"profile-menu-mypage\">My Page</li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OptionMenu = ({ isDarkTheme }) => {\r\n  const useStyles = makeStyles(() => ({\r\n    darkTheme: { fontFamily: 'Raleway' },\r\n  }));\r\n  const classes = useStyles();\r\n  const [darkTheme, setDarkTheme] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleDarkThemeToggle = () => {\r\n    dispatch(setTheme(!darkTheme));\r\n    try {\r\n      localStorage.setItem('darkTheme', !darkTheme + '');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n    setDarkTheme(!darkTheme);\r\n  };\r\n  useEffect(() => {\r\n    if (isDarkTheme) {\r\n      setDarkTheme(true);\r\n    }\r\n  }, [isDarkTheme]);\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Typography component=\"div\">\r\n          <Grid\r\n            component=\"label\"\r\n            container\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            style={{\r\n              fontSize: '0.9rem',\r\n              fontFamily: 'sans-serif',\r\n              letterSpacing: '0',\r\n            }}\r\n          >\r\n            <Grid className={classes.darkTheme} item>\r\n              DARK THEME\r\n            </Grid>\r\n            <Grid item>\r\n              <DarkThemeSwitch\r\n                checked={darkTheme}\r\n                onChange={handleDarkThemeToggle}\r\n                name=\"darkTheme\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst LogoutMenu = ({ onLogout, currentPath }) => (\r\n  <ul className=\"logout-menu\">\r\n    <Link to={currentPath} onClick={onLogout}>\r\n      <li>로그아웃</li>\r\n    </Link>\r\n  </ul>\r\n);\r\n\r\nconst UserDropDown = ({ state, user, onLogout, isDarkTheme, currentPath }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <ProfileInfo user={user} />\r\n        <hr />\r\n        <OptionMenu isDarkTheme={isDarkTheme} />\r\n        <hr />\r\n        <LogoutMenu onLogout={onLogout} currentPath={currentPath} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst NoneUserDropDown = ({ state, isDarkTheme }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <OptionMenu isDarkTheme={isDarkTheme} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst SearchInputPackage = ({ type, currentPath }) => (\r\n  <div className={type} tabIndex=\"-1\">\r\n    <SearchInputWrapper>\r\n      <SearchInput placeholder=\"검색\" />\r\n    </SearchInputWrapper>\r\n    <SearchBtn to={currentPath}>\r\n      <FontAwesomeIcon icon=\"search\" />\r\n    </SearchBtn>\r\n  </div>\r\n);\r\n\r\nconst Spacer = styled.div`\r\n  height: 3rem;\r\n`;\r\n\r\nconst Header = ({ user, onLogout, isDarkTheme, currentPath }) => {\r\n  library.add([faSearch, faEllipsisH, faEllipsisV, faUserCircle]);\r\n  const [etc, setEtc] = useState(false);\r\n  const [search, setSearch] = useState(false);\r\n  const [userinfo, setUserinfo] = useState(false);\r\n  const [noneuser, setNoneUser] = useState(false);\r\n\r\n  const handleEtcToggle = () => {\r\n    setEtc((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleEtcClose = () => {\r\n    setEtc(false);\r\n  };\r\n\r\n  const handleSearchToggle = () => {\r\n    setSearch((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleSearchClose = () => {\r\n    setSearch(false);\r\n  };\r\n\r\n  const handleUserInfoToggle = () => {\r\n    setUserinfo((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleUserInfoClose = () => {\r\n    setUserinfo(false);\r\n  };\r\n\r\n  const handleNoneUserToggle = () => {\r\n    setNoneUser((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleNoneUserClose = () => {\r\n    setNoneUser(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\" className=\"logo\">\r\n            MAKE UP HARA\r\n          </Link>\r\n          <div className=\"menu\">\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/w\">WIKI</Link>\r\n            </Menu>\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/blog\">Blog</Link>\r\n            </Menu>\r\n            <ClickAwayListener onClickAway={handleEtcClose}>\r\n              <Menu>\r\n                <Link\r\n                  to={currentPath}\r\n                  onClick={handleEtcToggle}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </Link>\r\n                <MemoizedEtcDropDown state={etc} />\r\n              </Menu>\r\n            </ClickAwayListener>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-mid\">\r\n          <SearchResponsive>\r\n            <SearchInputPackage type=\"search-input\" currentPath={currentPath} />\r\n          </SearchResponsive>\r\n        </div>\r\n        <div className=\"header-rigit\">\r\n          <SearchResponsive\r\n            style={{\r\n              display: 'inherit',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ClickAwayListener onClickAway={handleSearchClose}>\r\n              <div className=\"search-btn\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleSearchToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"search\" />\r\n                </Link>\r\n                <SearchDropDown state={search} currentPath={currentPath} />\r\n              </div>\r\n            </ClickAwayListener>\r\n          </SearchResponsive>\r\n          {user ? (\r\n            <ClickAwayListener onClickAway={handleUserInfoClose}>\r\n              <div className=\"user-info\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleUserInfoToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"user-circle\" size=\"lg\" />\r\n                </Link>\r\n                <UserDropDown\r\n                  state={userinfo}\r\n                  user={user}\r\n                  onLogout={onLogout}\r\n                  isDarkTheme={isDarkTheme}\r\n                  currentPath={currentPath}\r\n                />\r\n              </div>\r\n            </ClickAwayListener>\r\n          ) : (\r\n            <div className=\"none-user\">\r\n              <ClickAwayListener onClickAway={handleNoneUserClose}>\r\n                <div className=\"\">\r\n                  <Link to={currentPath} onClick={handleNoneUserToggle}>\r\n                    <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n                  </Link>\r\n                  <NoneUserDropDown\r\n                    state={noneuser}\r\n                    isDarkTheme={isDarkTheme}\r\n                  />\r\n                </div>\r\n              </ClickAwayListener>\r\n              <Button className=\"btn-sign-in\" transparent=\"true\" to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../module/redux/user';\r\nimport Header from '../../components/common/Header';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst HeaderContainer = ({ location }) => {\r\n  const { user, isDarkTheme } = useSelector(({ user, theme }) => ({\r\n    user: user.user,\r\n    isDarkTheme: theme.isDarkTheme,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const currentPath = location.pathname + location.search;\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Header\r\n      user={user}\r\n      onLogout={onLogout}\r\n      isDarkTheme={isDarkTheme}\r\n      currentPath={currentPath}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import styled from 'styled-components';\r\n\r\nconst BodyBlock = styled.div`\r\n  position: fixed;\r\n  top: ${props => (props.includeHeader ? '3rem' : 0)};\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: ${({ theme }) => theme.body};\r\n  z-index: -1;\r\n`;\r\n\r\nexport default BodyBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport SubInfo from '../post/common/SubInfo';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst BlogSectionBlock = styled.div`\r\n  h3 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .footer {\r\n    font-family: 'Raleway';\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  & > a {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n        <SubInfo username={publisher.username} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst BlogSection = ({ postList, loading, postError }) => {\r\n  if (postError) {\r\n    return (\r\n      <ErrorBlock>\r\n        <span className=\"error-title\">블로그 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {postError.message}</span>\r\n      </ErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <BlogSectionBlock>\r\n      <h3>최근 등록된 포스트</h3>\r\n      {!loading && postList && (\r\n        <div>\r\n          {postList.map((post) => (\r\n            <PostItem post={post} key={post._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      <span className=\"footer\">\r\n        <Link to=\"/blog\">MORE POST...</Link>\r\n      </span>\r\n    </BlogSectionBlock>\r\n  );\r\n};\r\n\r\nexport default BlogSection;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList } from '../../module/redux/post';\r\nimport BlogSection from '../../components/main/BlogSection';\r\n\r\nconst BlogSectionContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { postList, postError, postLoading } = useSelector(\r\n    ({ post, loading }) => ({\r\n      postList: post.postList,\r\n      postError: post.postListError,\r\n      postLoading: loading['post/GET_LIST'],\r\n    }),\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getList({ block: 5 }));\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <BlogSection\r\n      postLoading={postLoading}\r\n      postList={postList}\r\n      postError={postError}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BlogSectionContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst WikiSectionBlock = styled.div`\r\n  h3 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  .footer {\r\n    font-family: 'Raleway';\r\n  }\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  font-family: 'NanumBarunGothic';\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = ({ document }) => {\r\n  const { title, publishedDate } = document;\r\n  const { name } = title;\r\n  return (\r\n    <DocumentBlock>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\">\r\n        <span>{dayjs(publishedDate).format('YYYY-MM-DD')}</span>\r\n      </div>\r\n    </DocumentBlock>\r\n  );\r\n};\r\n\r\nconst WikiSection = ({ documentList, loading, error }) => {\r\n  if (error) {\r\n    return (\r\n      <ErrorBlock>\r\n        <span className=\"error-title\">WIKI 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {error.message}</span>\r\n      </ErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <WikiSectionBlock>\r\n      <h3>최근 변경된 위키 문서</h3>\r\n      {!loading && documentList && (\r\n        <div>\r\n          {documentList.map((document) => (\r\n            <DocumentItem document={document} key={document._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <span className=\"footer\">\r\n        <Link to=\"/wiki/list\">MORE WIKI...</Link>\r\n      </span>\r\n    </WikiSectionBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSection;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as wikiAPI from '../../lib/api/wiki';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// api - request list\r\nconst [\r\n  GET_REQUEST_LIST,\r\n  GET_REQUEST_LIST_SUCCESS,\r\n  GET_REQUEST_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_REQUEST_LIST');\r\n// edit - set title\r\nconst SET_TITLE = createRequestActionTypes('wiki/SET_TITLE');\r\n// edit - initialize\r\nconst INITIALIZE = 'wiki/INITIALIZE';\r\n// edit - change field\r\nconst CHANGE_FIELD = 'wiki/CHANGE_FIELD';\r\n// edit - write document\r\nconst [\r\n  WRITE_DOCUMENT,\r\n  WRITE_DOCUMENT_SUCCESS,\r\n  WRITE_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/WRITE_DOCUMENT');\r\n// api - read\r\nconst [\r\n  READ_DOCUMENT,\r\n  READ_DOCUMENT_SUCCESS,\r\n  READ_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/READ_DOCUMENT');\r\nconst UNLOAD_DOCUMENT = 'wiki/UNLOAD_DOCUMENT'; // 위키 문서 뷰 언마운트시 문서 정보 제거\r\nconst SET_ORIGINAL_DOCUMENT = 'wiki/SET_ORIGINAL_DOCUMENT'; // 위키 문서 편집 시 에디터에 문서 세팅\r\n// api - list\r\nconst [\r\n  GET_DOCUMENT_LIST,\r\n  GET_DOCUMENT_LIST_SUCCESS,\r\n  GET_DOCUMENT_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_LIST');\r\nconst UNLOAD_LIST = 'wiki/UNLOAD_LIST'; // 위키 리스트 뷰 언마운트시 document list 정보 제거\r\n// api - history list\r\nconst [\r\n  GET_HISTORY_LIST,\r\n  GET_HISTORY_LIST_SUCCESS,\r\n  GET_HISTORY_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_HISTORY_LIST');\r\n// api - search\r\nconst [\r\n  GET_SEARCH_LIST,\r\n  GET_SEARCH_LIST_SUCCESS,\r\n  GET_SEARCH_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_SEARCH_LIST');\r\n// api- search/direct\r\nconst [\r\n  GET_DIRECT_TITLE,\r\n  GET_DIRECT_TITLE_SUCCESS,\r\n  GET_DIRECT_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DIRECT_TITLE');\r\n// api - search/random\r\nconst [\r\n  GET_RANDOM_TITLE,\r\n  GET_RANDOM_TITLE_SUCCESS,\r\n  GET_RANDOM_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_RANDOM_TITLE');\r\n// api - document count\r\nconst [\r\n  GET_DOCUMENT_COUNT,\r\n  GET_DOCUMENT_COUNT_SUCCESS,\r\n  GET_DOCUMENT_COUNT_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_COUNT');\r\n// api = add barcode to document\r\nconst [\r\n  ADD_BARCODE_NUMBER,\r\n  ADD_BARCODE_NUMBER_SUCCESS,\r\n  ADD_BARCODE_NUMBER_FAILURE,\r\n] = createRequestActionTypes('wiki/ADD_BARCODE_NUMBER');\r\n\r\n/* action */\r\nexport const getRequestList = createAction(GET_REQUEST_LIST);\r\nexport const setTitle = createAction(SET_TITLE, (title) => title);\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writeDocument = createAction(WRITE_DOCUMENT, ({ id, body }) => ({\r\n  id,\r\n  body,\r\n}));\r\nexport const readDocument = createAction(READ_DOCUMENT, ({ id, r }) => ({\r\n  id,\r\n  r,\r\n}));\r\nexport const unloadDocument = createAction(UNLOAD_DOCUMENT);\r\nexport const setOriginalDocument = createAction(\r\n  SET_ORIGINAL_DOCUMENT,\r\n  (document) => document,\r\n);\r\nexport const getDocumentList = createAction(\r\n  GET_DOCUMENT_LIST,\r\n  (block) => block,\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\nexport const getHistoryList = createAction(GET_HISTORY_LIST, ({ id }) => ({\r\n  id,\r\n}));\r\nexport const getSearchList = createAction(\r\n  GET_SEARCH_LIST,\r\n  ({ query, oldest, shortest, longest, page, block }) => ({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  }),\r\n);\r\nexport const getDirectTitle = createAction(GET_DIRECT_TITLE, ({ query }) => ({\r\n  query,\r\n}));\r\nexport const getRandomTitle = createAction(GET_RANDOM_TITLE);\r\nexport const getDocumentCount = createAction(\r\n  GET_DOCUMENT_COUNT,\r\n  ({ username }) => ({ username }),\r\n);\r\nexport const addBarcodeNumber = createAction(\r\n  ADD_BARCODE_NUMBER,\r\n  ({ title, code }) => ({ title, code }),\r\n);\r\n\r\n/* redux-saga */\r\nconst getRequestListSaga = createRequestSaga(\r\n  GET_REQUEST_LIST,\r\n  wikiAPI.requestDocument,\r\n);\r\nconst writeDocumentSaga = createRequestSaga(\r\n  WRITE_DOCUMENT,\r\n  wikiAPI.writeDocument,\r\n);\r\nexport const readDocumentSaga = createRequestSaga(\r\n  READ_DOCUMENT,\r\n  wikiAPI.readDocument,\r\n);\r\nexport const getDocumentListSaga = createRequestSaga(\r\n  GET_DOCUMENT_LIST,\r\n  wikiAPI.getDocumentList,\r\n);\r\nexport const getHistoryListSaga = createRequestSaga(\r\n  GET_HISTORY_LIST,\r\n  wikiAPI.getHistoryList,\r\n);\r\nexport const getSearchListSaga = createRequestSaga(\r\n  GET_SEARCH_LIST,\r\n  wikiAPI.getSearchList,\r\n);\r\nexport const getDirectTitleSaga = createRequestSaga(\r\n  GET_DIRECT_TITLE,\r\n  wikiAPI.getDirectTitle,\r\n);\r\nexport const getRandomTitleSaga = createRequestSaga(\r\n  GET_RANDOM_TITLE,\r\n  wikiAPI.getRandomTitle,\r\n);\r\nexport const getDocumentCountSaga = createRequestSaga(\r\n  GET_DOCUMENT_COUNT,\r\n  wikiAPI.getDocumentCount,\r\n);\r\nexport const addBarcodeNumberSaga = createRequestSaga(\r\n  ADD_BARCODE_NUMBER,\r\n  wikiAPI.addBarcodeNumber,\r\n);\r\n\r\nexport function* wikiSaga() {\r\n  yield takeLatest(GET_REQUEST_LIST, getRequestListSaga);\r\n  yield takeLatest(WRITE_DOCUMENT, writeDocumentSaga);\r\n  yield takeLatest(READ_DOCUMENT, readDocumentSaga);\r\n  yield takeLatest(GET_DOCUMENT_LIST, getDocumentListSaga);\r\n  yield takeLatest(GET_HISTORY_LIST, getHistoryListSaga);\r\n  yield takeLatest(GET_SEARCH_LIST, getSearchListSaga);\r\n  yield takeLatest(GET_DIRECT_TITLE, getDirectTitleSaga);\r\n  yield takeLatest(GET_RANDOM_TITLE, getRandomTitleSaga);\r\n  yield takeLatest(GET_DOCUMENT_COUNT, getDocumentCountSaga);\r\n  yield takeLatest(ADD_BARCODE_NUMBER, addBarcodeNumberSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: null,\r\n  titleError: null,\r\n  body: '',\r\n  document: null,\r\n  documentError: null,\r\n  editDocument: null,\r\n  editDocumentError: null,\r\n  requestList: [],\r\n  requestListError: null,\r\n  documentList: null,\r\n  documentListError: null,\r\n  historyList: null,\r\n  historyListError: null,\r\n  query: '',\r\n  searchList: null,\r\n  searchListError: null,\r\n  directName: null,\r\n  directError: null,\r\n  randomTitle: null,\r\n  randomTitleError: null,\r\n  documentCount: 0,\r\n  documentCountError: null,\r\n  addBarcodeNumberResult: null,\r\n  addBarcodeNumberResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst wiki = handleActions(\r\n  {\r\n    [GET_REQUEST_LIST_SUCCESS]: (state, { payload: requestList }) => ({\r\n      ...state,\r\n      requestList,\r\n    }),\r\n    [GET_REQUEST_LIST_FAILURE]: (state, { payload: requestListError }) => ({\r\n      ...state,\r\n      requestListError,\r\n    }),\r\n    [SET_TITLE]: (state, { payload: title }) => ({\r\n      ...state,\r\n      title,\r\n    }),\r\n    [INITIALIZE]: (state) => ({\r\n      ...state,\r\n      title: null,\r\n      titleError: null,\r\n      body: '',\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n      query: '',\r\n      directName: null,\r\n      directError: null,\r\n      randomTitle: null,\r\n      randomTitleError: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키 값을 업데이트\r\n    }),\r\n    [WRITE_DOCUMENT_SUCCESS]: (state, { payload: editDocument }) => ({\r\n      ...state,\r\n      editDocument,\r\n    }),\r\n    [WRITE_DOCUMENT_FAILURE]: (state, { payload: editDocumentError }) => ({\r\n      ...state,\r\n      editDocumentError,\r\n    }),\r\n    [READ_DOCUMENT_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      document,\r\n    }),\r\n    [READ_DOCUMENT_FAILURE]: (state, { payload: documentError }) => ({\r\n      ...state,\r\n      documentError,\r\n    }),\r\n    [UNLOAD_DOCUMENT]: (state) => ({\r\n      ...state,\r\n      document: null,\r\n      documentError: null,\r\n    }),\r\n    [SET_ORIGINAL_DOCUMENT]: (state, { payload: document }) => ({\r\n      ...state,\r\n      title: document.title,\r\n      body: document.body,\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n    }),\r\n    [GET_DOCUMENT_LIST_SUCCESS]: (state, { payload: documentList }) => ({\r\n      ...state,\r\n      documentList,\r\n    }),\r\n    [GET_DOCUMENT_LIST_FAILURE]: (state, { payload: documentListError }) => ({\r\n      ...state,\r\n      documentListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      documentList: null,\r\n      documentListError: null,\r\n    }),\r\n    [GET_HISTORY_LIST_SUCCESS]: (state, { payload: historyList }) => ({\r\n      ...state,\r\n      historyList,\r\n    }),\r\n    [GET_HISTORY_LIST_FAILURE]: (state, { payload: historyListError }) => ({\r\n      ...state,\r\n      historyListError,\r\n    }),\r\n    [GET_SEARCH_LIST_SUCCESS]: (state, { payload: searchList }) => ({\r\n      ...state,\r\n      searchList,\r\n    }),\r\n    [GET_SEARCH_LIST_FAILURE]: (state, { payload: searchListError }) => ({\r\n      ...state,\r\n      searchListError,\r\n    }),\r\n    [GET_DIRECT_TITLE_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      directName: document.title.name,\r\n    }),\r\n    [GET_DIRECT_TITLE_FAILURE]: (state, { payload: directError }) => ({\r\n      ...state,\r\n      directError,\r\n    }),\r\n    [GET_RANDOM_TITLE_SUCCESS]: (state, { payload: title }) => ({\r\n      ...state,\r\n      randomTitle: title.name,\r\n    }),\r\n    [GET_RANDOM_TITLE_FAILURE]: (state, { payload: randomTitleError }) => ({\r\n      ...state,\r\n      randomTitleError,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_SUCCESS]: (state, { payload: documentCount }) => ({\r\n      ...state,\r\n      documentCount,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_FAILURE]: (state, { payload: documentCountError }) => ({\r\n      ...state,\r\n      documentCountError,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_SUCCESS]: (\r\n      state,\r\n      { payload: addBarcodeNumberResult },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResult,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_FAILURE]: (\r\n      state,\r\n      { payload: addBarcodeNumberResultError },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default wiki;\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const requestDocument = () => client.get('/api/wiki/request');\r\n\r\nexport const writeDocument = ({ id, body }) =>\r\n  client.post(`/api/wiki/write/${id}`, { body });\r\n\r\nexport const readDocument = ({ id, r }) => {\r\n  const queryString = qs.stringify({ r });\r\n  return client.get(`/api/wiki/${id}?${queryString}`);\r\n};\r\n\r\nexport const getDocumentList = (block) => {\r\n  const queryString = qs.stringify({ block });\r\n  return client.get(`/api/wiki/list?${queryString}`);\r\n};\r\n\r\nexport const getHistoryList = ({ id }) => client.get(`/api/wiki/${id}/history`);\r\n\r\nexport const getSearchList = ({\r\n  query,\r\n  oldest,\r\n  shortest,\r\n  longest,\r\n  page,\r\n  block,\r\n}) => {\r\n  const queryString = qs.stringify({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  });\r\n  return client.get(`/api/wiki/search?${queryString}`);\r\n};\r\n\r\nexport const getDirectTitle = ({ query }) => {\r\n  const queryString = qs.stringify({ query });\r\n  return client.get(`/api/wiki/search/direct?${queryString}`);\r\n};\r\n\r\nexport const getRandomTitle = () => client.get('/api/wiki/search/random');\r\n\r\nexport const getDocumentCount = ({ username }) =>\r\n  client.post('/api/wiki/doc/count', { username });\r\n\r\nexport const addBarcodeNumber = ({ title, code }) =>\r\n  client.patch(`/api/wiki/${title}/barcode`, { code });\r\n","import React from 'react';\r\nimport WikiSection from '../../components/main/WikiSection';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getDocumentList, unloadList } from '../../module/redux/wiki';\r\n\r\nconst WikiSectionContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { documentList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    documentList: wiki.documentList,\r\n    error: wiki.documentListError,\r\n    loading: loading['wiki/GET_DOCUMENT_LIST'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(getDocumentList({ block: 5 }));\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <WikiSection documentList={documentList} error={error} loading={loading} />\r\n  );\r\n};\r\n\r\nexport default WikiSectionContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BlogSectionContainer from '../../containers/main/BlogSectionContainer';\r\nimport WikiSectionContainer from '../../containers/main/WikiSectionContainer';\r\n\r\nconst MainBlock = styled.div`\r\n  margin: 2rem;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <MainBlock>\r\n        <BlogSectionContainer />\r\n        <WikiSectionContainer />\r\n      </MainBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from '../../components/main/Main';\r\n\r\nconst MainContainer = () => {\r\n  return <Main />;\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport MainContainer from '../../containers/main/MainContainer';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <MainContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import palette from './open-color';\r\n\r\nexport const lightTheme = {\r\n  /* Common */\r\n  body: '#fff',\r\n  text: palette.gray[9],\r\n  hoverText: palette.gray[6],\r\n  categoryBorder: palette.cyan[7],\r\n  themeColorBody: palette.cyan[7],\r\n  themeColorHoverBody: palette.cyan[5],\r\n  progressBar: palette.cyan[3],\r\n  progressBody: palette.cyan[1],\r\n  sliderTrack: palette.cyan[3],\r\n  sliderRail: palette.cyan[1],\r\n  /* Header */\r\n  hoverList: palette.gray[2],\r\n  inputBody: palette.gray[1],\r\n  placeholder: palette.gray[7],\r\n  btnSearchBody: palette.gray[1],\r\n  dropdownBody: '#fff',\r\n  /* AuthForm */\r\n  loginBody: palette.gray[2],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[7],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: palette.gray[7],\r\n  darkThemeSwitchTrack: palette.gray[5],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[4],\r\n  editorText: palette.gray[8],\r\n  editorTagComponentBorder: palette.gray[4],\r\n  editorTagBoxBorder: palette.gray[9],\r\n  editorTagTitle: palette.gray[8],\r\n  editorTagButtonBody: palette.gray[8],\r\n  editorHoverTagButtonBody: palette.gray[6],\r\n  editorTagButtonText: '#fff',\r\n  editorTagText: palette.gray[6],\r\n  /* Footer */\r\n  footerText: palette.gray[8],\r\n  /* Button */\r\n  btnBody: palette.gray[9],\r\n  btnHoverBody: palette.gray[7],\r\n  btnText: '#fff',\r\n  btnDisableBody: palette.cyan[2],\r\n  btnDisableColor: palette.gray[9],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[4],\r\n  postSubInfoText: palette.gray[6],\r\n  postSubInfoHoverText: palette.gray[7],\r\n  postTagText: palette.cyan[7],\r\n  postTagHoverText: palette.cyan[5],\r\n  postActionButtonText: palette.gray[7],\r\n  postActionButtonHoverText: palette.gray[6],\r\n  postActionButtonBody: palette.gray[2],\r\n  postActionButtonHoverBody: palette.gray[1],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[5],\r\n  wikiActionButtonBody: palette.gray[2],\r\n  wikiActionButtonHoverBody: palette.gray[1],\r\n  wikiActionButtonText: palette.gray[7],\r\n  wikitActionButtonHoverText: palette.gray[6],\r\n  wikiBorder: palette.gray[4],\r\n  wikiHistoryLinkText: palette.cyan[7],\r\n  wikiHistoryLinkHoverText: palette.cyan[5],\r\n  /* Error */\r\n  errorText: palette.red[5],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.cyan[0],\r\n  profileInputValid: palette.cyan[2],\r\n  profileInputInValid: palette.red[3],\r\n};\r\n\r\nexport const darkTheme = {\r\n  /* Common */\r\n  body: palette.gray[9],\r\n  text: '#fff',\r\n  hoverText: palette.gray[3],\r\n  categoryBorder: palette.violet[5],\r\n  themeColorBody: palette.violet[5],\r\n  themeColorHoverBody: palette.violet[3],\r\n  progressBar: palette.violet[3],\r\n  progressBody: palette.violet[1],\r\n  sliderTrack: palette.violet[3],\r\n  sliderRail: palette.violet[1],\r\n  /* Header */\r\n  hoverList: palette.gray[7],\r\n  inputBody: palette.gray[7],\r\n  placeholder: palette.gray[2],\r\n  btnSearchBody: palette.gray[8],\r\n  dropdownBody: palette.gray[9],\r\n  /* AuthForm */\r\n  loginBody: palette.gray[7],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[3],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: '#fff',\r\n  darkThemeSwitchTrack: palette.gray[2],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[5],\r\n  editorText: palette.gray[5],\r\n  editorTagComponentBorder: palette.gray[5],\r\n  editorTagBoxBorder: palette.gray[5],\r\n  editorTagTitle: palette.gray[6],\r\n  editorTagButtonBody: palette.gray[2],\r\n  editorHoverTagButtonBody: palette.gray[4],\r\n  editorTagButtonText: palette.gray[9],\r\n  editorTagText: palette.gray[4],\r\n  /* Footer */\r\n  footerText: palette.gray[2],\r\n  /* Button */\r\n  btnBody: '#fff',\r\n  btnHoverBody: palette.gray[4],\r\n  btnText: palette.gray[9],\r\n  btnDisableBody: palette.violet[3],\r\n  btnDisableColor: palette.gray[9],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[5],\r\n  postSubInfoText: palette.gray[5],\r\n  postSubInfoHoverText: palette.gray[4],\r\n  postTagText: palette.violet[7],\r\n  postTagHoverText: palette.violet[5],\r\n  postActionButtonText: palette.gray[5],\r\n  postActionButtonHoverText: palette.gray[3],\r\n  postActionButtonBody: palette.gray[8],\r\n  postActionButtonHoverBody: palette.gray[7],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[7],\r\n  wikiActionButtonBody: palette.gray[8],\r\n  wikiActionButtonHoverBody: palette.gray[7],\r\n  wikiActionButtonText: palette.gray[5],\r\n  wikitActionButtonHoverText: palette.gray[3],\r\n  wikiBorder: palette.gray[5],\r\n  wikiHistoryLinkText: palette.violet[7],\r\n  wikiHistoryLinkHoverText: palette.violet[5],\r\n  /* Error */\r\n  errorText: palette.red[9],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.violet[5],\r\n  profileInputValid: palette.violet[3],\r\n  profileInputInValid: palette.red[3],\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: ${({ theme }) => theme.loginBody};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    text-align: center;\r\n    padding-bottom: 2rem;\r\n    font-size: 1.25rem;\r\n    letter-spacing: 1px;\r\n  }\r\n  .logo-area > a {\r\n      color: ${({theme}) => theme.text}\r\n  }\r\n  .logo-area > a:hover {\r\n      color: ${({theme}) => theme.hoverText}\r\n  }\r\n  box-shadow: 0 0 8px\r\n    ${({ theme }) =>\r\n      theme.body === '#fff'\r\n        ? 'rgba(0, 0, 0, 0.25)'\r\n        : 'rgba(0, 0, 0, 0.5)'};\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: ${({ theme }) => theme.body};\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <ContentBox>\r\n        <div className=\"logo-area\">\r\n          <Link to=\"/\">MAKE UP HARA</Link>\r\n        </div>\r\n        {children}\r\n      </ContentBox>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React, { useEffect, useRef, useCallback } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Button, { buttonStyle } from '../common/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport palette from '../../lib/styles/open-color';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.text};\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.loginInputBorder};\r\n  }\r\n  .social-login {\r\n    button + a {\r\n      margin-top: 0.5rem;\r\n    }\r\n    a + button {\r\n      margin-top: 0.5rem;\r\n    }\r\n  }\r\n  input.possible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  input.impossible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    color: ${({ theme }) => theme.errorText};\r\n    font-size: 0.75rem;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 2px solid ${({ theme }) => theme.loginInputBorder};\r\n  padding-bottom: 0.5rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    border-bottom: 2px solid ${({ theme }) => theme.loginInputBorderFocus};\r\n    -webkit-transition: all 0.3s ease;\r\n    transition: all 0.3s ease;\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 1rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      text-decoration: underline !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst GoogleLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  border-radius: 0.375rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst socialBtnStyle = css`\r\n  border: none;\r\n  padding: 0;\r\n  display: block;\r\n  border-radius: 0.5rem;\r\n  img {\r\n    width: 100%;\r\n    display: flex;\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NaverLoginButton = styled.a`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst KakaoLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  signinGoogle: '구글로 로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${palette.red[9]};\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  error,\r\n  onSocialLogin,\r\n  validUsername,\r\n  validName,\r\n}) => {\r\n  const text = textMap[type];\r\n\r\n  // Login with Google\r\n  const googleLoginBtn = useRef(null);\r\n  const auth2 = useRef(null);\r\n\r\n  // Config Google Login API\r\n  const loadGoogleLoginApi = useCallback(() => {\r\n    // 로그인 버튼 이벤트 주입\r\n    const prepareLoginButton = () => {\r\n      auth2.current.attachClickHandler(\r\n        googleLoginBtn.current,\r\n        {},\r\n        (googleUser) => {\r\n          // const profile = googleUser.getBasicProfile();\r\n          // console.log('Token || ' + googleUser.getAuthResponse().id_token);\r\n          // console.log('ID: ' + profile.getId());\r\n          // console.log('Name: ' + profile.getName());\r\n          // console.log('Image URL: ' + profile.getImageUrl());\r\n          // console.log('Email: ' + profile.getEmail());\r\n\r\n          const id_token = googleUser.getAuthResponse().id_token;\r\n          onSocialLogin({ id_token });\r\n        },\r\n        (error) => {\r\n          // console.log(JSON.stringify(error, undefined, 2));\r\n        },\r\n      );\r\n    };\r\n\r\n    window['googleSDKLoaded'] = () => {\r\n      window['gapi'].load('auth2', () => {\r\n        auth2.current = window['gapi'].auth2.init({\r\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          cookiepolicy: 'single_host_origin',\r\n          scope: 'profile email',\r\n        });\r\n        prepareLoginButton();\r\n      });\r\n    };\r\n  }, [onSocialLogin]);\r\n\r\n  const onNaverLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_NAVER_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_NAVER_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://nid.naver.com/oauth2.0/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  const onKakaoLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_KAKAO_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://kauth.kakao.com/oauth/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // Load Script\r\n  const loadScript = useCallback((document, script, id, srcValue) => {\r\n    const referenceNode = document.getElementsByTagName(script)[0];\r\n    if (document.getElementById(id)) {\r\n      return;\r\n    }\r\n    const googlejssdkNode = document.createElement(script);\r\n    googlejssdkNode.id = id;\r\n    googlejssdkNode.src = srcValue;\r\n    referenceNode.parentNode.insertBefore(googlejssdkNode, referenceNode);\r\n  }, []);\r\n\r\n  const removeApiScript = useCallback(() => {\r\n    const removeTag = (tagName, targetId) => {\r\n      const targetNode = document.getElementsByTagName(tagName);\r\n      [...targetNode].map(\r\n        (node) =>\r\n          node.src.indexOf(targetId) >= 0 && node.parentNode.removeChild(node),\r\n      );\r\n    };\r\n\r\n    removeTag('script', 'apis.google.com');\r\n\r\n    const removeJssdk = (id) => {\r\n      const sdkNode = document.getElementById(id);\r\n      if (sdkNode) {\r\n        sdkNode.parentNode.removeChild(sdkNode);\r\n      }\r\n    };\r\n\r\n    removeJssdk('google-jssdk');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadScript(\r\n      document,\r\n      'script',\r\n      'google-jssdk',\r\n      'https://apis.google.com/js/platform.js?onload=googleSDKLoaded',\r\n    );\r\n    loadGoogleLoginApi();\r\n\r\n    return () => {\r\n      removeApiScript();\r\n    };\r\n  }, [loadScript, removeApiScript, loadGoogleLoginApi]);\r\n  return (\r\n    <AuthFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          className={\r\n            type === 'register' &&\r\n            (validUsername.result === true\r\n              ? 'possible'\r\n              : validUsername.message !== '' && 'impossible')\r\n          }\r\n          name=\"username\"\r\n          placeholder=\"계정 이름\"\r\n          value={form.username}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' &&\r\n          validUsername.message &&\r\n          validUsername.message !== '' && (\r\n            <span className=\"invalid-message\">{validUsername.message}</span>\r\n          )}\r\n        <StyledInput\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          className={\r\n            type === 'register' &&\r\n            (form.password.length >= 8\r\n              ? 'possible'\r\n              : form.password !== '' && 'impossible')\r\n          }\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={form.password}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' &&\r\n          form.password.length < 8 &&\r\n          form.password.length > 0 && (\r\n            <span className=\"invalid-message\">8자 이상 입력해야 합니다.</span>\r\n          )}\r\n        {type === 'register' && (\r\n          <>\r\n            <StyledInput\r\n              type=\"password\"\r\n              autoComplete=\"new-password\"\r\n              className={\r\n                form.passwordConfirm.length >= 8 &&\r\n                form.passwordConfirm === form.password\r\n                  ? 'possible'\r\n                  : form.passwordConfirm !== '' && 'impossible'\r\n              }\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"비밀번호 확인\"\r\n              value={form.passwordConfirm}\r\n              onChange={onChange}\r\n            />\r\n            {form.passwordConfirm.length >= 8 &&\r\n              form.passwordConfirm !== form.password && (\r\n                <span className=\"invalid-message\">\r\n                  비밀번호가 일치하지 않습니다.\r\n                </span>\r\n              )}\r\n            <StyledInput\r\n              type=\"text\"\r\n              className={\r\n                type === 'register' &&\r\n                (validName.result === true\r\n                  ? 'possible'\r\n                  : validName.message !== '' && 'impossible')\r\n              }\r\n              name=\"name\"\r\n              placeholder=\"활동명\"\r\n              value={form.name}\r\n              onChange={onChange}\r\n            />\r\n            {type === 'register' &&\r\n              validName.message &&\r\n              validName.message !== '' && (\r\n                <span className=\"invalid-message\">{validName.message}</span>\r\n              )}\r\n          </>\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonWithMarginTop cyan fullWidth>\r\n          {text}\r\n        </ButtonWithMarginTop>\r\n      </form>\r\n      {type === 'login' && (\r\n        <div className=\"social-login\">\r\n          <hr />\r\n          <GoogleLoginButton fullWidth indigo ref={googleLoginBtn}>\r\n            <FontAwesomeIcon icon={faGoogle} />\r\n            {' ' + textMap['signinGoogle']}\r\n            <span> </span>\r\n          </GoogleLoginButton>\r\n          <NaverLoginButton transparent onClick={() => onNaverLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/naver_login_btn.png'}\r\n              alt=\"naver-login-btn\"\r\n            />\r\n          </NaverLoginButton>\r\n          <KakaoLoginButton transparent onClick={() => onKakaoLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/kakao_login_btn.png'}\r\n              alt=\"kakao-login-btn\"\r\n            />\r\n          </KakaoLoginButton>\r\n          <hr />\r\n        </div>\r\n      )}\r\n\r\n      <Footer>\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, debounce } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n  'auth/REGISTER',\r\n);\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n  'auth/LOGIN',\r\n);\r\nconst [\r\n  LOGIN_WITH_GOOGLE,\r\n  LOGIN_WITH_GOOGLE_SUCCESS,\r\n  LOGIN_WITH_GOOGLE_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_GOOGLE');\r\nconst [\r\n  LOGIN_WITH_NAVER,\r\n  LOGIN_WITH_NAVER_SUCCESS,\r\n  LOGIN_WITH_NAVER_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_NAVER');\r\nconst [\r\n  LOGIN_WITH_KAKAO,\r\n  LOGIN_WITH_KAKAO_SUCCESS,\r\n  LOGIN_WITH_KAKAO_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_KAKAO');\r\n// api - check username\r\nconst [\r\n  CHECK_EXIST_USERNAME,\r\n  CHECK_EXIST_USERNAME_SUCCESS,\r\n  CHECK_EXIST_USERNAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_USERNAME');\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_NAME');\r\n\r\n/* action */\r\nexport const changeFieid = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // register, login\r\n    key, // username, password, passwordConfirm\r\n    value, // 변경 하려는 값\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\nexport const register = createAction(\r\n  REGISTER,\r\n  ({ username, password, name }) => ({\r\n    username,\r\n    password,\r\n    name,\r\n  }),\r\n);\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const loginWithGoogle = createAction(\r\n  LOGIN_WITH_GOOGLE,\r\n  ({ id_token }) => ({ id_token }),\r\n);\r\nexport const loginWithNaver = createAction(\r\n  LOGIN_WITH_NAVER,\r\n  ({ client_id, client_secret, code, state }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  }),\r\n);\r\nexport const loginWithKakao = createAction(\r\n  LOGIN_WITH_KAKAO,\r\n  ({ client_id, client_secret, code, redirect_uri }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  }),\r\n);\r\nexport const checkExistUsername = createAction(\r\n  CHECK_EXIST_USERNAME,\r\n  (username) => username,\r\n);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\n\r\n/* redux-saga */\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nconst loginWithGoogleSaga = createRequestSaga(\r\n  LOGIN_WITH_GOOGLE,\r\n  authAPI.loginWithGoogle,\r\n);\r\nconst loginWithNaverSaga = createRequestSaga(\r\n  LOGIN_WITH_NAVER,\r\n  authAPI.loginWithNaver,\r\n);\r\nconst loginWithKakaoSaga = createRequestSaga(\r\n  LOGIN_WITH_KAKAO,\r\n  authAPI.loginWithKakao,\r\n);\r\nconst checkExistUsernameSaga = createRequestSaga(\r\n  CHECK_EXIST_USERNAME,\r\n  userAPI.checkExistUsername,\r\n);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(LOGIN_WITH_GOOGLE, loginWithGoogleSaga);\r\n  yield takeLatest(LOGIN_WITH_NAVER, loginWithNaverSaga);\r\n  yield takeLatest(LOGIN_WITH_KAKAO, loginWithKakaoSaga);\r\n  yield debounce(500, CHECK_EXIST_USERNAME, checkExistUsernameSaga);\r\n  yield debounce(500, CHECK_EXIST_NAME, checkExistNameSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    name: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  checkExistUsernameResult: null,\r\n  checkExistUsernameResultError: null,\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  auth: null,\r\n  authError: null,\r\n  registerResult: null,\r\n  registerResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n      registerResult: null,\r\n      registerResultError: null, // 폼 전환 시 회원인증 에러 초기화\r\n    }),\r\n    [REGISTER_SUCCESS]: (state, { payload: registerResult }) => ({\r\n      ...state,\r\n      registerResultError: null,\r\n      registerResult,\r\n    }),\r\n    [REGISTER_FAILURE]: (state, { payload: registerResultError }) => ({\r\n      ...state,\r\n      registerResultError,\r\n    }),\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_NAVER_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_NAVER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_SUCCESS]: (\r\n      state,\r\n      { payload: checkExistUsernameResult },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult,\r\n      checkExistUsernameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistUsernameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError,\r\n    }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  login,\r\n  loginWithGoogle,\r\n  initializeForm,\r\n} from '../../module/redux/auth';\r\nimport { check } from '../../module/redux/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(changeFieid({ form: 'login', key: name, value }));\r\n    setError(null);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    if ([username, password].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  const onSocialLogin = ({ id_token }) => {\r\n    dispatch(loginWithGoogle({ id_token }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      if (authError.response.status === 401) {\r\n        setError('계정 또는 비밀번호가 일치하지 않습니다.');\r\n        return;\r\n      } else {\r\n        setError('로그인 실패: ' + authError);\r\n        return;\r\n      }\r\n    }\r\n    if (auth) {\r\n      dispatch(check());\r\n      dispatch(initializeForm());\r\n    }\r\n    return () => {\r\n      dispatch(initializeForm());\r\n    };\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/');\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n      onSocialLogin={onSocialLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport LoginForm from '../../containers/auth/LoginForm';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>로그인 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  register,\r\n  initializeForm,\r\n  checkExistUsername,\r\n  checkExistName,\r\n} from '../../module/redux/auth';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    form,\r\n    isNotExistUsername,\r\n    isNotExistUsernameError,\r\n    isNotExistName,\r\n    isNotExistNameError,\r\n    registerResult,\r\n    registerResultError,\r\n  } = useSelector(({ auth }) => ({\r\n    form: auth.register,\r\n    isNotExistUsername: auth.checkExistUsernameResult,\r\n    isNotExistUsernameError: auth.checkExistUsernameResultError,\r\n    isNotExistName: auth.checkExistNameResult,\r\n    isNotExistNameError: auth.checkExistNameResultError,\r\n    registerResult: auth.registerResult,\r\n    registerResultError: auth.registerResultError,\r\n  }));\r\n\r\n  const [validUsername, setValidUsername] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n  const [validName, setValidName] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(changeFieid({ form: 'register', key: name, value }));\r\n    setError(null);\r\n    if (name === 'username') {\r\n      setValidUsername({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    } else if (name === 'name') {\r\n      setValidName({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password, passwordConfirm, name } = form;\r\n    // 하나라도 비어 있다면\r\n    if ([username, password, passwordConfirm].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    // 비밀번호가 일치하지 않는다면\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      dispatch(changeFieid({ form: 'register', key: 'password', value: '' }));\r\n      dispatch(\r\n        changeFieid({ form: 'register', key: 'passwordConfirm', value: '' }),\r\n      );\r\n      return;\r\n    }\r\n    dispatch(register({ username, password, name }));\r\n  };\r\n\r\n  const isLoading = useRef(true);\r\n  // 컴포넌트가 처음 렌더링 될 때  form을 초기화함\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n    isLoading.current = false;\r\n  }, [dispatch]);\r\n\r\n  // 비동기 계정명 중복 체크\r\n  useEffect(() => {\r\n    if (isLoading.current) return;\r\n    if (form.username !== '') {\r\n      dispatch(checkExistUsername({ username: form.username }));\r\n    }\r\n  }, [isLoading, dispatch, form.username]);\r\n\r\n  // 비동기 이름 중복 체크\r\n  useEffect(() => {\r\n    if (isLoading.current) return;\r\n    const { username, name } = form;\r\n    if (name === '') return;\r\n    if (\r\n      !isNotExistUsername ||\r\n      (isNotExistUsername && !isNotExistUsername.result)\r\n    ) {\r\n      setValidName({\r\n        result: false,\r\n        message: '계정 이름이 유효하지 않습니다.',\r\n      });\r\n      return;\r\n    } else {\r\n      dispatch(checkExistName({ username, name }));\r\n    }\r\n  }, [isLoading, dispatch, form, isNotExistUsername]);\r\n\r\n  // 계정명 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistUsernameError) {\r\n      setValidUsername({\r\n        result: false,\r\n        message: '인증 서버 연결에 실패했습니다.',\r\n      });\r\n    } else if (!isNotExistUsername) return;\r\n    else if (isNotExistUsername.result) {\r\n      setValidUsername({ result: true, message: '' });\r\n    } else {\r\n      setValidUsername({\r\n        result: false,\r\n        message: isNotExistUsername ? isNotExistUsername.message : '',\r\n      });\r\n    }\r\n  }, [isNotExistUsername, isNotExistUsernameError]);\r\n\r\n  // 이름 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistNameError) {\r\n      setValidName({\r\n        result: false,\r\n        message: '인증 서버 연결에 실패했습니다.',\r\n      });\r\n    } else if (!isNotExistName) return;\r\n    else if (isNotExistName.result) {\r\n      setValidName({ result: true, message: '' });\r\n    } else {\r\n      setValidName({\r\n        result: false,\r\n        message: isNotExistName ? isNotExistName.message : '',\r\n      });\r\n    }\r\n  }, [isNotExistName, isNotExistNameError]);\r\n  // 회원가입 성공/실패 처리\r\n  useEffect(() => {\r\n    if (registerResultError) {\r\n      // 계정명이 이미 존재할 때\r\n      if (registerResultError.response.status === 409) {\r\n        setError('이미 존재하는 계정입니다.');\r\n        return;\r\n      }\r\n      // 기타 이유\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n    if (registerResult) {\r\n      history.replace('/login');\r\n    }\r\n  }, [registerResult, registerResultError, dispatch, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      validUsername={validUsername}\r\n      validName={validName}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport RegisterForm from '../../containers/auth/RegisterForm';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>회원가입 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EditorFooterBlock = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 2rem;\r\n  width: inherit;\r\n  padding-bottom: 1.25rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: ${({ theme }) => theme.body};\r\n  font-family: 'Raleway';\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n\r\n  .title > a {\r\n    color: ${({ theme }) => theme.footerText};\r\n  }\r\n  .title > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    -webkit-transition: all 0.5s ease;\r\n    transition: all 0.5s ease;\r\n  }\r\n  .editor-name {\r\n    color: ${({ theme }) => theme.footerText};\r\n  }\r\n  .editor-name > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    -webkit-transition: all 0.5s ease;\r\n    transition: all 0.5s ease;\r\n  }\r\n`;\r\n\r\nconst EditorFooter = ({ type = 'blog' }) => {\r\n  const editorName = type === 'blog' ? 'BLOG' : 'WIKI';\r\n  const editorHref = type === 'blog' ? '/blog' : '/wiki';\r\n  return (\r\n    <EditorFooterBlock>\r\n      <div className=\"title\">\r\n        <Link to=\"/\">MAKE UP HARA</Link>\r\n      </div>\r\n      <div className=\"editor-name\">\r\n        <Link to={editorHref}>{editorName}</Link>\r\n        <span>&nbsp;EDITOR</span>\r\n      </div>\r\n    </EditorFooterBlock>\r\n  );\r\n};\r\n\r\nexport default EditorFooter;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../../common/Responsive';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding: 5rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 2rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${({ theme }) => theme.editorTitleBorder};\r\n  background: ${({ theme }) => theme.body};\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    color: ${({ theme }) => theme.editorText};\r\n    left: 0;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ title, body, onChangeField }) => {\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '포스트 작성...',\r\n      modules: {\r\n        imageResize: {\r\n          modules: ['Resize', 'DisplaySize'],\r\n        },\r\n        // 참고: https://quilljs.com/docs/modules/toolbar/\r\n        toolbar: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ indent: '-1' }, { indent: '+1' }],\r\n          [{ align: [] }],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          ['video'],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n          ['clean'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  /* useRef를 사용하여 에디터 내 편집할 데이터 삽입 */\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  const onChangeTitle = (e) => {\r\n    onChangeField({ key: 'title', value: e.target.value });\r\n  };\r\n  return (\r\n    <EditorBlock>\r\n      <TitleInput\r\n        placeholder=\"포스트 제목\"\r\n        value={title}\r\n        onChange={onChangeTitle}\r\n      />\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initialize } from '../../../module/redux/post';\r\nimport { useEffect } from 'react';\r\nimport Editor from '../../../components/post/write/Editor';\r\n\r\nconst EditorContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body } = useSelector(({ post }) => ({\r\n    title: post.title,\r\n    body: post.body,\r\n  }));\r\n  // 액션함수를 토대로 이벤트 정의\r\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [\r\n    dispatch,\r\n  ]);\r\n  // 언마운트될 때 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default EditorContainer;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid ${({ theme }) => theme.editorTagComponentBorder};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${({ theme }) => theme.editorTagTitle};\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${({ theme }) => theme.editorTagBoxBorder};\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n    min-width: 0;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    padding: 0 1rem;\r\n    background: ${({ theme }) => theme.editorTagButtonBody};\r\n    color: ${({ theme }) => theme.editorTagButtonText};\r\n    &:hover {\r\n      background: ${({ theme }) => theme.editorHoverTagButtonBody};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin-right: 0.5rem;\r\n  color: ${({ theme }) => theme.editorTagText};\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n  <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n));\r\n\r\nconst TagList = React.memo(({ tags, onRemove }) => (\r\n  <TagListBlock>\r\n    {tags.map(tag => (\r\n      <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n    ))}\r\n  </TagListBlock>\r\n));\r\n\r\nconst TagBox = ({ tags, onChangeTags }) => {\r\n  const [input, setInput] = useState('');\r\n  const [localTags, setLocalTags] = useState([]);\r\n\r\n  const insertTag = useCallback(\r\n    tag => {\r\n      if (!tag) return;\r\n      if (localTags.includes(tag)) return;\r\n      const nextTags = [...localTags, tag];\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    tag => {\r\n      const nextTags = localTags.filter(t => t !== tag);\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\n\r\n  const onChange = useCallback(e => {\r\n    setInput(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      insertTag(input.trim());\r\n      setInput('');\r\n    },\r\n    [input, insertTag],\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLocalTags(tags);\r\n  }, [tags]);\r\n\r\n  return (\r\n    <TagBoxBlock>\r\n      <h4>태그</h4>\r\n      <TagForm onSubmit={onSubmit}>\r\n        <input placeholder=\"태그 입력...\" onChange={onChange} value={input} />\r\n        <button type=\"submit\">추가</button>\r\n      </TagForm>\r\n      <TagList tags={localTags} onRemove={onRemove} />\r\n    </TagBoxBlock>\r\n  );\r\n};\r\n\r\nexport default TagBox;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField } from '../../../module/redux/post';\r\nimport TagBox from '../../../components/post/write/TagBox';\r\n\r\nconst TagBoxContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const tags = useSelector(state => state.post.tags);\r\n\r\n  // 이벤트 정의\r\n  const onChangeTags = nextTags => {\r\n    dispatch(changeField({ key: 'tags', value: nextTags }));\r\n  };\r\n\r\n  return <TagBox onChangeTags={onChangeTags} tags={tags} />;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\n\r\nconst WriteActionButtonsBlock = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 4rem;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n`;\r\n\r\nconst WriteActionButtons = ({ type = 'blog', isEdit, onClick, onCancel }) => {\r\n  const editorName = type === 'blog' ? '포스트' : '위키';\r\n  return (\r\n    <WriteActionButtonsBlock>\r\n      <StyledButton cyan onClick={onClick}>\r\n        {editorName} {isEdit ? '수정' : '등록'}\r\n      </StyledButton>\r\n      <StyledButton red onClick={onCancel}>\r\n        취소\r\n      </StyledButton>\r\n    </WriteActionButtonsBlock>\r\n  );\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { writePost, updatePost } from '../../../module/redux/post';\r\nimport WriteActionButtons from '../../../components/common/editor/WriteActionButtons';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    title,\r\n    body,\r\n    tags,\r\n    editPost,\r\n    editPostError,\r\n    targetPostId,\r\n  } = useSelector(({ post }) => ({\r\n    title: post.title,\r\n    body: post.body,\r\n    tags: post.tags,\r\n    editPost: post.editPost,\r\n    editPostError: post.editPostError,\r\n    targetPostId: post.targetPostId,\r\n  }));\r\n  // 이벤트 정의\r\n  // 포스트 등록\r\n  const onPublish = () => {\r\n    if (targetPostId) {\r\n      dispatch(updatePost({ id: targetPostId, title, body, tags }));\r\n    } else {\r\n      dispatch(writePost({ title, body, tags }));\r\n    }\r\n  };\r\n  // 취소\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n  // 처리 후 작업\r\n  useEffect(() => {\r\n    if (editPost) {\r\n      const { _id, publisher } = editPost;\r\n      history.push(`/blog/@${publisher.username}/${_id}`);\r\n    }\r\n    if (editPostError) {\r\n      // TODO: Failure Write Post\r\n    }\r\n  }, [history, editPost, editPostError]);\r\n\r\n  return (\r\n    <WriteActionButtons\r\n      onClick={onPublish}\r\n      onCancel={onCancel}\r\n      isEdit={!!targetPostId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from 'react';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport EditorFooter from '../../components/common/editor/EditorFooter';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport EditorContainer from '../../containers/post/write/EditorContainer';\r\nimport TagBoxContainer from '../../containers/post/write/TagBoxContainer';\r\nimport WriteActionButtonsContainer from '../../containers/post/write/WriteActionButtonsContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PostWritePage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>POST 작성 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <TagBoxContainer />\r\n      <WriteActionButtonsContainer />\r\n      <EditorFooter />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(PostWritePage);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport SubInfo from './common/SubInfo';\r\nimport Tags from './common/Tags';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst PostViewerErrorBlock = styled(ErrorBlock)`\r\n  margin: 3rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 2rem;\r\n  h1 {\r\n    font-size: 1.5rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 570px;\r\n  }\r\n  .ql-align-left {\r\n    text-align: left;\r\n  }\r\n  .ql-align-center {\r\n    text-align: center;\r\n  }\r\n  .ql-align-right {\r\n    text-align: right;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    .ql-video {\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostViewer = ({ post, loading, error, actionButtons }) => {\r\n  // 에러 처리\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return (\r\n        <PostViewerErrorBlock>\r\n          <span className=\"error-title\">존재하지 않는 포스트입니다.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </PostViewerErrorBlock>\r\n      );\r\n    } else {\r\n      return (\r\n        <PostViewerErrorBlock>\r\n          <span className=\"error-title\">포스트 요청 실패.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </PostViewerErrorBlock>\r\n      );\r\n    }\r\n  }\r\n  // 로딩 중이거나 아직 포스트 데이터가 없을 때\r\n  if (loading || !post) {\r\n    return null;\r\n  }\r\n  // 렌더링 데이터\r\n  const { title, body, tags, publisher, publishedDate } = post;\r\n  return (\r\n    <PostViewerBlock>\r\n      <Helmet>\r\n        <title>{title} - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <PostHead>\r\n        <h1>{title}</h1>\r\n        <SubInfo\r\n          hasMarginTop\r\n          username={publisher.username}\r\n          publishedDate={publishedDate}\r\n        />\r\n        <Tags tags={tags} />\r\n      </PostHead>\r\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\r\n      {actionButtons}\r\n    </PostViewerBlock>\r\n  );\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst FullScreen = styled.div`\r\n  position: fixed;\r\n  z-index: 30;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${({ theme }) =>\r\n    theme.body === '#fff' ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.45)'};\r\n  font-family: 'NanumBarunGothic';\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst AskModalBlock = styled.div`\r\n  width: 320px;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: ${({ theme }) =>\r\n    theme.body === '#fff'\r\n      ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n      : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n  }\r\n  p {\r\n    margin-bottom: 3rem;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nconst SingleInputModalBlock = styled.div`\r\n  width: 320px;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: ${({ theme }) =>\r\n    theme.body === '#fff'\r\n      ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n      : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n  }\r\n  p {\r\n    margin-bottom: 1rem;\r\n  }\r\n  .single-input-form {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  .result {\r\n    font-size: 0.9rem;\r\n  }\r\n  .result.success {\r\n    color: ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .result.failure {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)`\r\n  &.MuiTextField-root {\r\n    margin-bottom: 1rem;\r\n    width: 8rem;\r\n  }\r\n  .MuiFormLabel-root {\r\n    font-family: 'Raleway';\r\n    letter-spacing: 2px;\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  .MuiFormLabel-root.Mui-focused {\r\n    color: ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .MuiInput-underline:hover:not(.Mui-disabled):before {\r\n    border-bottom: 2px solid ${({ theme }) => theme.themeColorHoverBody};\r\n  }\r\n  .MuiInput-underline:before {\r\n    border-bottom: 1px solid ${({ theme }) => theme.text};\r\n  }\r\n  .MuiInput-underline:after {\r\n    border-bottom: 2px solid ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .MuiInputBase-input {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .MuiInputBase-input::placeholder {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const AskModal = ({\r\n  className,\r\n  visible,\r\n  title,\r\n  description,\r\n  confirmText = '확인',\r\n  cancelText = '취소',\r\n  onConfirm,\r\n  onCancel,\r\n}) => {\r\n  return (\r\n    visible && (\r\n      <Fade in={visible}>\r\n        <FullScreen className={className}>\r\n          <AskModalBlock>\r\n            <h2>{title}</h2>\r\n            <p>{description}</p>\r\n            <div className=\"buttons\">\r\n              <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n              <StyledButton themeColor onClick={onConfirm}>\r\n                {confirmText}\r\n              </StyledButton>\r\n            </div>\r\n          </AskModalBlock>\r\n        </FullScreen>\r\n      </Fade>\r\n    )\r\n  );\r\n};\r\n\r\nexport const SingleInputModal = ({\r\n  className,\r\n  visible,\r\n  title,\r\n  description,\r\n  inputLabel,\r\n  inputName,\r\n  submitText = '확인',\r\n  cancelText = '닫기',\r\n  onSubmit,\r\n  onCancel,\r\n  onChange,\r\n  value,\r\n  error,\r\n  resultMessage,\r\n}) => {\r\n  const { success, failure } = resultMessage;\r\n  return (\r\n    visible && (\r\n      <Fade in={visible}>\r\n        <FullScreen className={className}>\r\n          <SingleInputModalBlock>\r\n            <h2>{title}</h2>\r\n            <p>{description}</p>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"single-input-form\">\r\n                <StyledTextField\r\n                  id=\"standard-basic\"\r\n                  label={inputLabel}\r\n                  name={inputName}\r\n                  require=\"true\"\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={error}\r\n                  placeholder=\"13자리 바코드 번호\"\r\n                />\r\n                <div className=\"buttons\">\r\n                  <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n                  <StyledButton themeColor onClick={onSubmit}>\r\n                    {submitText}\r\n                  </StyledButton>\r\n                </div>\r\n              </div>\r\n              {success !== '' && (\r\n                <span className=\"result success\">{success}</span>\r\n              )}\r\n              {failure !== '' && (\r\n                <span className=\"result failure\">{failure}</span>\r\n              )}\r\n            </form>\r\n          </SingleInputModalBlock>\r\n        </FullScreen>\r\n      </Fade>\r\n    )\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { AskModal } from '../common/Modal';\r\n\r\nconst AskRemoveModal = ({ className, visible, onConfirm, onCancel }) => {\r\n  return (\r\n    <AskModal\r\n      className={className}\r\n      visible={visible}\r\n      title=\"DELETE POST\"\r\n      description=\"정말 POST를 삭제하시겠습니까?\"\r\n      confirmText=\"삭제\"\r\n      onConfirm={onConfirm}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport AskRemoveModal from './AskRemoveModal';\r\n\r\nconst PostActionButtionsBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 2rem;\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  color: ${({ theme }) => theme.postActionButtonText};\r\n  background: ${({ theme }) => theme.postActionButtonBody};\r\n  font-weight: 600;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n  &:hover {\r\n    color: ${({ theme }) => theme.postActionButtonHoverText};\r\n    background: ${({ theme }) => theme.postActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst PostActionButtions = ({ onEdit, onRemove }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const onRemoveClick = () => {\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    onRemove();\r\n  };\r\n\r\n  /* 모달 영역 밖 클릭시 모달 닫기 */\r\n  useEffect(() => {\r\n    window.onclick = event => {\r\n      if (\r\n        !!event.target.className.includes &&\r\n        event.target.className.includes('modal')\r\n      ) {\r\n        setModal(false);\r\n      }\r\n    };\r\n    // 언마운트시 이벤트 제거\r\n    return () => {\r\n      window.onclick = () => {};\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PostActionButtionsBlock>\r\n        <ActionButton onClick={onEdit}>수정</ActionButton>\r\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n      </PostActionButtionsBlock>\r\n      <AskRemoveModal\r\n        className=\"modal\"\r\n        visible={modal}\r\n        onConfirm={onConfirm}\r\n        onCancel={onCancel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostActionButtions;\r\n","import React, { useEffect } from 'react';\r\nimport PostViewer from '../../components/post/PostViewer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { readPost, unloadPost, setOriginalPost } from '../../module/redux/post';\r\nimport PostActionButtions from '../../components/post/PostActionButtions';\r\nimport { removePost } from '../../lib/api/post';\r\n\r\nconst PostViewerContainer = ({ match, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { postId } = match.params;\r\n  const { post, error, loading, user } = useSelector(\r\n    ({ post, loading, user }) => ({\r\n      post: post.post,\r\n      error: post.postError,\r\n      loading: loading['post/READ_POST'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n\r\n  // 이벤트 정의\r\n  const onEdit = () => {\r\n    dispatch(setOriginalPost(post));\r\n    history.push('/blog/write');\r\n  };\r\n\r\n  const onRemove = async () => {\r\n    try {\r\n      await removePost(postId);\r\n      history.push('/blog');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(readPost(postId));\r\n    // 언마운트 될 때 포스트 데이터 제거\r\n    return () => {\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, postId]);\r\n\r\n  const isPublisher =\r\n    (post && post.publisher.username) === (user && user.username);\r\n\r\n  return (\r\n    <PostViewer\r\n      post={post}\r\n      loading={loading}\r\n      error={error}\r\n      actionButtons={\r\n        isPublisher && (\r\n          <PostActionButtions onEdit={onEdit} onRemove={onRemove} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport PostViewerContainer from '../../containers/post/PostViewerContainer';\r\n\r\nconst PostPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PostListContainer = loadable(() =>\r\n  import('../../containers/post/PostListContainer'),\r\n);\r\n\r\nconst PostListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostListPage;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithNaver } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithNaverPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, state, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_NAVER_CLIENT_SECRET;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithNaver({ client_id, client_secret, code, state }));\r\n  }, [dispatch, client_id, client_secret, code, state]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithNaverPage);\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithKakao } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithKakaoPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_KAKAO_CLIENT_SECRET;\r\n  const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithKakao({ client_id, client_secret, redirect_uri, code }));\r\n  }, [dispatch, client_id, client_secret, code, redirect_uri]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithKakaoPage);\r\n","import React from 'react';\r\nimport { SingleInputModal } from '../common/Modal';\r\n\r\nconst InputBarcodeModal = ({\r\n  className,\r\n  visible,\r\n  onSubmit,\r\n  onCancel,\r\n  onChange,\r\n  value,\r\n  error,\r\n  resultMessage,\r\n}) => {\r\n  return (\r\n    <SingleInputModal\r\n      className={className}\r\n      visible={visible}\r\n      title=\"바코드 등록\"\r\n      description=\"바코드 번호를 등록할 수 있습니다.\"\r\n      inputLabel=\"BARCODE\"\r\n      inputName=\"barcode\"\r\n      submitText=\"코드 등록\"\r\n      onSubmit={onSubmit}\r\n      onCancel={onCancel}\r\n      onChange={onChange}\r\n      value={value}\r\n      error={error}\r\n      resultMessage={resultMessage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default InputBarcodeModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport InputBarcodeModal from './InputBarcodeModal';\r\n\r\nconst WikiViewerBlock = styled.div``;\r\n\r\nconst WikiViewerErrorBlock = styled(ErrorBlock)`\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 85vh;\r\n`;\r\n\r\nconst DocumentMenuBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  & > button,\r\n  & > a {\r\n    padding: 0.25rem 0.75rem;\r\n    outline: none;\r\n    border: none;\r\n    border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  & > a {\r\n    padding-top: 0.3rem;\r\n    font-size: 0.8rem;\r\n    align-items: center;\r\n  }\r\n  li {\r\n    list-style: square !important;\r\n  }\r\n`;\r\n\r\nconst DocumentMenu = ({\r\n  onEdit,\r\n  docName,\r\n  handleBarcodeChange,\r\n  handleBarcodeSubmit,\r\n  barcode,\r\n  inputBarcodeError,\r\n  resultMessage,\r\n  availableBarcode,\r\n}) => {\r\n  const [modal, setModal] = useState(false);\r\n  const handleInputCodeButtonClick = () => {\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n\r\n  /* 모달 영역 밖 클릭시 모달 닫기 */\r\n  useEffect(() => {\r\n    window.onclick = (event) => {\r\n      if (\r\n        !!event.target.className.includes &&\r\n        event.target.className.includes('modal')\r\n      ) {\r\n        setModal(false);\r\n      }\r\n    };\r\n    // 언마운트시 이벤트 제거\r\n    return () => {\r\n      window.onclick = () => {};\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {availableBarcode && (\r\n        <button onClick={handleInputCodeButtonClick}>코드 등록</button>\r\n      )}\r\n      <button onClick={onEdit}>편집</button>\r\n      <Link to={`/wiki/history/${docName}`}>역사</Link>\r\n      <InputBarcodeModal\r\n        className=\"modal\"\r\n        visible={modal}\r\n        onSubmit={handleBarcodeSubmit}\r\n        onChange={handleBarcodeChange}\r\n        value={barcode}\r\n        onCancel={onCancel}\r\n        error={inputBarcodeError}\r\n        resultMessage={resultMessage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst DocumentBlock = styled(Responsive)`\r\n  margin: 1rem auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst TitleBlock = styled.div`\r\n  h2 {\r\n    font-family: 'NanumBarunGothic';\r\n    font-weight: 600;\r\n  }\r\n  p {\r\n    font-family: 'NanumBarunGothic';\r\n    text-align: right;\r\n  }\r\n  hr {\r\n    background: ${({ theme }) => theme.wikiMenuBorder};\r\n    border: 0;\r\n    height: 1px;\r\n  }\r\n`;\r\n\r\nconst BodyBlock = styled.div`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst DocumentContent = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  p {\r\n    margin-top: 0.25rem;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 570px;\r\n  }\r\n  .ql-align-left {\r\n    text-align: left;\r\n  }\r\n  .ql-align-center {\r\n    text-align: center;\r\n  }\r\n  .ql-align-right {\r\n    text-align: right;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    .ql-video {\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WikiViewer = ({\r\n  document,\r\n  error,\r\n  loading,\r\n  onEdit,\r\n  docName,\r\n  handleBarcodeChange,\r\n  handleBarcodeSubmit,\r\n  barcode,\r\n  inputBarcodeError,\r\n  resultMessage,\r\n  availableBarcode,\r\n}) => {\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return (\r\n        <WikiViewerBlock>\r\n          <DocumentBlock>\r\n            <TitleBlock>\r\n              <h2>{docName}</h2>\r\n            </TitleBlock>\r\n            <DocumentContent>존재하지 않는 위키 문서입니다.</DocumentContent>\r\n          </DocumentBlock>\r\n        </WikiViewerBlock>\r\n      );\r\n    } else {\r\n      return (\r\n        <WikiViewerErrorBlock>\r\n          <span className=\"error-title\">문서 요청 실패.</span>\r\n          <span>\r\n            Status: <span className=\"error-msg\">{error.response.status}</span>\r\n          </span>\r\n          <span>\r\n            Message:{' '}\r\n            <span className=\"error-msg\">{error.response.statusText}</span>\r\n          </span>\r\n        </WikiViewerErrorBlock>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loading || !document) {\r\n    return null;\r\n  }\r\n  const { title, body, publishedDate } = document;\r\n\r\n  return (\r\n    <WikiViewerBlock>\r\n      {title && (\r\n        <Helmet>\r\n          <title>{title.name} - MAKE UP HARA</title>\r\n        </Helmet>\r\n      )}\r\n      <DocumentMenuBlock>\r\n        <DocumentMenu\r\n          onEdit={onEdit}\r\n          docName={docName}\r\n          handleBarcodeChange={handleBarcodeChange}\r\n          handleBarcodeSubmit={handleBarcodeSubmit}\r\n          barcode={barcode}\r\n          inputBarcodeError={inputBarcodeError}\r\n          resultMessage={resultMessage}\r\n          availableBarcode={availableBarcode}\r\n        />\r\n      </DocumentMenuBlock>\r\n      <DocumentBlock>\r\n        <TitleBlock>\r\n          <h2>{title && title.name}</h2>\r\n          <p>\r\n            최근 수정시각: {dayjs(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n          </p>\r\n          <hr />\r\n        </TitleBlock>\r\n        <BodyBlock>\r\n          <DocumentContent dangerouslySetInnerHTML={{ __html: body }} />\r\n        </BodyBlock>\r\n      </DocumentBlock>\r\n    </WikiViewerBlock>\r\n  );\r\n};\r\n\r\nexport default WikiViewer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport WikiViewer from '../../components/wiki/WikiViewer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  readDocument,\r\n  unloadDocument,\r\n  setOriginalDocument,\r\n  addBarcodeNumber,\r\n} from '../../module/redux/wiki';\r\nimport qs from 'qs';\r\n\r\nconst WikiViewerContainer = ({ location, match, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { docName } = match.params;\r\n  const { document, error, loading, result, resultError, user } = useSelector(\r\n    ({ wiki, user, loading }) => ({\r\n      document: wiki.document,\r\n      error: wiki.documentError,\r\n      loading: loading['wiki/READ_DOCUMENT'],\r\n      result: wiki.addBarcodeNumberResult,\r\n      resultError: wiki.addBarcodeNumberResultError,\r\n      user: user.user,\r\n    }),\r\n  );\r\n  const { r } = qs.parse(location.search, { ignoreQueryPrefix: true });\r\n\r\n  const [barcode, setBarcode] = useState('');\r\n  const [inputBarcodeError, setInputBarcodeError] = useState(false);\r\n  const [resultMessage, setResultMessage] = useState({\r\n    success: '',\r\n    failure: '',\r\n  });\r\n  const [availableBarcode, setAvailableBarcode] = useState(false);\r\n\r\n  // 이벤트 정의\r\n  const onEdit = () => {\r\n    dispatch(setOriginalDocument(document));\r\n    history.push('/wiki/edit');\r\n  };\r\n\r\n  const handleBarcodeChange = (event) => {\r\n    const data = event.target.value;\r\n    if (data.length < 14) {\r\n      setBarcode(event.target.value);\r\n    }\r\n    if ((data.length > 0 && data.length < 13) || isNaN(data)) {\r\n      setInputBarcodeError(true);\r\n    } else {\r\n      setInputBarcodeError(false);\r\n    }\r\n    setResultMessage({\r\n      success: '',\r\n      failure: '',\r\n    });\r\n  };\r\n\r\n  const handleBarcodeSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log();\r\n    if (!inputBarcodeError && barcode !== '') {\r\n      dispatch(addBarcodeNumber({ title: document.title.name, code: barcode }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (docName) {\r\n      dispatch(readDocument({ id: docName, r }));\r\n    } else {\r\n      history.replace('/w/MAKE UP HARA WIKI: 대문');\r\n    }\r\n    // 언마운트 될 때 포스트 데이터 제거\r\n    return () => {\r\n      dispatch(unloadDocument());\r\n      setBarcode('');\r\n    };\r\n  }, [dispatch, history, docName, r]);\r\n\r\n  useEffect(() => {\r\n    if (user) setAvailableBarcode(true);\r\n    else setAvailableBarcode(false);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (result == null && resultError == null) {\r\n      return;\r\n    }\r\n    if (result) {\r\n      if (!result.error) {\r\n        setResultMessage({\r\n          success: '바코드 번호가 등록되었습니다!',\r\n          failure: '',\r\n        });\r\n      } else {\r\n        setResultMessage({\r\n          success: '',\r\n          failure: result.message,\r\n        });\r\n      }\r\n    } else if (resultError) {\r\n      if (resultError.response.status === 401) {\r\n        setResultMessage({\r\n          success: '',\r\n          failure: '로그인 후 등록할 수 있습니다.',\r\n        });\r\n      } else {\r\n        setResultMessage({\r\n          success: '',\r\n          failure: resultError.message,\r\n        });\r\n      }\r\n    }\r\n  }, [result, resultError]);\r\n\r\n  return (\r\n    <WikiViewer\r\n      document={document}\r\n      error={error}\r\n      loading={loading}\r\n      onEdit={onEdit}\r\n      docName={docName}\r\n      handleBarcodeChange={handleBarcodeChange}\r\n      handleBarcodeSubmit={handleBarcodeSubmit}\r\n      barcode={barcode}\r\n      inputBarcodeError={inputBarcodeError}\r\n      resultMessage={resultMessage}\r\n      user={user}\r\n      availableBarcode={availableBarcode}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiViewerContainer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faRandom,\r\n  faArrowRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst WikiSearchBlock = styled.div`\r\n  margin-top: 0.125rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n`;\r\n\r\nconst SearchBlock = styled.div`\r\n  display: flex;\r\n  flex: none;\r\n  color: ${({ theme }) => theme.text};\r\n  a {\r\n    padding: 0.375rem 0.75rem;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n    }\r\n  }\r\n  .action-button {\r\n    display: flex;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 0 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  flex-grow: 1;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  ::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background: ${({ theme }) => theme.body};\r\n  outline: none;\r\n  padding: 0.375rem 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst WikiSearch = ({ onChangeField, onSearch, onDirect, onShuffle }) => {\r\n  library.add([faSearch, faRandom, faArrowRight]);\r\n\r\n  const handleChange = (e) => {\r\n    onChangeField({ key: 'query', value: e.target.value });\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) {\r\n      return onSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WikiSearchBlock>\r\n      <SearchBlock>\r\n        <SearchButton onClick={onShuffle}>\r\n          <FontAwesomeIcon icon=\"random\" />\r\n        </SearchButton>\r\n        <SearchInput\r\n          onChange={handleChange}\r\n          onKeyUp={handleKeyUp}\r\n          placeholder=\"위키 문서 검색\"\r\n        />\r\n        <span className=\"action-button\">\r\n          <SearchButton onClick={onSearch}>\r\n            <FontAwesomeIcon icon=\"search\" />\r\n          </SearchButton>\r\n          <SearchButton onClick={onDirect}>\r\n            <FontAwesomeIcon icon=\"arrow-right\" />\r\n          </SearchButton>\r\n        </span>\r\n      </SearchBlock>\r\n    </WikiSearchBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSearch;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport WikiSearch from '../../components/wiki/WikiSearch';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  getDirectTitle,\r\n  initialize,\r\n  getRandomTitle,\r\n} from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiSearchContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 설정 불러오기\r\n  const { query, directName, randomTitle } = useSelector(({ wiki }) => ({\r\n    query: wiki.query,\r\n    directName: wiki.directName,\r\n    randomTitle: wiki.randomTitle,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  const onSearch = () => {\r\n    if (query === '') {\r\n      history.push('/wiki/list');\r\n    } else {\r\n      history.push(`/wiki/list?query=${query}`);\r\n    }\r\n  };\r\n\r\n  const onDirect = () => {\r\n    dispatch(getDirectTitle({ query }));\r\n  };\r\n\r\n  const onShuffle = () => {\r\n    dispatch(getRandomTitle());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (directName) {\r\n      history.push(`/w/${directName}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, directName]);\r\n\r\n  useEffect(() => {\r\n    if (randomTitle) {\r\n      history.push(`/w/${randomTitle}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, randomTitle]);\r\n\r\n  return (\r\n    <WikiSearch\r\n      onChangeField={onChangeField}\r\n      onSearch={onSearch}\r\n      onDirect={onDirect}\r\n      onShuffle={onShuffle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiSearchContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiViewerContainer from '../../containers/wiki/WikiViewerContainer';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\n\r\nconst WikiPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiPage;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../../common/Responsive';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding: 1rem 0;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst TitleBlock = styled.div`\r\n  margin-top: 2rem;\r\n  h5 {\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  .title {\r\n    font-size: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  padding: 3rem 0;\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 400px;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    color: ${({ theme }) => theme.editorText};\r\n    left: 0;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ onChangeField, title, body }) => {\r\n  let localTitle;\r\n  try {\r\n    localTitle = title || JSON.parse(sessionStorage.getItem('wiki-title'));\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '문서 작성...',\r\n      modules: {\r\n        imageResize: {\r\n          modules: ['Resize', 'DisplaySize'],\r\n        },\r\n        // 참고: https://quilljs.com/docs/modules/toolbar/\r\n        toolbar: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ align: [] }],\r\n          [{ indent: '-1' }, { indent: '+1' }],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          ['video'],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n          ['clean'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  /* useRef를 사용하여 에디터 내 편집할 데이터 삽입 */\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  return (\r\n    <EditorBlock>\r\n      <TitleBlock>\r\n        <h5>문서 제목</h5>\r\n        <span className=\"title\">{localTitle.name}</span>\r\n      </TitleBlock>\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport Editor from '../../../components/wiki/edit/Editor';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initialize, changeField } from '../../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst EditorContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body } = useSelector(({ wiki }) => ({\r\n    title: wiki.title,\r\n    body: wiki.body,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n  try {\r\n    if (title) {\r\n      sessionStorage.setItem('wiki-title', JSON.stringify(title));\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n\r\n  // 언마운트 될 때 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (!title && !sessionStorage.getItem('wiki-title')) {\r\n    history.push('/wiki');\r\n    return null;\r\n  }\r\n\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default withRouter(EditorContainer);\r\n","import React, { useEffect } from 'react';\r\nimport WriteActionButtons from '../../../components/common/editor/WriteActionButtons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { writeDocument } from '../../../module/redux/wiki';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  // 액션함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body, editDocument, editDocumentError } = useSelector(\r\n    ({ wiki }) => ({\r\n      title: wiki.title,\r\n      body: wiki.body,\r\n      editDocument: wiki.editDocument,\r\n      editDocumentError: wiki.editDocumentError,\r\n    }),\r\n  );\r\n  let localTitle;\r\n  try {\r\n    localTitle = title || JSON.parse(sessionStorage.getItem('wiki-title'));\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n  const { _id } = localTitle;\r\n  // 이벤트 정의\r\n  // 문서 등록\r\n  const onPublish = () => {\r\n    dispatch(writeDocument({ id: _id, body }));\r\n  };\r\n  // 취소\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n  // 처리 후 작업\r\n  useEffect(() => {\r\n    if (editDocument) {\r\n      const { name } = editDocument;\r\n      history.replace(`/w/${name}`);\r\n      history.goBack();\r\n    }\r\n    if (editDocumentError) {\r\n      // TODO: Failure Write Document\r\n    }\r\n    try {\r\n      sessionStorage.getItem('wiki-title');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }, [history, editDocument, editDocumentError]);\r\n  return (\r\n    <WriteActionButtons type=\"wiki\" onClick={onPublish} onCancel={onCancel} />\r\n  );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport EditorContainer from '../../containers/wiki/edit/EditorContainer';\r\nimport EditorFooter from '../../components/common/editor/EditorFooter';\r\nimport WriteActionButtonsContainer from '../../containers/wiki/edit/WriteActionButtonsContainer';\r\n\r\nconst WikiEditPage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>WIKI 에디터 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <EditorFooter type=\"wiki\" />\r\n      <WriteActionButtonsContainer />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiEditPage);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst WikiRequestBlock = styled.div`\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  h2 {\r\n    font-weight: 500;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    button {\r\n      padding: 0.25rem 0.5rem;\r\n      margin-left: 3rem;\r\n      border: none;\r\n      outline: none;\r\n      font-size: 0.875rem;\r\n      cursor: pointer;\r\n      color: ${({ theme }) => theme.wikiActionButtonText};\r\n      background: ${({ theme }) => theme.wikiActionButtonBody};\r\n      &:hover {\r\n        color: ${({ theme }) => theme.wikiActionButtonHoverText};\r\n        background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst WikiRequestErrorBlock = styled(ErrorBlock)`\r\n  margin-top: 3rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst RequestItem = ({ title, onEdit }) => {\r\n  const { name } = title;\r\n  return (\r\n    <div className=\"item\">\r\n      <span>{name}</span>\r\n      <button onClick={() => onEdit(title)}>작성하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WikiRequest = ({ requestList, loading, error, onEdit }) => {\r\n  if (error) {\r\n    return (\r\n      <Responsive>\r\n        <WikiRequestErrorBlock>\r\n          <span className=\"error-title\">리스트 요청 실패.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </WikiRequestErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  if (!requestList || loading) {\r\n    return null;\r\n  }\r\n  if (!requestList.length) {\r\n    return (\r\n      <Responsive>\r\n        <WikiRequestErrorBlock>\r\n          <span className=\"error-title\">지금 작성이 필요한 문서가 없습니다...ㅠ</span>\r\n        </WikiRequestErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <WikiRequestBlock>\r\n        <h2>작성이 필요한 문서</h2>\r\n        {requestList.map((request) => (\r\n          <RequestItem title={request} onEdit={onEdit} key={request._id} />\r\n        ))}\r\n      </WikiRequestBlock>\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default WikiRequest;\r\n","import React, { useEffect } from 'react';\r\nimport WikiRequest from '../../components/wiki/WikiRequest';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRequestList, setTitle } from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiRequestContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n\r\n  // 전역 상태 불러오기\r\n  const { requestList, loading, error } = useSelector(({ wiki, loading }) => ({\r\n    requestList: wiki.requestList,\r\n    loading: loading['wiki/GET_REQUEST_LIST'],\r\n    error: wiki.requestListError,\r\n  }));\r\n\r\n  // 이벤트 정의\r\n  const onEdit = title => {\r\n    dispatch(setTitle(title));\r\n    history.push('/wiki/edit');\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getRequestList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <WikiRequest\r\n      requestList={requestList}\r\n      loading={loading}\r\n      error={error}\r\n      onEdit={onEdit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiRequestContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiRequestContainer from '../../containers/wiki/WikiRequestContainer';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst WikiRequestPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>작성이 필요한 문서 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiRequestContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiRequestPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst WikiHistoryBlock = styled(Responsive)`\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  .title {\r\n    margin: 1rem 0;\r\n    font-size: 2rem;\r\n    font-weight: 300;\r\n    & > span {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  .item {\r\n    margin: 0.25rem 0;\r\n  }\r\n  .item .item-link {\r\n    font-size: 0.8rem;\r\n    margin-left: 0.5rem;\r\n    color: ${({ theme }) => theme.wikiHistoryLinkText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.wikiHistoryLinkHoverText};\r\n    }\r\n  }\r\n  .item .item-revision {\r\n    font-weight: 700;\r\n    margin-left: 3rem;\r\n  }\r\n`;\r\n\r\nconst HistoryErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst HistoryItem = ({ document }) => {\r\n  const { title, publishedDate, revision } = document;\r\n  return (\r\n    <div className=\"item\">\r\n      <span className=\"item-date\">\r\n        {dayjs(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n      </span>\r\n      <Link to={`/w/${title.name}?r=${revision}`} className=\"item-link\">\r\n        (보기)\r\n      </Link>\r\n      <span className=\"item-revision\">(r{revision})</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WikiHistory = ({ historyList, error, loading, docName }) => {\r\n  if (error) {\r\n    return (\r\n      <WikiHistoryBlock>\r\n        <HistoryErrorBlock>\r\n          <span className=\"error-title\">히스토리 요청 실패.</span>\r\n          <span>\r\n            Status: <span className=\"error-msg\">{error.response.status}</span>\r\n          </span>\r\n          <span>\r\n            Message:{' '}\r\n            <span className=\"error-msg\">{error.response.statusText}</span>\r\n          </span>\r\n        </HistoryErrorBlock>\r\n      </WikiHistoryBlock>\r\n    );\r\n  }\r\n  if (!historyList || loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <WikiHistoryBlock>\r\n      <span className=\"title\">\r\n        <Link to=\"#\">{docName}</Link>\r\n        <span>(문서 역사)</span>\r\n      </span>\r\n      {historyList.map((document) => (\r\n        <HistoryItem document={document} key={document._id} />\r\n      ))}\r\n    </WikiHistoryBlock>\r\n  );\r\n};\r\n\r\nexport default WikiHistory;\r\n","import React, { useEffect } from 'react';\r\nimport WikiHistory from '../../components/wiki/WikiHistory';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getHistoryList } from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiHistoryContainer = ({ match }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 변수 불러오기\r\n  const { historyList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    historyList: wiki.historyList,\r\n    error: wiki.historyListError,\r\n    loading: loading['wiki/GET_HISTORY_LIST'],\r\n  }));\r\n  const { docName } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(getHistoryList({ id: docName }));\r\n  }, [dispatch, docName]);\r\n\r\n  return (\r\n    <WikiHistory\r\n      historyList={historyList}\r\n      error={error}\r\n      loading={loading}\r\n      docName={docName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiHistoryContainer);\r\n","import React from 'react';\r\nimport WikiHistoryContainer from '../../containers/wiki/WikiHistoryContainer';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst WikiHistoryPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>문서 역사 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiHistoryContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiHistoryPage;\r\n","import React, { forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst WikiListBlock = styled.div`\r\n  margin: 2rem;\r\n  margin-top: 0;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst WikiListErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:first-of-type {\r\n    border-top: none;\r\n  }\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = forwardRef((props, ref) => {\r\n  const { name } = props.document;\r\n  return (\r\n    <DocumentBlock ref={ref}>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\"></div>\r\n    </DocumentBlock>\r\n  );\r\n});\r\n\r\nconst LoadingProgress = styled(LinearProgress)`\r\n  &.MuiLinearProgress-colorPrimary {\r\n    background-color: ${({ theme }) => theme.progressBar};\r\n  }\r\n  .MuiLinearProgress-barColorPrimary {\r\n    background-color: ${({ theme }) => theme.progressBody};\r\n  }\r\n`;\r\n\r\nconst WikiList = ({\r\n  documentList,\r\n  error,\r\n  loading,\r\n  lastDocumentRef,\r\n  isLastPage,\r\n}) => {\r\n  if (error) {\r\n    return (\r\n      <WikiListErrorBlock>\r\n        <span className=\"error-title\">검색 결과 요청 실패.</span>\r\n        <span>\r\n          Status: <span className=\"error-msg\">{error.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">{error.response.statusText}</span>\r\n        </span>\r\n      </WikiListErrorBlock>\r\n    );\r\n  }\r\n  if (loading && !documentList) {\r\n    return null;\r\n  }\r\n  if (!loading && documentList && !documentList.length) {\r\n    return (\r\n      <WikiListErrorBlock>\r\n        <span className=\"error-title\">검색 결과가 없습니다.</span>\r\n        <span className=\"error-title\">\r\n          다른 검색어를 입력해보는건 어떨까요???\r\n        </span>\r\n      </WikiListErrorBlock>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <WikiListBlock>\r\n      <Helmet>\r\n        <title>WIKI LIST - MAKE UP HARA</title>\r\n      </Helmet>\r\n      {documentList && (\r\n        <div>\r\n          {documentList.map((document, index) =>\r\n            index !== documentList.length - 1 ? (\r\n              <DocumentItem document={document} key={document._id} />\r\n            ) : (\r\n              <DocumentItem\r\n                document={document}\r\n                key={document._id}\r\n                ref={lastDocumentRef}\r\n              />\r\n            ),\r\n          )}\r\n          {documentList.length > 0 && !isLastPage && <LoadingProgress />}\r\n        </div>\r\n      )}\r\n    </WikiListBlock>\r\n  );\r\n};\r\n\r\nexport default WikiList;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Category = styled(NavLink)`\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  font-weight: lighter;\r\n\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid ${({ theme }) => theme.categoryBorder};\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Category from '../common/Category';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\nconst categories = [\r\n  {\r\n    name: 'normal',\r\n    text: '위키 문서',\r\n  },\r\n  {\r\n    name: 'oldest',\r\n    text: 'OLDEST',\r\n  },\r\n  {\r\n    name: 'shortest',\r\n    text: '짧은 내용',\r\n  },\r\n  {\r\n    name: 'longest',\r\n    text: '긴 내용',\r\n  },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n  margin: 2rem;\r\n  margin-bottom: 0;\r\n  padding-top: 0.1rem;\r\n  line-height: 3;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  @media screen and (max-width: 768px) {\r\n    overflow-x: auto;\r\n  }\r\n`;\r\n\r\nconst Categories = ({ location }) => {\r\n  const { query, oldest, shortest, longest } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const handleActive = (name) => {\r\n    if (name === 'oldest' && oldest === 'true') return true;\r\n    else if (name === 'shortest' && shortest === 'true') return true;\r\n    else if (name === 'longest' && longest === 'true') return true;\r\n    else if (\r\n      name === 'normal' &&\r\n      oldest === undefined &&\r\n      shortest === undefined &&\r\n      longest === undefined\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <CategoriesBlock>\r\n      {categories.map((category) => (\r\n        <Category\r\n          key={category.name}\r\n          activeClassName=\"active\"\r\n          exact={true}\r\n          isActive={() => handleActive(category.name)}\r\n          to={\r\n            category.name === 'normal'\r\n              ? `/wiki/list?${qs.stringify({ query: query })}`\r\n              : `/wiki/list?${qs.stringify({ query: query })}&${\r\n                  category.name\r\n                }=true`\r\n          }\r\n        >\r\n          {category.text}\r\n        </Category>\r\n      ))}\r\n    </CategoriesBlock>\r\n  );\r\n};\r\n\r\nexport default withRouter(Categories);\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport WikiList from '../../components/wiki/WikiList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSearchList } from '../../module/redux/wiki';\r\nimport qs from 'qs';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Categories from '../../components/wiki/Categories';\r\n\r\nconst isValidQuery = (oldest, shortest, longest) => {\r\n  if (oldest !== undefined && shortest !== undefined) {\r\n    return false;\r\n  }\r\n  if (shortest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  if (oldest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  if (oldest !== undefined && shortest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst WikiListContainer = ({ location, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 설정 불러오기\r\n  const { searchList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    searchList: wiki.searchList,\r\n    error: wiki.searchListError,\r\n    loading: loading['wiki/GET_SEARCH_LIST'],\r\n  }));\r\n  const { query, oldest, shortest, longest } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const page = useRef(1);\r\n  const [documentList, setDocumentList] = useState([]);\r\n  const [isLastPage, setIsLastPage] = useState(false);\r\n  const [active, setActive] = useState(false);\r\n\r\n  // 이벤트 정의하기\r\n  useEffect(() => {\r\n    if (searchList && active && !loading) {\r\n      setIsLastPage(searchList.length === 0 ? true : false);\r\n      setDocumentList((element) => [...element, ...searchList]);\r\n    }\r\n  }, [searchList, active, loading]);\r\n\r\n  useEffect(() => {\r\n    if (isValidQuery(oldest, shortest, longest)) {\r\n      page.current = 1;\r\n      dispatch(getSearchList({ query, oldest, shortest, longest }));\r\n      setActive(true);\r\n    } else {\r\n      history.replace(`/wiki/list?query=${query}`);\r\n    }\r\n  }, [dispatch, history, query, oldest, shortest, longest]);\r\n\r\n  const lastDocumentRef = useRef(null);\r\n  const intersectionObserver = new IntersectionObserver((entries, observer) => {\r\n    const lastDocument = entries[0];\r\n    if (lastDocument.intersectionRatio > 0) {\r\n      observer.unobserve(lastDocument.target);\r\n      lastDocumentRef.current = null;\r\n      setTimeout(() => {\r\n        if (!isLastPage) {\r\n          page.current += 1;\r\n        }\r\n        dispatch(\r\n          getSearchList({\r\n            query,\r\n            oldest,\r\n            shortest,\r\n            longest,\r\n            page: page.current,\r\n          }),\r\n        );\r\n      }, 2000);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (lastDocumentRef.current) {\r\n      intersectionObserver.observe(lastDocumentRef.current);\r\n    }\r\n  }, [lastDocumentRef, intersectionObserver]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setIsLastPage(false);\r\n      setActive(false);\r\n      setDocumentList([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Categories />\r\n      <WikiList\r\n        documentList={documentList}\r\n        error={error}\r\n        loading={loading}\r\n        lastDocumentRef={lastDocumentRef}\r\n        isLastPage={isLastPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiListContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\nimport WikiListContainer from '../../containers/wiki/WikiListContainer';\r\n\r\nconst WikiListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiListPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MyPageMenuBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 2rem;\r\n  border-right: 1px solid ${({ theme }) => theme.categoryBorder};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst MenuList = [\r\n  { name: '프로필', link: '/mypage' },\r\n  { name: '보안', link: '/mypage/security' },\r\n  { name: '활동 기록', link: '/mypage/activity' },\r\n];\r\n\r\nconst NavMenu = styled(NavLink)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  &:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  &.active {\r\n    font-weight: 600;\r\n    border-left: 2px solid ${({ theme }) => theme.categoryBorder};\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .menu-name {\r\n    font-family: 'NanumBarunGothic';\r\n    padding: 0 0.5rem;\r\n  }\r\n`;\r\n\r\nconst MyPageMenu = () => {\r\n  return (\r\n    <MyPageMenuBlock>\r\n      {MenuList.map((menu) => (\r\n        <NavMenu key={menu.name} to={menu.link} exact={true}>\r\n          <span className=\"menu-name\">{menu.name}</span>\r\n        </NavMenu>\r\n      ))}\r\n    </MyPageMenuBlock>\r\n  );\r\n};\r\n\r\nexport default MyPageMenu;\r\n","import React from 'react';\r\nimport MyPageMenu from '../../components/profile/MyPageMenu';\r\n\r\nconst MyPageMenuContainer = () => {\r\n  return <MyPageMenu />;\r\n};\r\n\r\nexport default MyPageMenuContainer;\r\n","import styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\n\r\nconst FlexContentBlock = styled(Responsive)`\r\n  display: flex;\r\n  flex-direction: ${(props) =>\r\n    props.direction === 'column' ? 'column' : 'row'};\r\n`;\r\n\r\nexport default FlexContentBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nexport const ProfileBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  .profile-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .profile-info-title {\r\n    font-weight: 300;\r\n    font-size: 1.5rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n  }\r\n  .profile-info-explain {\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n    margin-top: 0.25rem;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-info-value {\r\n    margin-top: 1.25rem;\r\n    span {\r\n      padding: 0.25rem 0.5rem;\r\n      font-size: 1.125rem;\r\n      font-family: 'Raleway', 'NanumGothic';\r\n      border-radius: 0.25rem;\r\n      background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n    }\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-form {\r\n    margin: 1.5rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .value-provider {\r\n    text-transform: uppercase;\r\n  }\r\n  .possible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  .impossible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.errorText};\r\n    margin-top: 0.5rem;\r\n  }\r\n  .success-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyleInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1.125rem;\r\n  font-family: 'Raleway', 'NanumGothic';\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n`;\r\n\r\nconst ProfileSubmitButton = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const ProfileErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst Profile = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  validName,\r\n  nameMessage,\r\n  existNameError,\r\n  equalName,\r\n  submitMessage,\r\n  errorMessage,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  if (existNameError) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">프로필 요청 실패.</span>\r\n        <span>\r\n          Status:{' '}\r\n          <span className=\"error-msg\">{existNameError.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">\r\n            {existNameError.response.statusText}\r\n          </span>\r\n        </span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { username, provider } = user;\r\n  return (\r\n    <ProfileBlock>\r\n      <div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">ID</span>\r\n          <div className=\"profile-info-value\">\r\n            <span>{username}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">로그인 유형</span>\r\n          <span className=\"profile-info-explain\">\r\n            어떤 방식으로 로그인했는지를 확인합니다.\r\n          </span>\r\n          <div className=\"profile-info-value\">\r\n            <span className=\"value-provider\">{provider}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <form className=\"profile-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">DISPLAY NAME</span>\r\n            <span className=\"profile-info-explain\">\r\n              다른 사용자들에게 보여지는 이름입니다.\r\n            </span>\r\n            <StyleInput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={\r\n                !equalName && (validName === true ? 'possible' : 'impossible')\r\n              }\r\n              value={form.name ? form.name : ''}\r\n              onChange={onChange}\r\n            />\r\n            {validName === false && (\r\n              <span className=\"invalid-message\">{nameMessage}</span>\r\n            )}\r\n            {submitMessage !== '' && (\r\n              <span className=\"success-message\">{submitMessage}</span>\r\n            )}\r\n            {errorMessage !== '' && (\r\n              <span className=\"invalid-message\">{errorMessage}</span>\r\n            )}\r\n          </div>\r\n          <ProfileSubmitButton\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validName || equalName}\r\n          >\r\n            수정\r\n          </ProfileSubmitButton>\r\n        </form>\r\n      </div>\r\n    </ProfileBlock>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport Profile from '../../components/profile/Profile';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  checkExistName,\r\n  check,\r\n  initializeUpdateName,\r\n  updateName,\r\n} from '../../module/redux/user';\r\n\r\nconst ProfileContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    user,\r\n    form,\r\n    isNotExistName,\r\n    isNotExistNameError,\r\n    updateUser,\r\n    updateUserError,\r\n  } = useSelector(({ user }) => ({\r\n    user: user.user,\r\n    form: user.profile,\r\n    isNotExistName: user.checkExistNameResult,\r\n    isNotExistNameError: user.checkExistNameResultError,\r\n    updateUser: user.updateUser,\r\n    updateUserError: user.updateUserError,\r\n  }));\r\n\r\n  const [validName, setValidName] = useState(true); // 사용 가능한 이름 여부\r\n  const [equalName, setEqualName] = useState(true); // 기존 사용자 이름이랑 일치하는지 여부\r\n  const [nameMessage, setNameMessage] = useState(''); // 검증 실패 메시지\r\n  const [submitMessage, setSubmitMessage] = useState(''); // submit 결과 메시지\r\n  const [errorMessage, setErrorMessage] = useState(''); // submit 에러 메시지\r\n  const loadingForm = useRef(true);\r\n\r\n  // input 상태 반영\r\n  const onChange = (e) => {\r\n    setNameMessage('');\r\n    setSubmitMessage('');\r\n    setErrorMessage('');\r\n    const { value, name } = e.target;\r\n    dispatch(changeField({ form: 'profile', key: name, value }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name } = form;\r\n    const { _id } = user;\r\n    if (validName && !equalName) {\r\n      dispatch(updateName({ id: _id, name }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 중복되지 않은 이름일 때\r\n    if (!isNotExistName || (isNotExistName && isNotExistName.result)) {\r\n      setValidName(true);\r\n    } else {\r\n      // 상태 업데이트\r\n      setValidName(false);\r\n      setEqualName(false);\r\n      setNameMessage(isNotExistName ? isNotExistName.message : ''); // 메시지 저장\r\n    }\r\n  }, [isNotExistName]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    if (loadingForm.current) return;\r\n    const { name } = form;\r\n    const loginName = user ? user.name : '';\r\n    if (name === undefined) return;\r\n    // 이름이 현재 사용자 이름이랑 다르면\r\n    if (name && name.toLowerCase() !== loginName.toLowerCase()) {\r\n      // 이름이 사용 가능한지 비동기로 요청\r\n      dispatch(checkExistName({ username: user.username, name }));\r\n      setEqualName(false);\r\n    } else {\r\n      // 이름이 같으면\r\n      if (name) {\r\n        setEqualName(true); // 상태 갱신\r\n      } else {\r\n        // 공백일 때\r\n        dispatch(checkExistName({ username: user.username, name })); // 요청해서 공백일 떄의 결과 값을 갱신 한다\r\n      }\r\n    }\r\n  }, [dispatch, form, user]);\r\n\r\n  useEffect(() => {\r\n    const { name } = user ? user : '';\r\n    dispatch(changeField({ form: 'profile', key: 'name', value: name }));\r\n    loadingForm.current = false;\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    if (updateUser) {\r\n      dispatch(check());\r\n      setSubmitMessage('성공적으로 수정되었습니다.');\r\n      dispatch(initializeUpdateName());\r\n    } else if (updateUserError) {\r\n      setErrorMessage('에러가 발생했습니다.');\r\n      dispatch(initializeUpdateName());\r\n    }\r\n  }, [dispatch, updateUser, updateUserError]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeUpdateName());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Profile\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      validName={validName}\r\n      nameMessage={nameMessage}\r\n      isNotExistNameError={isNotExistNameError}\r\n      equalName={equalName}\r\n      submitMessage={submitMessage}\r\n      errorMessage={errorMessage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport ProfileContainer from '../../containers/profile/ProfileContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst MyPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>MY PAGE - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ProfileContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ProfileBlock, ProfileErrorBlock } from './Profile';\r\nimport Button from '../common/Button';\r\n\r\nconst SecurityBlock = styled(ProfileBlock)`\r\n  .password-input-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .change-password-result {\r\n    margin: 1rem 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n  width: 20rem;\r\n  &::placeholder {\r\n    font-family: 'NanumGothic';\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst Security = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  valid,\r\n  validMessage,\r\n  onSubmit,\r\n  submitPassword,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { curPassword, newPassword, confirmPassword } = form;\r\n  const {\r\n    curPassword: validCur,\r\n    newPassword: validNew,\r\n    confirmPassword: validConfirm,\r\n  } = valid;\r\n  const {\r\n    curPassword: validMessageCur,\r\n    newPassword: validMessageNew,\r\n    confirmPassword: validMessageConfirm,\r\n  } = validMessage;\r\n  const { result, message } = submitPassword;\r\n  const { username } = user ? user : '';\r\n  return (\r\n    <SecurityBlock>\r\n      <div>\r\n        <form className=\"change-password-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">비밀번호 변경</span>\r\n            <span className=\"profile-info-explain\">\r\n              비밀번호를 변경할 수 있습니다.\r\n            </span>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"curPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"기존 비밀번호 입력\"\r\n                className={validCur === true ? 'possible' : 'impossible'}\r\n                value={curPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageCur !== '' && (\r\n                <span className=\"invalid-message\">{validMessageCur}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 입력\"\r\n                className={validNew === true ? 'possible' : 'impossible'}\r\n                value={newPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageNew !== '' && (\r\n                <span className=\"invalid-message\">{validMessageNew}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 한번 더 입력\"\r\n                className={validConfirm === true ? 'possible' : 'impossible'}\r\n                value={confirmPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageConfirm !== '' && (\r\n                <span className=\"invalid-message\">{validMessageConfirm}</span>\r\n              )}\r\n            </div>\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"username\"\r\n              value={username ? username : ''}\r\n            />\r\n          </div>\r\n          <div className=\"change-password-result\">\r\n            {message !== '' && result && (\r\n              <span className=\"success-message\">{message}</span>\r\n            )}\r\n            {message !== '' && !result && (\r\n              <span className=\"invalid-message\">{message}</span>\r\n            )}\r\n          </div>\r\n          <ButtonWithMarginTop\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validCur || !validNew || !validConfirm}\r\n          >\r\n            비밀번호 변경\r\n          </ButtonWithMarginTop>\r\n        </form>\r\n      </div>\r\n    </SecurityBlock>\r\n  );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Security from '../../components/profile/Security';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  changePassword,\r\n  initializeChangePassword,\r\n} from '../../module/redux/user';\r\n\r\nconst SecurityContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { user, form, changePasswordResult, changePasswordError } = useSelector(\r\n    ({ user }) => ({\r\n      user: user.user,\r\n      form: user.password,\r\n      changePasswordResult: user.changePasswordResult,\r\n      changePasswordError: user.changePasswordError,\r\n    }),\r\n  );\r\n\r\n  const [valid, setValid] = useState({\r\n    curPassword: false,\r\n    newPassword: false,\r\n    confirmPassword: false,\r\n  });\r\n  const [validMessage, setValidMessage] = useState({\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [submitPassword, setSubmitPassword] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n  const MIN_LENGTH = 8;\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    if (name === 'curPassword') {\r\n      setValidMessage({\r\n        ...validMessage,\r\n        curPassword: '',\r\n      });\r\n    }\r\n    if (submitPassword.message && submitPassword.message !== '') {\r\n      setSubmitPassword({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    }\r\n    dispatch(changeField({ form: 'password', key: name, value }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      curPassword: curValid,\r\n      newPassword: newValid,\r\n      confirmPassword: confirmValid,\r\n    } = valid;\r\n    const { _id } = user;\r\n    const { curPassword, newPassword } = form;\r\n    if (curValid && newValid && confirmValid) {\r\n      dispatch(changePassword({ id: _id, password: curPassword, newPassword }));\r\n    }\r\n  };\r\n\r\n  const stateValidMessage = useRef(validMessage);\r\n\r\n  useEffect(() => {\r\n    const isValidNewPassword =\r\n      form.newPassword && form.newPassword.length >= MIN_LENGTH;\r\n    const isValidConfirmPassword =\r\n      form.confirmPassword === form.newPassword &&\r\n      form.confirmPassword.length >= MIN_LENGTH;\r\n    setValid({\r\n      curPassword: form.curPassword !== '',\r\n      newPassword:\r\n        form.newPassword !== '' &&\r\n        isValidNewPassword &&\r\n        form.newPassword !== form.curPassword,\r\n      confirmPassword: form.confirmPassword !== '' && isValidConfirmPassword,\r\n    });\r\n    if (!isValidNewPassword && form.newPassword !== '') {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '비밀번호는 8자 이상 입력해야 합니다!',\r\n      });\r\n    } else if (!isValidConfirmPassword && form.confirmPassword !== '') {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        confirmPassword: '비밀번호가 일치하지 않습니다!',\r\n      });\r\n    } else if (\r\n      form.newPassword !== '' &&\r\n      form.newPassword === form.curPassword &&\r\n      isValidNewPassword\r\n    ) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '기존 비밀번호와 일치합니다.',\r\n      });\r\n    } else if (form.newPassword === '' || isValidNewPassword) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '',\r\n      });\r\n    } else if (form.confirmPassword === '' || isValidConfirmPassword) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        confirmPassword: '',\r\n      });\r\n    }\r\n  }, [form, stateValidMessage]);\r\n\r\n  useEffect(() => {\r\n    if (changePasswordResult) {\r\n      setSubmitPassword({\r\n        result: true,\r\n        message: '비밀번호가 성공적으로 변경되었습니다.',\r\n      });\r\n      dispatch(initializeChangePassword());\r\n    } else if (changePasswordError) {\r\n      if (\r\n        changePasswordError.response &&\r\n        changePasswordError.response.status === 412\r\n      ) {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '',\r\n        });\r\n        setValidMessage({\r\n          curPassword: '기존 비밀번호가 일치하지 않습니다',\r\n          newPassword: '',\r\n          confirmPassword: '',\r\n        });\r\n        setValid({\r\n          curPassword: false,\r\n          newPassword: true,\r\n          confirmPassword: true,\r\n        });\r\n      } else {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '비밀번호 변경에 실패했습니다.',\r\n        });\r\n      }\r\n    }\r\n  }, [dispatch, changePasswordResult, changePasswordError]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeChangePassword());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Security\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      valid={valid}\r\n      validMessage={validMessage}\r\n      onSubmit={onSubmit}\r\n      submitPassword={submitPassword}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SecurityContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport SecurityContainer from '../../containers/profile/SecurityContainer';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst SecurityPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>보안 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <SecurityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SecurityPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport PaginationContainer from '../../containers/post/PaginationContainer';\r\n\r\nconst ActivityBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 700px;\r\n  @media screen and (max-width: 1024px) {\r\n    width: 580px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 70vw;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 60vw;\r\n  }\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  .activity-count-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media screen and (min-width: 769px) {\r\n      flex-direction: row;\r\n      .profile-info-group {\r\n        &:first-of-type {\r\n          margin-left: 0;\r\n        }\r\n        margin-left: 3rem;\r\n      }\r\n    }\r\n  }\r\n  .profile-info-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .profile-info-title {\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    font-size: 1.5rem;\r\n  }\r\n  .profile-info-content {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .profile-info-content-col {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .content-title {\r\n    margin-right: 1rem;\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n  }\r\n  .content-value {\r\n    padding: 0.25rem 0.5rem;\r\n    font-size: 1rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    border-radius: 0.25rem;\r\n    background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  }\r\n  .activity-post-list {\r\n    margin: 1rem 0;\r\n  }\r\n  .activity-post-item {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  & > a {\r\n    font-family: 'NanumGothic';\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    font-family: 'NanumGothic';\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst Activity = ({\r\n  user,\r\n  postList,\r\n  postCount,\r\n  lastPage,\r\n  documentCount,\r\n  postListError,\r\n  documentCountError,\r\n  loadingPost,\r\n  loadingWiki,\r\n}) => {\r\n  return (\r\n    <ActivityBlock>\r\n      <div className=\"activity-count-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">WIKI DOCUMENT</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 위키 문서 개수</span>\r\n            {!loadingWiki && (\r\n              <span className=\"content-value\">{documentCount}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">POST</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 개수</span>\r\n            {!loadingPost && <span className=\"content-value\">{postCount}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"activity-post-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">PUBLISHED POST LIST</span>\r\n          <div className=\"profile-info-content-col\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 목록</span>\r\n            {!loadingPost && postList && (\r\n              <div className=\"activity-post-list\">\r\n                <div className=\"activity-post-item\">\r\n                  {postList.map((post) => (\r\n                    <PostItem post={post} key={post._id} />\r\n                  ))}\r\n                </div>\r\n                <PaginationContainer />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ActivityBlock>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { useEffect } from 'react';\r\nimport Activity from '../../components/profile/Activity';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList } from '../../module/redux/post';\r\nimport { getDocumentCount } from '../../module/redux/wiki';\r\n\r\nconst ActivityContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    user,\r\n    postList,\r\n    postCount,\r\n    documentCount,\r\n    postListError,\r\n    documentCountError,\r\n    loadingPost,\r\n    loadingWiki,\r\n  } = useSelector(({ user, post, wiki, loading }) => ({\r\n    user: user.user,\r\n    postList: post.postList,\r\n    postCount: post.postCount,\r\n    documentCount: wiki.documentCount,\r\n    postListError: post.postListError,\r\n    documentCountError: wiki.documentCountError,\r\n    loadingPost: loading['post/GET_LIST'],\r\n    loadingWiki: loading['wiki/GET_DOCUMENT_COUNT'],\r\n  }));\r\n\r\n  const { username } = user;\r\n  useEffect(() => {\r\n    if (username) {\r\n      dispatch(getList({ username }));\r\n      dispatch(getDocumentCount({ username }));\r\n    }\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch, username]);\r\n\r\n  return (\r\n    <Activity\r\n      user={user}\r\n      postList={postList}\r\n      postCount={postCount}\r\n      documentCount={documentCount}\r\n      postListError={postListError}\r\n      documentCountError={documentCountError}\r\n      loadingPost={loadingPost}\r\n      loadingWiki={loadingWiki}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ActivityContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\nimport ActivityContainer from '../../containers/profile/ActivityContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst ActivityPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>활동 기록 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ActivityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityPage;\r\n","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport MainPage from './pages/main/MainPage';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme } from './lib/styles/theme';\nimport { darkTheme } from './lib/styles/theme';\nimport LoginPage from './pages/auth/LoginPage';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTheme } from './module/redux/theme';\nimport PostWritePage from './pages/post/PostWritePage';\nimport PostPage from './pages/post/PostPage';\nimport PostListPage from './pages/post/PostListPage';\nimport { Helmet } from 'react-helmet-async';\nimport LoginWithNaverPage from './pages/auth/callback/LoginWithNaverPage';\nimport LoginWithKakaoPage from './pages/auth/callback/LoginWithKakaoPage';\nimport WikiPage from './pages/wiki/WikiPage';\nimport WikiEditPage from './pages/wiki/WikiEditPage';\nimport WikiRequestPage from './pages/wiki/WikiRequestPage';\nimport WikiHistoryPage from './pages/wiki/WikiHistoryPage';\nimport WikiListPage from './pages/wiki/WikiListPage';\nimport MyPage from './pages/profile/MyPage';\nimport SecurityPage from './pages/profile/SecurityPage';\nimport ActivityPage from './pages/profile/ActivityPage';\n\nconst App = () => {\n  const { isDarkTheme } = useSelector(({ theme }) => ({\n    isDarkTheme: theme.isDarkTheme,\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      const storageTheme = localStorage.getItem('darkTheme');\n      if (storageTheme === 'true') {\n        dispatch(setTheme(true));\n      }\n    } catch (error) {\n      throw error;\n    }\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n      <>\n        <Helmet>\n          <title>MAKE UP HARA</title>\n        </Helmet>\n        <Route component={MainPage} path={['/']} exact />\n        <Route component={LoginPage} path={'/login'} exact />\n        <Route component={LoginWithNaverPage} path={'/login/naver'} />\n        <Route component={LoginWithKakaoPage} path={'/login/kakao'} />\n        <Route component={RegisterPage} path={'/register'} />\n        <Route\n          component={PostListPage}\n          path={['/blog', '/blog/@:username']}\n          exact\n        />\n        <Route component={PostWritePage} path={'/blog/write'} />\n        <Route component={PostPage} path={'/blog/@:username/:postId'} exact />\n        <Route component={WikiPage} path={['/w', '/w/:docName']} exact />\n        <Route component={WikiEditPage} path={'/wiki/edit'} exact />\n        <Route component={WikiRequestPage} path={'/wiki/request'} exact />\n        <Route\n          component={WikiHistoryPage}\n          path={'/wiki/history/:docName'}\n          exact\n        />\n        <Route component={WikiListPage} path={'/wiki/list'} exact />\n        <Route component={MyPage} path={'/mypage'} exact />\n        <Route component={SecurityPage} path={'/mypage/security'} exact />\n        <Route component={ActivityPage} path={'/mypage/activity'} exact />\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport post, { postSaga } from './post';\r\nimport wiki, { wikiSaga } from './wiki';\r\nimport theme from './theme';\r\n\r\n/* root reducer */\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n  theme,\r\n  post,\r\n  wiki,\r\n});\r\n\r\n/* root saga */\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), postSaga(), wikiSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer, { rootSaga } from './module/redux/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { tempSetUser, check } from './module/redux/user';\nimport { HelmetProvider } from 'react-helmet-async';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n  // applyMiddleware(sagaMiddleware);\n);\n\nsagaMiddleware.run(rootSaga);\nconst loadUser = () => {\n  try {\n    const user = sessionStorage.getItem('user');\n    if (!user) return;\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (error) {\n    throw error;\n  }\n};\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as postAPI from '../../lib/api/post';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// local\r\nconst INITIALIZE = 'post/INITIALIZE'; // 작성 내용 초기화\r\nconst CHANGE_FIELD = 'post/CHANGE_FIELD'; // 특정 key값 바꾸기\r\nconst SET_ORIGINAL_POST = 'post/SET_ORIGINAL_POST'; // 포스트 편집 시 에디터에 포스트 정보 세팅\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 뷰 언마운트시 post 정보 제거\r\n// api - write\r\nconst [\r\n  WRITE_POST,\r\n  WRITE_POST_SUCCESS,\r\n  WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('post/WRITE_POST');\r\n// api - read\r\nconst [\r\n  READ_POST,\r\n  READ_POST_SUCCESS,\r\n  READ_POST_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST');\r\n// api - update\r\nconst [\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAILURE,\r\n] = createRequestActionTypes('post/UPDATE_POST');\r\n// api - list\r\nconst [GET_LIST, GET_LIST_SUCCESS, GET_LIST_FAILURE] = createRequestActionTypes(\r\n  'post/GET_LIST',\r\n);\r\nconst UNLOAD_LIST = 'post/UNLOAD_LIST'; // 포스트 리스트 뷰 언마운트시 post list 정보 제거\r\n\r\n/* action */\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, (post) => post);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\nexport const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\r\n  title,\r\n  body,\r\n  tags,\r\n}));\r\nexport const readPost = createAction(READ_POST, (id) => id);\r\nexport const updatePost = createAction(\r\n  UPDATE_POST,\r\n  ({ id, title, body, tags }) => ({ id, title, body, tags }),\r\n);\r\nexport const getList = createAction(\r\n  GET_LIST,\r\n  ({ page, tag, username, block }) => ({\r\n    page,\r\n    tag,\r\n    username,\r\n    block,\r\n  }),\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\n\r\n/* redux-saga */\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\nconst getListSaga = createRequestSaga(GET_LIST, postAPI.getList);\r\n\r\nexport function* postSaga() {\r\n  yield takeLatest(WRITE_POST, writePostSaga);\r\n  yield takeLatest(READ_POST, readPostSaga);\r\n  yield takeLatest(UPDATE_POST, updatePostSaga);\r\n  yield takeLatest(GET_LIST, getListSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n  editPost: null,\r\n  editPostError: null,\r\n  post: null,\r\n  postError: null,\r\n  postList: [],\r\n  lastPage: 1,\r\n  postCount: 0,\r\n  postListError: null,\r\n  targetPostId: null,\r\n};\r\n\r\n/* reducer */\r\nconst post = handleActions(\r\n  {\r\n    [INITIALIZE]: () => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키값을 업데이트\r\n    }),\r\n    [SET_ORIGINAL_POST]: (state, { payload: post }) => ({\r\n      ...state,\r\n      title: post.title,\r\n      body: post.body,\r\n      tags: post.tags,\r\n      targetPostId: post._id,\r\n    }),\r\n    [UNLOAD_POST]: (state) => ({\r\n      ...state,\r\n      post: null,\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST]: (state) => ({\r\n      ...state,\r\n      editPost: null,\r\n      neditPosttError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPostError,\r\n    }),\r\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n    }),\r\n    [READ_POST_FAILURE]: (state, { payload: postError }) => ({\r\n      ...state,\r\n      postError,\r\n    }),\r\n    [UPDATE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n    }),\r\n    [UPDATE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPostError,\r\n    }),\r\n    [GET_LIST_SUCCESS]: (state, { payload: postList, meta: response }) => ({\r\n      ...state,\r\n      postList,\r\n      postCount: parseInt(response.headers['makeuphara-post-count'], '10'),\r\n      lastPage: parseInt(response.headers['makeuphara-post-last-page'], '10'),\r\n    }),\r\n    [GET_LIST_FAILURE]: (state, { payload: postListError }) => ({\r\n      ...state,\r\n      postListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      postList: null,\r\n      postListError: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default post;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  padding: 0, 1rem;\r\n  width: 986px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 748px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 98%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 소셜 로그인 버튼에서 css를 사용하기 위해 export\r\n * 소셜 로그인은 ref를 설정해주어야 하기 때문에 prop 전달이 어려움\r\n */\r\nexport const buttonStyle = css`\r\n  border: none;\r\n  border-radius: 2px;\r\n  font-size: 1rem;\r\n  font-family:'NanumBarunGothic';\r\n  font-weight: normal;\r\n  padding: 0.25rem 1rem;\r\n  color: ${({ theme }) => theme.btnText};\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: ${({ theme }) => theme.btnBody};\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.btnHoverBody};\r\n  }\r\n\r\n  &:disabled,\r\n  &[disabled] {\r\n    cursor: default;\r\n    background: ${({ theme }) => theme.btnDisableBody};\r\n    color: ${({ theme }) => theme.btnDisableColor};\r\n    &:hover{\r\n      background: ${({ theme }) => theme.btnDisableBody};\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      display: inline-block;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.indigo &&\r\n    css`\r\n      background: ${palette.indigo[9]};\r\n      &:hover {\r\n        background: ${palette.indigo[7]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.violet &&\r\n    css`\r\n      background: ${palette.violet[9]};\r\n      color: #fff;\r\n      &:hover {\r\n        background: ${palette.violet[7]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.red &&\r\n    css`\r\n      background: ${palette.red[8]};\r\n      &:hover {\r\n        background: ${palette.red[6]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[6]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.yellow &&\r\n    css`\r\n      background: ${palette.yellow[5]};\r\n      &:hover {\r\n        background: ${palette.yellow[3]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.transparent &&\r\n    css`\r\n      background: none;\r\n      color: ${({ theme }) => theme.text};\r\n      border: 1px solid ${({ theme }) => theme.text};\r\n      &:hover {\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.gray[7]};\r\n      }\r\n    `}\r\n    \r\n  ${(props) =>\r\n    props.themeColor &&\r\n    css`\r\n      background: ${({ theme }) => theme.themeColorBody};\r\n      color: ${palette.gray[1]};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.themeColorHoverBody};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? <StyledLink {...props} /> : <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","const palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n  red: [\r\n    '#fff5f5',\r\n    '#ffe3e3',\r\n    '#ffc9c9',\r\n    '#ffa8a8',\r\n    '#ff8787',\r\n    '#ff6b6b',\r\n    '#fa5252',\r\n    '#f03e3e',\r\n    '#e03131',\r\n    '#c92a2a',\r\n  ],\r\n  violet: [\r\n    '#f3f0ff',\r\n    '#e5dbff',\r\n    '#d0bfff',\r\n    '#b197fc',\r\n    '#9775fa',\r\n    '#845ef7',\r\n    '#7950f2',\r\n    '#7048e8',\r\n    '#6741d9',\r\n    '#5f3dc4',\r\n  ],\r\n  indigo: [\r\n    '#edf2ff',\r\n    '#dbe4ff',\r\n    '#bac8ff',\r\n    '#91a7ff',\r\n    '#748ffc',\r\n    '#5c7cfa',\r\n    '#4c6ef5',\r\n    '#4263eb',\r\n    '#3b5bdb',\r\n    '#364fc7',\r\n  ],\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '#0b7285',\r\n  ],\r\n  yellow: [\r\n    '#fff9db',\r\n    '#fff3bf',\r\n    '#ffec99',\r\n    '#ffe066',\r\n    '#ffd43b',\r\n    '#fcc419',\r\n    '#fab005',\r\n    '#f59f00',\r\n    '#f08c00',\r\n    '#e67700',\r\n  ]\r\n};\r\n\r\nexport default palette;","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const writePost = ({ title, body, tags }) =>\r\n  client.post('/api/post/write', { title, body, tags });\r\n\r\nexport const readPost = id => client.get(`/api/post/${id}`);\r\n\r\nexport const updatePost = ({ id, title, body, tags }) =>\r\n  client.patch(`/api/post/${id}`, { title, body, tags });\r\n\r\nexport const removePost = id => client.delete(`/api/post/${id}`);\r\n\r\nexport const getList = ({ page, tag, username, block }) => {\r\n  const queryString = qs.stringify({ page, tag, username, block });\r\n  return client.get(`/api/post/list?${queryString}`);\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => {\r\n  return (\r\n    <TagsBlock className=\"tags\">\r\n      {limit > 0 &&\r\n        tags.map(\r\n          (tag, index) =>\r\n            index < limit && (\r\n              <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n                #{tag}\r\n              </Link>\r\n            ),\r\n        )}\r\n      {limit > 0 && limit < tags.length && <span>...</span>}\r\n      {!limit &&\r\n        tags.map(tag => (\r\n          <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n            #{tag}\r\n          </Link>\r\n        ))}\r\n    </TagsBlock>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({ ...state, [action.payload]: true }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst SubInfoBlock = styled.div`\r\n  ${(props) =>\r\n    props.hasMarginTop &&\r\n    css`\r\n      margin-top: 1rem;\r\n    `}\r\n  color: ${({ theme }) => theme.postSubInfoText};\r\n  .username {\r\n    font-family:'Raleway';\r\n    font-weight:600;\r\n  }\r\n  .username:hover {\r\n    color: ${({ theme }) => theme.postSubInfoHoverText};\r\n  }\r\n\r\n  /* span 사이 가운뎃점 문자 출력 */\r\n  span + span:before {\r\n    padding: 0 0.25rem;\r\n    content: '\\\\B7'; /* 가운뎃점 문자 */\r\n  }\r\n\r\n  .publishedDate {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\r\n  return (\r\n    <SubInfoBlock hasMarginTop={hasMarginTop} className=\"subinfo\">\r\n      <span className=\"username\">\r\n        <Link to={`/blog/@${username}`}>\r\n          <b>{username}</b>\r\n        </Link>\r\n      </span>\r\n      {publishedDate && (\r\n        <span className=\"publishedDate\">\r\n          {dayjs(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n        </span>\r\n      )}\r\n    </SubInfoBlock>\r\n  );\r\n};\r\n\r\nexport default SubInfo;\r\n"],"sourceRoot":""}