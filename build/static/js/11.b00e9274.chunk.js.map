{"version":3,"sources":["components/common/ErrorBlock.js","components/common/LoadingProgress.js","components/post/common/Tags.js","components/post/common/SubInfo.js","components/common/Modal.js","components/post/PostViewer.js","components/post/AskRemoveModal.js","components/post/PostActionButtions.js","containers/post/PostViewerContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","LoadingProgressBlock","props","customHeight","css","CustomCircularProgress","CircularProgress","categoryBorder","LoadingProgress","full","body","className","TagsBlock","postTagText","postTagHoverText","buildLink","username","tag","query","qs","stringify","Tags","tags","limit","map","index","to","key","length","SubInfoBlock","hasMarginTop","postSubInfoText","postSubInfoHoverText","SubInfo","publishedDate","moment","format","FullScreen","AskModalBlock","SingleInputModalBlock","themeColorBody","StyledButton","Button","StyledTextField","TextField","placeholder","themeColorHoverBody","AskModal","visible","title","description","confirmText","cancelText","onConfirm","onCancel","in","onClick","themeColor","SingleInputModal","inputLabel","inputName","submitText","onSubmit","onChange","value","error","resultMessage","success","failure","id","label","name","require","PostViewerBlock","Responsive","PostViewerErrorBlock","PostHead","postBorder","PostContent","PostViewer","post","loading","actionButtons","response","status","statusText","publisher","dangerouslySetInnerHTML","__html","AskRemoveModal","PostActionButtionsBlock","ActionButton","button","postActionButtonText","postActionButtonBody","postActionButtonHoverText","postActionButtonHoverBody","PostActionButtions","onEdit","onRemove","useState","modal","setModal","useEffect","window","onclick","event","target","includes","withRouter","match","history","dispatch","useDispatch","postId","params","useSelector","user","postError","a","removePost","push","readPost","unloadPost","isPublisher","setOriginalPost"],"mappings":"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","file":"static/js/11.b00e9274.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={full ? 'full-height' : body ? 'body-height' : ''}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 포스트의 태그를 출력하는 컴포넌트\r\n */\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => {\r\n  return (\r\n    <TagsBlock className=\"tags\">\r\n      {limit > 0 &&\r\n        tags.map(\r\n          (tag, index) =>\r\n            index < limit && (\r\n              <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n                #{tag}\r\n              </Link>\r\n            ),\r\n        )}\r\n      {limit > 0 && limit < tags.length && <span>...</span>}\r\n      {!limit &&\r\n        tags.map((tag) => (\r\n          <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n            #{tag}\r\n          </Link>\r\n        ))}\r\n    </TagsBlock>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n/**\r\n *  포스트의 부가정보(작성자, 작성일자)를 출력하는 컴포넌트\r\n */\r\n\r\nconst SubInfoBlock = styled.div`\r\n  ${(props) =>\r\n    props.hasMarginTop &&\r\n    css`\r\n      margin-top: 1rem;\r\n    `}\r\n  color: ${({ theme }) => theme.postSubInfoText};\r\n  .username {\r\n    font-family:'Raleway';\r\n    font-weight:600;\r\n  }\r\n  .username:hover {\r\n    color: ${({ theme }) => theme.postSubInfoHoverText};\r\n  }\r\n\r\n  /* span 사이 가운뎃점 문자 출력 */\r\n  span + span:before {\r\n    padding: 0 0.25rem;\r\n    content: '\\\\B7'; /* 가운뎃점 문자 */\r\n  }\r\n\r\n  .publishedDate {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\r\n  return (\r\n    <SubInfoBlock hasMarginTop={hasMarginTop} className=\"subinfo\">\r\n      <span className=\"username\">\r\n        <Link to={`/blog/@${username}`}>\r\n          <b>{username}</b>\r\n        </Link>\r\n      </span>\r\n      {publishedDate && (\r\n        <span className=\"publishedDate\">\r\n          {moment(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n        </span>\r\n      )}\r\n    </SubInfoBlock>\r\n  );\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\n/**\r\n * 공통 모달 컴포넌트\r\n */\r\n\r\nconst FullScreen = styled.div`\r\n  position: fixed;\r\n  z-index: 30;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${({ theme }) =>\r\n    theme.body === '#fff' ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.45)'};\r\n  font-family: 'NanumBarunGothic';\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n/**\r\n * 확인/취소 모달 스타일\r\n */\r\nconst AskModalBlock = styled.div`\r\n  width: 320px;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: ${({ theme }) =>\r\n    theme.body === '#fff'\r\n      ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n      : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n  }\r\n  p {\r\n    margin-bottom: 3rem;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\n/**\r\n * 싱글 input 모달 스타일\r\n */\r\nconst SingleInputModalBlock = styled.div`\r\n  width: 320px;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: ${({ theme }) =>\r\n    theme.body === '#fff'\r\n      ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n      : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n  }\r\n  p {\r\n    margin-bottom: 1rem;\r\n  }\r\n  .single-input-form {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n  .result {\r\n    font-size: 0.9rem;\r\n  }\r\n  .result.success {\r\n    color: ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .result.failure {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\n// 공통 버튼\r\nconst StyledButton = styled(Button)`\r\n  height: 2rem;\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\n// input 텍스트필드\r\nconst StyledTextField = styled(TextField)`\r\n  &.MuiTextField-root {\r\n    margin-bottom: 1rem;\r\n    width: 8rem;\r\n  }\r\n  .MuiFormLabel-root {\r\n    font-family: 'Raleway';\r\n    letter-spacing: 2px;\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  .MuiFormLabel-root.Mui-focused {\r\n    color: ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .MuiInput-underline:hover:not(.Mui-disabled):before {\r\n    border-bottom: 2px solid ${({ theme }) => theme.themeColorHoverBody};\r\n  }\r\n  .MuiInput-underline:before {\r\n    border-bottom: 1px solid ${({ theme }) => theme.text};\r\n  }\r\n  .MuiInput-underline:after {\r\n    border-bottom: 2px solid ${({ theme }) => theme.themeColorBody};\r\n  }\r\n  .MuiInputBase-input {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .MuiInputBase-input::placeholder {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const AskModal = ({\r\n  className,\r\n  visible,\r\n  title,\r\n  description,\r\n  confirmText = '확인',\r\n  cancelText = '취소',\r\n  onConfirm,\r\n  onCancel,\r\n}) => {\r\n  return (\r\n    visible && (\r\n      <Fade in={visible}>\r\n        <FullScreen className={className}>\r\n          <AskModalBlock>\r\n            <h2>{title}</h2>\r\n            <p>{description}</p>\r\n            <div className=\"buttons\">\r\n              <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n              <StyledButton themeColor onClick={onConfirm}>\r\n                {confirmText}\r\n              </StyledButton>\r\n            </div>\r\n          </AskModalBlock>\r\n        </FullScreen>\r\n      </Fade>\r\n    )\r\n  );\r\n};\r\n\r\nexport const SingleInputModal = ({\r\n  className,\r\n  visible,\r\n  title,\r\n  description,\r\n  inputLabel,\r\n  inputName,\r\n  placeholder,\r\n  submitText = '확인',\r\n  cancelText = '닫기',\r\n  onSubmit,\r\n  onCancel,\r\n  onChange,\r\n  value,\r\n  error,\r\n  resultMessage,\r\n}) => {\r\n  const { success, failure } = resultMessage;\r\n  return (\r\n    visible && (\r\n      <Fade in={visible}>\r\n        <FullScreen className={className}>\r\n          <SingleInputModalBlock>\r\n            <h2>{title}</h2>\r\n            <p>{description}</p>\r\n            <form onSubmit={onSubmit}>\r\n              <div className=\"single-input-form\">\r\n                <StyledTextField\r\n                  id=\"standard-basic\"\r\n                  label={inputLabel}\r\n                  name={inputName}\r\n                  require=\"true\"\r\n                  onChange={onChange}\r\n                  value={value}\r\n                  error={error}\r\n                  placeholder={placeholder}\r\n                />\r\n                <div className=\"buttons\">\r\n                  <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n                  <StyledButton themeColor onClick={onSubmit}>\r\n                    {submitText}\r\n                  </StyledButton>\r\n                </div>\r\n              </div>\r\n              {success !== '' && (\r\n                <span className=\"result success\">{success}</span>\r\n              )}\r\n              {failure !== '' && (\r\n                <span className=\"result failure\">{failure}</span>\r\n              )}\r\n            </form>\r\n          </SingleInputModalBlock>\r\n        </FullScreen>\r\n      </Fade>\r\n    )\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport SubInfo from './common/SubInfo';\r\nimport Tags from './common/Tags';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst PostViewerErrorBlock = styled(ErrorBlock)`\r\n  margin: 3rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 2rem;\r\n  h1 {\r\n    font-size: 1.5rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 570px;\r\n  }\r\n  .ql-align-left {\r\n    text-align: left;\r\n  }\r\n  .ql-align-center {\r\n    text-align: center;\r\n  }\r\n  .ql-align-right {\r\n    text-align: right;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    .ql-video {\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostViewer = ({ post, loading, error, actionButtons }) => {\r\n  // 에러 처리\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return (\r\n        <PostViewerErrorBlock>\r\n          <span className=\"error-title\">존재하지 않는 포스트입니다.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </PostViewerErrorBlock>\r\n      );\r\n    } else {\r\n      return (\r\n        <PostViewerErrorBlock>\r\n          <span className=\"error-title\">포스트 요청 실패.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </PostViewerErrorBlock>\r\n      );\r\n    }\r\n  }\r\n  // 로딩 중이거나 아직 포스트 데이터가 없을 때\r\n  if (loading || !post) {\r\n    return <LoadingProgress body />;\r\n  }\r\n  // 렌더링 데이터\r\n  const { title, body, tags, publisher, publishedDate } = post;\r\n  return (\r\n    <PostViewerBlock>\r\n      <Helmet>\r\n        <title>{title} - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <PostHead>\r\n        <h1>{title}</h1>\r\n        <SubInfo\r\n          hasMarginTop\r\n          username={publisher.username}\r\n          publishedDate={publishedDate}\r\n        />\r\n        <Tags tags={tags} />\r\n      </PostHead>\r\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\r\n      {actionButtons}\r\n    </PostViewerBlock>\r\n  );\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from 'react';\r\nimport { AskModal } from '../common/Modal';\r\n\r\nconst AskRemoveModal = ({ className, visible, onConfirm, onCancel }) => {\r\n  return (\r\n    <AskModal\r\n      className={className}\r\n      visible={visible}\r\n      title=\"DELETE POST\"\r\n      description=\"정말 POST를 삭제하시겠습니까?\"\r\n      confirmText=\"삭제\"\r\n      onConfirm={onConfirm}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport AskRemoveModal from './AskRemoveModal';\r\n\r\nconst PostActionButtionsBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 2rem;\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  color: ${({ theme }) => theme.postActionButtonText};\r\n  background: ${({ theme }) => theme.postActionButtonBody};\r\n  font-weight: 600;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n  &:hover {\r\n    color: ${({ theme }) => theme.postActionButtonHoverText};\r\n    background: ${({ theme }) => theme.postActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst PostActionButtions = ({ onEdit, onRemove }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const onRemoveClick = () => {\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    onRemove();\r\n  };\r\n\r\n  /* 모달 영역 밖 클릭시 모달 닫기 */\r\n  useEffect(() => {\r\n    window.onclick = event => {\r\n      if (\r\n        !!event.target.className.includes &&\r\n        event.target.className.includes('modal')\r\n      ) {\r\n        setModal(false);\r\n      }\r\n    };\r\n    // 언마운트시 이벤트 제거\r\n    return () => {\r\n      window.onclick = () => {};\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PostActionButtionsBlock>\r\n        <ActionButton onClick={onEdit}>수정</ActionButton>\r\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n      </PostActionButtionsBlock>\r\n      <AskRemoveModal\r\n        className=\"modal\"\r\n        visible={modal}\r\n        onConfirm={onConfirm}\r\n        onCancel={onCancel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostActionButtions;\r\n","import React, { useEffect } from 'react';\r\nimport PostViewer from '../../components/post/PostViewer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { readPost, unloadPost, setOriginalPost } from '../../module/redux/post';\r\nimport PostActionButtions from '../../components/post/PostActionButtions';\r\nimport { removePost } from '../../lib/api/post';\r\n\r\nconst PostViewerContainer = ({ match, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { postId } = match.params;\r\n  const { post, error, loading, user } = useSelector(\r\n    ({ post, loading, user }) => ({\r\n      post: post.post,\r\n      error: post.postError,\r\n      loading: loading['post/READ_POST'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n\r\n  // 이벤트 정의\r\n  const onEdit = () => {\r\n    dispatch(setOriginalPost(post));\r\n    history.push('/blog/write');\r\n  };\r\n\r\n  const onRemove = async () => {\r\n    try {\r\n      await removePost(postId);\r\n      history.push('/blog');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(readPost(postId));\r\n    // 언마운트 될 때 포스트 데이터 제거\r\n    return () => {\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, postId]);\r\n\r\n  const isPublisher =\r\n    (post && post.publisher.username) === (user && user.username);\r\n\r\n  return (\r\n    <PostViewer\r\n      post={post}\r\n      loading={loading}\r\n      error={error}\r\n      actionButtons={\r\n        isPublisher && (\r\n          <PostActionButtions onEdit={onEdit} onRemove={onRemove} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n"],"sourceRoot":""}