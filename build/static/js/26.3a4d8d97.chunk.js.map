{"version":3,"sources":["components/post/write/Editor.js","containers/post/write/EditorContainer.js"],"names":["Quill","debug","register","ImageResize","EditorBlock","styled","Responsive","TitleInput","input","theme","editorTitleBorder","body","QuillWrapper","div","editorText","Editor","title","onChangeField","quillElement","useRef","quillInstance","useEffect","current","placeholder","modules","imageResize","toolbar","header","indent","align","list","color","background","quill","on","delta","oldDelta","source","key","value","root","innerHTML","mounted","onChange","e","target","ref","EditorContainer","dispatch","useDispatch","useSelector","post","useCallback","payload","changeField","initialize"],"mappings":"05BAOAA,IAAMC,MAAM,SACZD,IAAME,SAAS,sBAAuBC,KAEtC,IAAMC,EAAcC,YAAOC,IAAPD,CAAH,KAIXE,EAAaF,IAAOG,MAAV,KAKa,qBAAGC,MAAkBC,qBAClC,qBAAGD,MAAkBE,QAK/BC,EAAeP,IAAOQ,IAAV,KAML,qBAAGJ,MAAkBK,cAGrB,qBAAGL,MAAkBK,cAuEnBC,EA7DA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOL,EAA0B,EAA1BA,KAAMM,EAAoB,EAApBA,cACvBC,EAAeC,iBAAO,MACtBC,EAAgBD,iBAAO,MAE7BE,qBAAU,WACRD,EAAcE,QAAU,IAAItB,IAAMkB,EAAaI,QAAS,CACtDb,MAAO,SACPc,YAAa,qCACbC,QAAS,CACPC,YAAa,CACXD,QAAS,CAAC,SAAU,gBAGtBE,QAAS,CACP,CAAC,CAAEC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,CAAEC,OAAQ,MAAQ,CAAEA,OAAQ,OAC7B,CAAC,CAAEC,MAAO,KACV,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAEC,MAAO,IAAM,CAAEC,WAAY,KAC9B,CAAC,SACD,CAAC,aAAc,aAAc,OAAQ,SACrC,CAAC,aAMP,IAAMC,EAAQb,EAAcE,QAC5BW,EAAMC,GAAG,eAAe,SAACC,EAAOC,EAAUC,GACzB,SAAXA,GACFpB,EAAc,CAAEqB,IAAK,OAAQC,MAAON,EAAMO,KAAKC,iBAGlD,CAACxB,IAGJ,IAAMyB,EAAUvB,kBAAO,GACvBE,qBAAU,WACJqB,EAAQpB,UACZoB,EAAQpB,SAAU,EAClBF,EAAcE,QAAQkB,KAAKC,UAAY9B,KACtC,CAACA,IAKJ,OACE,kBAACP,EAAD,KACE,kBAACG,EAAD,CACEgB,YAAY,kCACZgB,MAAOvB,EACP2B,SARgB,SAACC,GACrB3B,EAAc,CAAEqB,IAAK,QAASC,MAAOK,EAAEC,OAAON,WAS5C,kBAAC3B,EAAD,KACE,yBAAKkC,IAAK5B,OCxEH6B,UArBS,WAEtB,IAAMC,EAAWC,cAFW,EAIJC,aAAY,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACjDnC,MAAOmC,EAAKnC,MACZL,KAAMwC,EAAKxC,SAFLK,EAJoB,EAIpBA,MAAOL,EAJa,EAIbA,KAKTM,EAAgBmC,uBAAY,SAAAC,GAAO,OAAIL,EAASM,YAAYD,MAAW,CAC3EL,IAQF,OALA3B,qBAAU,WACR,OAAO,WACL2B,EAASO,kBAEV,CAACP,IACG,kBAAC,EAAD,CAAQ/B,cAAeA,EAAeD,MAAOA,EAAOL,KAAMA","file":"static/js/26.3a4d8d97.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../../common/Responsive';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.debug('error');\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding: 5rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 2rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${({ theme }) => theme.editorTitleBorder};\r\n  background: ${({ theme }) => theme.body};\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    color: ${({ theme }) => theme.editorText};\r\n    left: 0;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ title, body, onChangeField }) => {\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '포스트 작성...',\r\n      modules: {\r\n        imageResize: {\r\n          modules: ['Resize', 'DisplaySize'],\r\n        },\r\n        // 참고: https://quilljs.com/docs/modules/toolbar/\r\n        toolbar: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ indent: '-1' }, { indent: '+1' }],\r\n          [{ align: [] }],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          ['video'],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n          ['clean'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  /* useRef를 사용하여 에디터 내 편집할 데이터 삽입 */\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  const onChangeTitle = (e) => {\r\n    onChangeField({ key: 'title', value: e.target.value });\r\n  };\r\n  return (\r\n    <EditorBlock>\r\n      <TitleInput\r\n        placeholder=\"포스트 제목\"\r\n        value={title}\r\n        onChange={onChangeTitle}\r\n      />\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initialize } from '../../../module/redux/post';\r\nimport { useEffect } from 'react';\r\nimport Editor from '../../../components/post/write/Editor';\r\n\r\nconst EditorContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body } = useSelector(({ post }) => ({\r\n    title: post.title,\r\n    body: post.body,\r\n  }));\r\n  // 액션함수를 토대로 이벤트 정의\r\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [\r\n    dispatch,\r\n  ]);\r\n  // 언마운트될 때 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default EditorContainer;\r\n"],"sourceRoot":""}