{"version":3,"sources":["lib/createRequest.js","lib/api/auth.js","module/redux/user.js","lib/api/user.js","components/common/CustomSwitch.js","module/redux/theme.js","components/common/Header.js","containers/common/HeaderContainer.js","components/common/BodyBlock.js","components/main/BlogSection.js","containers/main/BlogSectionContainer.js","components/main/WikiSection.js","module/redux/wiki.js","lib/api/wiki.js","containers/main/WikiSectionContainer.js","components/main/Main.js","containers/main/MainContainer.js","pages/main/MainPage.js","lib/styles/theme.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","module/redux/auth.js","containers/auth/LoginForm.js","pages/auth/LoginPage.js","containers/auth/RegisterForm.js","pages/auth/RegisterPage.js","components/common/editor/EditorFooter.js","components/post/write/Editor.js","containers/post/write/EditorContainer.js","components/post/write/TagBox.js","containers/post/write/TagBoxContainer.js","components/common/editor/WriteActionButtons.js","containers/post/write/WriteActionButtonsContainer.js","pages/post/PostWritePage.js","components/post/PostViewer.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtions.js","containers/post/PostViewerContainer.js","pages/post/PostPage.js","pages/post/PostListPage.js","pages/auth/callback/LoginWithNaverPage.js","pages/auth/callback/LoginWithKakaoPage.js","components/wiki/WikiViewer.js","containers/wiki/WikiViewerContainer.js","components/wiki/WikiSearch.js","containers/wiki/WikiSearchContainer.js","pages/wiki/WikiPage.js","components/wiki/edit/Editor.js","containers/wiki/edit/EditorContainer.js","containers/wiki/edit/WriteActionButtonsContainer.js","pages/wiki/WikiEditPage.js","components/wiki/WikiRequest.js","containers/wiki/WikiRequestContainer.js","pages/wiki/WikiRequestPage.js","components/wiki/WikiHistory.js","containers/wiki/WikiHistoryContainer.js","pages/wiki/WikiHistoryPage.js","components/wiki/WikiList.js","components/common/Category.js","components/wiki/Categories.js","containers/wiki/WikiListContainer.js","pages/wiki/WikiListPage.js","components/profile/MyPageMenu.js","containers/profile/MyPageMenuContainer.js","components/common/FlexContentBlock.js","components/profile/Profile.js","containers/profile/ProfileContainer.js","pages/profile/MyPage.js","components/profile/Security.js","containers/profile/SecurityContainer.js","pages/profile/SecurityPage.js","components/profile/Activity.js","containers/profile/ActivityContainer.js","pages/profile/ActivityPage.js","App.js","serviceWorker.js","module/redux/index.js","index.js","lib/api/client.js","module/redux/post.js","components/common/Responsive.js","components/common/Button.js","components/common/ErrorBlock.js","lib/styles/open-color.js","lib/api/post.js","components/post/common/Tags.js","module/redux/loading.js","components/post/common/SubInfo.js","components/common/Pagination.js","containers/post/PaginationContainer.js"],"names":["createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","action","put","startLoading","call","payload","response","data","meta","error","finishLoading","logout","client","post","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","CHECK_EXIST_NAME","CHECK_EXIST_NAME_SUCCESS","CHECK_EXIST_NAME_FAILURE","UPDATE_NAME","UPDATE_NAME_SUCCESS","UPDATE_NAME_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","check","createAction","tempSetUser","checkExistName","name","changeField","form","key","value","updateName","id","initializeUpdateName","changePassword","password","newPassword","initializeChangePassword","checkSaga","get","checkExistNameSaga","console","log","updateNameSaga","patch","changePasswordSaga","checkFailureSaga","sessionStorage","removeItem","authAPI","takeLatest","handleActions","state","user","checkError","produce","draft","existName","existNameError","updateUser","updateUserError","changePasswordResult","changePasswordError","curPassword","confirmPassword","profile","DarkThemeSwitch","styled","Switch","theme","darkThemeSwitchTrack","darkThemeSwitchBody","setTheme","isDarkTheme","HeaderBlock","nav","body","text","hoverText","palette","gray","dropdownBody","hoverList","Menu","div","SearchResponsive","SearchInputWrapper","SearchInput","input","inputBody","placeholder","indigo","SearchBtn","Link","btnSearchBody","MemoizedEtcDropDown","React","memo","className","to","SearchDropDown","ProfileInfo","OptionMenu","useState","darkTheme","setDarkTheme","dispatch","useDispatch","useEffect","Typography","component","Grid","container","display","alignItems","justify","style","fontSize","fontFamily","letterSpacing","item","checked","onChange","localStorage","setItem","size","LogoutMenu","onLogout","currentPath","onClick","UserDropDown","NoneUserDropDown","SearchInputPackage","tabIndex","icon","Spacer","Header","library","add","faSearch","faEllipsisH","faEllipsisV","faUserCircle","etc","setEtc","search","setSearch","userinfo","setUserinfo","noneuser","setNoneUser","ClickAwayListener","onClickAway","prevOpen","aria-haspopup","justifyContent","Button","transparent","withRouter","location","useSelector","pathname","BodyBlock","props","includeHeader","BlogSectionBlock","PostBlock","postBorder","PostItem","_id","title","tags","publisher","username","Tags","limit","SubInfo","BlogSection","postList","loading","postError","ErrorBlock","message","map","BlogSectionContainer","postListError","postLoading","getList","block","unloadList","WikiSectionBlock","DocumentBlock","wikiBorder","DocumentItem","document","publishedDate","dayjs","format","WikiSection","documentList","wikiSaga","GET_REQUEST_LIST","GET_REQUEST_LIST_SUCCESS","GET_REQUEST_LIST_FAILURE","SET_TITLE","WRITE_DOCUMENT","WRITE_DOCUMENT_SUCCESS","WRITE_DOCUMENT_FAILURE","READ_DOCUMENT","READ_DOCUMENT_SUCCESS","READ_DOCUMENT_FAILURE","GET_DOCUMENT_LIST","GET_DOCUMENT_LIST_SUCCESS","GET_DOCUMENT_LIST_FAILURE","GET_HISTORY_LIST","GET_HISTORY_LIST_SUCCESS","GET_HISTORY_LIST_FAILURE","GET_SEARCH_LIST","GET_SEARCH_LIST_SUCCESS","GET_SEARCH_LIST_FAILURE","GET_DIRECT_TITLE","GET_DIRECT_TITLE_SUCCESS","GET_DIRECT_TITLE_FAILURE","GET_RANDOM_TITLE","GET_RANDOM_TITLE_SUCCESS","GET_RANDOM_TITLE_FAILURE","GET_DOCUMENT_COUNT","GET_DOCUMENT_COUNT_SUCCESS","GET_DOCUMENT_COUNT_FAILURE","getRequestList","setTitle","initialize","writeDocument","readDocument","r","unloadDocument","setOriginalDocument","getDocumentList","getHistoryList","getSearchList","query","oldest","shortest","longest","getDirectTitle","getRandomTitle","getDocumentCount","getRequestListSaga","writeDocumentSaga","readDocumentSaga","queryString","qs","stringify","getDocumentListSaga","getHistoryListSaga","getSearchListSaga","getDirectTitleSaga","getRandomTitleSaga","getDocumentCountSaga","wiki","requestList","requestListError","titleError","editDocument","editDocumentError","directName","directError","randomTitle","randomTitleError","documentError","documentListError","historyList","historyListError","searchList","searchListError","documentCount","documentCountError","WikiSectionContainer","MainBlock","Main","MainContainer","MainPage","lightTheme","categoryBorder","cyan","themeColorBody","themeColorHoverBody","loginBody","loginInputBorder","loginInputBorderFocus","editorTitleBorder","editorText","editorTagComponentBorder","editorTagBoxBorder","editorTagTitle","editorTagButtonBody","editorHoverTagButtonBody","editorTagButtonText","editorTagText","footerText","btnBody","btnHoverBody","btnText","btnDisableBody","btnDisableColor","postSubInfoText","postSubInfoHoverText","postTagText","postTagHoverText","postActionButtonText","postActionButtonHoverText","postActionButtonBody","postActionButtonHoverBody","wikiMenuBorder","wikiActionButtonBody","wikiActionButtonHoverBody","wikiActionButtonText","wikitActionButtonHoverText","wikiHistoryLinkText","wikiHistoryLinkHoverText","errorText","red","profileInfoValueBody","profileInputValid","profileInputInValid","violet","AuthTemplateBlock","ContentBox","AuthTemplate","children","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","GoogleLoginButton","button","buttonStyle","socialBtnStyle","css","NaverLoginButton","a","KakaoLoginButton","textMap","login","signinGoogle","register","ErrorMessage","AuthForm","onSubmit","onSocialLogin","googleLoginBtn","useRef","auth2","loadGoogleLoginApi","window","load","current","init","client_id","process","cookiepolicy","scope","attachClickHandler","googleUser","id_token","getAuthResponse","JSON","undefined","script","srcValue","referenceNode","getElementsByTagName","getElementById","googlejssdkNode","createElement","src","parentNode","insertBefore","loadScript","tagName","targetId","targetNode","node","indexOf","removeChild","removeTag","sdkNode","removeJssdk","removeApiScript","autoComplete","passwordConfirm","fullWidth","ref","faGoogle","requestUrl","alt","authSaga","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_WITH_GOOGLE","LOGIN_WITH_GOOGLE_SUCCESS","LOGIN_WITH_GOOGLE_FAILURE","LOGIN_WITH_NAVER","LOGIN_WITH_NAVER_SUCCESS","LOGIN_WITH_NAVER_FAILURE","LOGIN_WITH_KAKAO","LOGIN_WITH_KAKAO_SUCCESS","LOGIN_WITH_KAKAO_FAILURE","changeFieid","initializeForm","loginWithGoogle","loginWithNaver","client_secret","code","loginWithKakao","redirect_uri","registerSaga","loginSaga","loginWithGoogleSaga","loginWithNaverSaga","loginWithKakaoSaga","initialState","auth","authError","history","setError","status","goBack","e","target","preventDefault","includes","LoginPage","push","RegisterPage","EditorFooterBlock","EditorFooter","editorName","editorHref","Quill","ImageResize","EditorBlock","Responsive","TitleInput","QuillWrapper","Editor","onChangeField","quillElement","quillInstance","modules","imageResize","toolbar","header","indent","align","list","color","background","quill","on","delta","oldDelta","source","root","innerHTML","mounted","EditorContainer","useCallback","TagBoxBlock","TagForm","Tag","TagListBlock","TagItem","tag","onRemove","TagList","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","nextTags","filter","t","trim","TagBoxContainer","WriteActionButtonsBlock","StyledButton","WriteActionButtons","isEdit","onCancel","editPost","editPostError","targetPostId","updatePost","writePost","replace","PostViewerBlock","PostViewerErrorBlock","PostHead","PostContent","PostViewer","actionButtons","statusText","hasMarginTop","dangerouslySetInnerHTML","__html","FullScreen","AskModalBlock","AskModal","visible","description","confirmText","cancelText","onConfirm","AskRemoveModal","PostActionButtionsBlock","ActionButton","PostActionButtions","onEdit","modal","setModal","onclick","event","match","postId","params","removePost","readPost","unloadPost","isPublisher","setOriginalPost","PostPage","PostListContainer","loadable","PostListPage","parse","ignoreQueryPrefix","WikiViewerBlock","WikiViewerErrorBlock","DocumentMenuBlock","DocumentMenu","docName","TitleBlock","DocumentContent","WikiViewer","WikiSearchBlock","SearchBlock","SearchButton","WikiSearch","onSearch","onDirect","onShuffle","faRandom","faArrowRight","onKeyUp","keyCode","WikiPage","localTitle","getItem","WikiRequestBlock","wikiActionButtonHoverText","WikiRequestErrorBlock","RequestItem","WikiRequest","length","WikiRequestPage","WikiHistoryBlock","HistoryErrorBlock","HistoryItem","revision","WikiHistory","WikiHistoryPage","WikiListBlock","WikiListErrorBlock","WikiList","Category","NavLink","categories","CategoriesBlock","category","activeClassName","exact","isActive","isValidQuery","WikiListPage","MyPageMenuBlock","MenuList","link","NavMenu","MyPageMenu","menu","MyPageMenuContainer","FlexContentBlock","direction","ProfileBlock","StyleInput","ProfileSubmitButton","ProfileErrorBlock","Profile","validName","nameMessage","equalName","submitMessage","errorMessage","provider","themeColor","disabled","ProfileContainer","setValidName","setEqualName","setNameMessage","setSubmitMessage","setErrorMessage","loadingForm","result","loginName","toLowerCase","MyPage","SecurityBlock","PasswordInput","Security","valid","validMessage","submitPassword","validCur","validNew","validConfirm","validMessageCur","validMessageNew","validMessageConfirm","SecurityContainer","setValid","setValidMessage","setSubmitPassword","stateValidMessage","isValidNewPassword","isValidConfirmPassword","curValid","newValid","confirmValid","SecurityPage","ActivityBlock","Activity","postCount","lastPage","loadingPost","loadingWiki","PaginationContainer","ActivityContainer","ActivityPage","App","path","LoginWithNaverPage","LoginWithKakaoPage","PostWritePage","WikiEditPage","Boolean","hostname","rootSaga","all","postSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","loadUser","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","axios","create","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","GET_LIST","GET_LIST_SUCCESS","GET_LIST_FAILURE","page","writePostSaga","postAPI","readPostSaga","updatePostSaga","getListSaga","neditPosttError","parseInt","headers","ResponsiveBlock","rest","yellow","StyledLink","delete","TagsBlock","buildLink","index","requestType","SubInfoBlock","PaginationBlock","PageButton","Pagination","pageNumber","front","mid","end","endpointSite","endpointBlockCount","i","halfBlockCount","blockCount","count","sort","b","concat","getPageNumber","number"],"mappings":"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","file":"static/js/main.ab0e1c20.chunk.js","sourcesContent":["import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../module/redux/loading';\r\n\r\nexport const createRequestActionTypes = type => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport const createRequestSaga = (type, request) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function*(action) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n        meta: response,\r\n      });\r\n    } catch (error) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: error,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type));\r\n  };\r\n};\r\n","import client from './client';\r\n\r\nexport const register = ({ username, password }) =>\r\n  client.post('/api/auth/register', { username, password });\r\n\r\nexport const login = ({ username, password }) =>\r\n  client.post('/api/auth/login', { username, password });\r\n\r\nexport const loginWithGoogle = ({ id_token }) =>\r\n  client.post('/api/auth/login/google', { id_token });\r\n\r\nexport const loginWithNaver = ({ client_id, client_secret, code, state }) =>\r\n  client.post('/api/auth/login/naver', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  });\r\n\r\nexport const loginWithKakao = ({\r\n  client_id,\r\n  client_secret,\r\n  code,\r\n  redirect_uri,\r\n}) =>\r\n  client.post('/api/auth/login/kakao', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  });\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n// api - change name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('user/CHECK_EXIST_NAME');\r\nconst CHANGE_FIELD = 'user/CHANGE_FIELD';\r\nconst [\r\n  UPDATE_NAME,\r\n  UPDATE_NAME_SUCCESS,\r\n  UPDATE_NAME_FAILURE,\r\n] = createRequestActionTypes('user/UPDATE_NAME');\r\nconst INITIALIZE_UPDATE_NAME = 'user/INITIALIZE_UPDATE_NAME';\r\n// api - change password\r\nconst [\r\n  CHANGE_PASSWORD,\r\n  CHANGE_PASSWORD_SUCCESS,\r\n  CHANGE_PASSWORD_FAILURE,\r\n] = createRequestActionTypes('user/CHANGE_PASSWORD');\r\nconst INITIALIZE_CHANGE_PASSWORD = 'user/INITIALIZE_CHANGE_PASSWORD';\r\n\r\n/* action */\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\nexport const tempSetUser = createAction(TEMP_SET_USER);\r\nexport const checkExistName = createAction(CHECK_EXIST_NAME, (name) => name);\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({ form, key, value }),\r\n);\r\nexport const updateName = createAction(UPDATE_NAME, ({ id, name }) => ({\r\n  id,\r\n  name,\r\n}));\r\nexport const initializeUpdateName = createAction(INITIALIZE_UPDATE_NAME);\r\nexport const changePassword = createAction(\r\n  CHANGE_PASSWORD,\r\n  ({ id, password, newPassword }) => ({ id, password, newPassword }),\r\n);\r\nexport const initializeChangePassword = createAction(\r\n  INITIALIZE_CHANGE_PASSWORD,\r\n);\r\n\r\n/* redux-saga */\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\nconst updateNameSaga = createRequestSaga(UPDATE_NAME, userAPI.updateName);\r\nconst changePasswordSaga = createRequestSaga(\r\n  CHANGE_PASSWORD,\r\n  userAPI.changePassword,\r\n);\r\n\r\nconst checkFailureSaga = () => {\r\n  try {\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n  yield takeLatest(CHECK_EXIST_NAME, checkExistNameSaga);\r\n  yield takeLatest(UPDATE_NAME, updateNameSaga);\r\n  yield takeLatest(CHANGE_PASSWORD, changePasswordSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n  profile: {\r\n    name: '',\r\n  },\r\n  password: {\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n  existName: null,\r\n  existNameError: null,\r\n  updateUser: null,\r\n  updateUserError: null,\r\n  changePasswordResult: null,\r\n  changePasswordError: null,\r\n};\r\n\r\n/* reducer */\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: existName }) => ({\r\n      ...state,\r\n      existName,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (state, { payload: existNameError }) => ({\r\n      ...state,\r\n      existNameError,\r\n    }),\r\n    [UPDATE_NAME_SUCCESS]: (state, { payload: updateUser }) => ({\r\n      ...state,\r\n      updateUser,\r\n    }),\r\n    [UPDATE_NAME_FAILURE]: (state, { payload: updateUserError }) => ({\r\n      ...state,\r\n      updateUserError,\r\n    }),\r\n    [INITIALIZE_UPDATE_NAME]: (state) => ({\r\n      ...state,\r\n      updateUser: null,\r\n      updateUserError: null,\r\n      existName: null,\r\n      existNameError: null,\r\n    }),\r\n    [CHANGE_PASSWORD_SUCCESS]: (state, { payload: changePasswordResult }) => ({\r\n      ...state,\r\n      changePasswordResult: !!changePasswordResult,\r\n    }),\r\n    [CHANGE_PASSWORD_FAILURE]: (state, { payload: changePasswordError }) => ({\r\n      ...state,\r\n      changePasswordResult: false,\r\n      changePasswordError,\r\n    }),\r\n    [INITIALIZE_CHANGE_PASSWORD]: (state) => ({\r\n      ...state,\r\n      changePasswordResult: null,\r\n      changePasswordError: null,\r\n      password: {\r\n        curPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import client from './client';\r\n\r\nexport const checkExistName = (name) => {\r\n  console.log(name);\r\n  return client.post('/api/user/checkName', { name });\r\n};\r\n\r\nexport const updateName = ({ id, name }) =>\r\n  client.patch('/api/user/profile', { id, name });\r\n\r\nexport const changePassword = ({ id, password, newPassword }) =>\r\n  client.patch('/api/user/password', { id, password, newPassword });\r\n","import styled from 'styled-components';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport const DarkThemeSwitch = styled(Switch)`\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n    background-color: ${({ theme }) => theme.darkThemeSwitchTrack};\r\n  }\r\n  .MuiSwitch-switchBase {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n`;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\n/* action type */\r\nconst SET_THEME = 'theme/SET_THEME';\r\n\r\n/* action */\r\nexport const setTheme = createAction(SET_THEME);\r\n\r\n/* redux-saga */\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  isDarkTheme: false,\r\n};\r\n\r\n/* reducer */\r\nconst theme = handleActions(\r\n  {\r\n    [SET_THEME]: (state, { payload: isDarkTheme }) => ({\r\n      ...state,\r\n      isDarkTheme,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default theme;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faEllipsisH,\r\n  faEllipsisV,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Button from './Button';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DarkThemeSwitch } from './CustomSwitch';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTheme } from '../../module/redux/theme';\r\n\r\nconst HeaderBlock = styled.nav`\r\n  position: fixed;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.body};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  li {\r\n    list-style-type: none !important;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n  }\r\n  .header-mid {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .header-right {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .logo {\r\n    margin-left: 0.25rem;\r\n    margin-right: 0.25rem;\r\n    font-size: 1rem;\r\n    letter-spacing: 0.5px;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .menu {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .menu div > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .main-menu {\r\n      display: none;\r\n    }\r\n    .all-menu p {\r\n      margin: 0.5rem 0.5rem 0;\r\n      color: ${palette.gray[5]};\r\n      font-weight: 600;\r\n    }\r\n    .all-menu li {\r\n      margin: 0;\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n  }\r\n  @media screen and (min-width: 501px) {\r\n    .all-menu {\r\n      display: none;\r\n    }\r\n  }\r\n  .btn-sign-in {\r\n    margin-right: 0.5rem;\r\n    margin-left: 1rem;\r\n  }\r\n  .user-info {\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .dropdown {\r\n    position: fixed;\r\n    z-index: 100;\r\n  }\r\n  .dropdown.dropdown-menu {\r\n    width: 14rem;\r\n    top: 2.5rem;\r\n    background: ${({ theme }) => theme.dropdownBody};\r\n    color: ${({ theme }) => theme.text};\r\n    border: none;\r\n    border-radius: 3px;\r\n    box-shadow: ${({ theme }) =>\r\n      theme.body === '#fff'\r\n        ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n        : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n    font-size: 0.8rem;\r\n  }\r\n  .dropdown.dropdown-menu hr {\r\n    margin: 0 0.25rem;\r\n    border: 0;\r\n    height: 1px;\r\n    background: ${palette.gray[5]};\r\n  }\r\n  .dropdown.dropdown-menu ul {\r\n    padding: 0.5rem 0.25rem;\r\n    margin: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li {\r\n    margin-top: 0.25rem;\r\n    padding: 0.5rem;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  .dropdown.dropdown-menu li:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  .dropdown.dropdown-menu.dropdown-user-info {\r\n    width: 16rem;\r\n    right: 0.5rem;\r\n  }\r\n  .profile-menu p {\r\n    margin: 0.5rem 0.5rem 0;\r\n    color: ${({ theme }) => theme.text};\r\n    font-weight: 600;\r\n  }\r\n  .profile-menu li {\r\n    margin: 0;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n  .dropdown.dropdown-search-input {\r\n    display: flex;\r\n    top: 2.75rem;\r\n    right: 6.625rem;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.55);\r\n  }\r\n  .none-user {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Menu = styled.div`\r\n  &:first-child {\r\n    margin-left: 1rem;\r\n  }\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n  &:last-child {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\nconst SearchResponsive = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    .search-input {\r\n      display: flex;\r\n    }\r\n    .search-btn {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    .search-input {\r\n      display: none;\r\n    }\r\n    .search-btn {\r\n      display: inherit;\r\n      color: ${({ theme }) => theme.text};\r\n      margin: 0 1rem;\r\n    }\r\n    .search-btn > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchInputWrapper = styled.div`\r\n  height: 2rem;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst SearchInput = styled.input`\r\n  height: 1.875rem;\r\n  border: none;\r\n  border-top-left-radius: 3px;\r\n  border-bottom-left-radius: 3px;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  background: ${({ theme }) => theme.inputBody};\r\n  color: ${({ theme }) => theme.text};\r\n  &::placeholder {\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  &:focus {\r\n    outline: 2px solid ${palette.indigo[9]};\r\n  }\r\n`;\r\nconst SearchBtn = styled(Link)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.btnSearchBody};\r\n  color: ${({ theme }) => theme.text};\r\n  border-top-right-radius: 3px;\r\n  border-bottom-right-radius: 3px;\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n`;\r\n\r\nconst EtcDropDown = ({ state }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu\">\r\n        <div className=\"all-menu\">\r\n          <p>MAIN MENU</p>\r\n          <ul>\r\n            <Link to=\"/w\">\r\n              <li>WIKI</li>\r\n            </Link>\r\n            <Link to=\"/blog\">\r\n              <li>blog</li>\r\n            </Link>\r\n          </ul>\r\n          <hr />\r\n        </div>\r\n        <ul>\r\n          <Link to=\"/wiki/request\">\r\n            <li>작성이 필요한 문서[WIKI]</li>\r\n          </Link>\r\n          <li>외부사이트 검색(구현 중...)</li>\r\n          <li>바코드 / QR코드 만들기(구현 중...)</li>\r\n          <li>실시간 검색어 순위(구현 중...)</li>\r\n          <li>TODO(구현 중...)</li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nconst MemoizedEtcDropDown = React.memo(EtcDropDown);\r\n\r\nconst SearchDropDown = ({ state }) => {\r\n  return state && <SearchInputPackage type=\"dropdown dropdown-search-input\" />;\r\n};\r\n\r\nconst ProfileInfo = ({ user }) => {\r\n  return (\r\n    <div className=\"profile-menu\">\r\n      <p>{user.name}</p>\r\n      <ul>\r\n        <Link to={'/mypage'}>\r\n          <li>My Page</li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OptionMenu = ({ isDarkTheme }) => {\r\n  const [darkTheme, setDarkTheme] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleDarkThemeToggle = () => {\r\n    dispatch(setTheme(!darkTheme));\r\n    try {\r\n      localStorage.setItem('darkTheme', !darkTheme + '');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n    setDarkTheme(!darkTheme);\r\n  };\r\n  useEffect(() => {\r\n    if (isDarkTheme) {\r\n      setDarkTheme(true);\r\n    }\r\n  }, [isDarkTheme]);\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Typography component=\"div\">\r\n          <Grid\r\n            component=\"label\"\r\n            container\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            style={{\r\n              fontSize: '0.9rem',\r\n              fontFamily: 'sans-serif',\r\n              letterSpacing: '0',\r\n            }}\r\n          >\r\n            <Grid item>Dark Theme</Grid>\r\n            <Grid item>\r\n              <DarkThemeSwitch\r\n                checked={darkTheme}\r\n                onChange={handleDarkThemeToggle}\r\n                name=\"darkTheme\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst LogoutMenu = ({ onLogout, currentPath }) => (\r\n  <ul>\r\n    <Link to={currentPath} onClick={onLogout}>\r\n      <li>로그아웃</li>\r\n    </Link>\r\n  </ul>\r\n);\r\n\r\nconst UserDropDown = ({ state, user, onLogout, isDarkTheme, currentPath }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <ProfileInfo user={user} />\r\n        <hr />\r\n        <OptionMenu isDarkTheme={isDarkTheme} />\r\n        <hr />\r\n        <LogoutMenu onLogout={onLogout} currentPath={currentPath} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst NoneUserDropDown = ({ state, isDarkTheme }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <OptionMenu isDarkTheme={isDarkTheme} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst SearchInputPackage = ({ type, currentPath }) => (\r\n  <div className={type} tabIndex=\"-1\">\r\n    <SearchInputWrapper>\r\n      <SearchInput placeholder=\"검색\" />\r\n    </SearchInputWrapper>\r\n    <SearchBtn to={currentPath}>\r\n      <FontAwesomeIcon icon=\"search\" />\r\n    </SearchBtn>\r\n  </div>\r\n);\r\n\r\nconst Spacer = styled.div`\r\n  height: 3rem;\r\n`;\r\n\r\nconst Header = ({ user, onLogout, isDarkTheme, currentPath }) => {\r\n  library.add([faSearch, faEllipsisH, faEllipsisV, faUserCircle]);\r\n  const [etc, setEtc] = useState(false);\r\n  const [search, setSearch] = useState(false);\r\n  const [userinfo, setUserinfo] = useState(false);\r\n  const [noneuser, setNoneUser] = useState(false);\r\n\r\n  const handleEtcToggle = () => {\r\n    setEtc((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleEtcClose = () => {\r\n    setEtc(false);\r\n  };\r\n\r\n  const handleSearchToggle = () => {\r\n    setSearch((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleSearchClose = () => {\r\n    setSearch(false);\r\n  };\r\n\r\n  const handleUserInfoToggle = () => {\r\n    setUserinfo((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleUserInfoClose = () => {\r\n    setUserinfo(false);\r\n  };\r\n\r\n  const handleNoneUserToggle = () => {\r\n    setNoneUser((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleNoneUserClose = () => {\r\n    setNoneUser(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\" className=\"logo\">\r\n            MAKE UP HARA\r\n          </Link>\r\n          <div className=\"menu\">\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/w\">WIKI</Link>\r\n            </Menu>\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/blog\">Blog</Link>\r\n            </Menu>\r\n            <ClickAwayListener onClickAway={handleEtcClose}>\r\n              <Menu>\r\n                <Link\r\n                  to={currentPath}\r\n                  onClick={handleEtcToggle}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </Link>\r\n                <MemoizedEtcDropDown state={etc} />\r\n              </Menu>\r\n            </ClickAwayListener>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-mid\">\r\n          <SearchResponsive>\r\n            <SearchInputPackage type=\"search-input\" currentPath={currentPath} />\r\n          </SearchResponsive>\r\n        </div>\r\n        <div className=\"header-rigit\">\r\n          <SearchResponsive\r\n            style={{\r\n              display: 'inherit',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ClickAwayListener onClickAway={handleSearchClose}>\r\n              <div className=\"search-btn\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleSearchToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"search\" />\r\n                </Link>\r\n                <SearchDropDown state={search} />\r\n              </div>\r\n            </ClickAwayListener>\r\n          </SearchResponsive>\r\n          {user ? (\r\n            <ClickAwayListener onClickAway={handleUserInfoClose}>\r\n              <div className=\"user-info\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleUserInfoToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"user-circle\" size=\"lg\" />\r\n                </Link>\r\n                <UserDropDown\r\n                  state={userinfo}\r\n                  user={user}\r\n                  onLogout={onLogout}\r\n                  isDarkTheme={isDarkTheme}\r\n                  currentPath={currentPath}\r\n                />\r\n              </div>\r\n            </ClickAwayListener>\r\n          ) : (\r\n            <div className=\"none-user\">\r\n              <ClickAwayListener onClickAway={handleNoneUserClose}>\r\n                <div className=\"\">\r\n                  <Link to={currentPath} onClick={handleNoneUserToggle}>\r\n                    <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n                  </Link>\r\n                  <NoneUserDropDown\r\n                    state={noneuser}\r\n                    isDarkTheme={isDarkTheme}\r\n                  />\r\n                </div>\r\n              </ClickAwayListener>\r\n              <Button className=\"btn-sign-in\" transparent=\"true\" to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../module/redux/user';\r\nimport Header from '../../components/common/Header';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst HeaderContainer = ({ location }) => {\r\n  const { user, isDarkTheme } = useSelector(({ user, theme }) => ({\r\n    user: user.user,\r\n    isDarkTheme: theme.isDarkTheme,\r\n  }));\r\n  const dispatch = useDispatch();\r\n  const currentPath = location.pathname + location.search;\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Header\r\n      user={user}\r\n      onLogout={onLogout}\r\n      isDarkTheme={isDarkTheme}\r\n      currentPath={currentPath}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import styled from 'styled-components';\r\n\r\nconst BodyBlock = styled.div`\r\n  position: fixed;\r\n  top: ${props => (props.includeHeader ? '3rem' : 0)};\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: ${({ theme }) => theme.body};\r\n  z-index: -1;\r\n`;\r\n\r\nexport default BodyBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport SubInfo from '../post/common/SubInfo';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst BlogSectionBlock = styled.div`\r\n  h3 {\r\n    font-weight: 500;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n        <SubInfo username={publisher.username} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst BlogSection = ({ postList, loading, postError }) => {\r\n  if (postError) {\r\n    return (\r\n      <ErrorBlock>\r\n        <span className=\"error-title\">블로그 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {postError.message}</span>\r\n      </ErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <BlogSectionBlock>\r\n      <h3>블로그</h3>\r\n      {!loading && postList && (\r\n        <div>\r\n          {postList.map((post) => (\r\n            <PostItem post={post} key={post._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n      <span>\r\n        <Link to=\"/blog\">MORE POST...</Link>\r\n      </span>\r\n    </BlogSectionBlock>\r\n  );\r\n};\r\n\r\nexport default BlogSection;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList } from '../../module/redux/post';\r\nimport BlogSection from '../../components/main/BlogSection';\r\n\r\nconst BlogSectionContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { postList, postError, postLoading } = useSelector(\r\n    ({ post, loading }) => ({\r\n      postList: post.postList,\r\n      postError: post.postListError,\r\n      postLoading: loading['post/GET_LIST'],\r\n    }),\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getList({ block: 5 }));\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <BlogSection\r\n      postLoading={postLoading}\r\n      postList={postList}\r\n      postError={postError}\r\n    />\r\n  );\r\n};\r\n\r\nexport default BlogSectionContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst WikiSectionBlock = styled.div`\r\n  h3 {\r\n    font-weight: 500;\r\n  }\r\n  & > span {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 0.5rem;\r\n    & > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = ({ document }) => {\r\n  const { title, publishedDate } = document;\r\n  const { name } = title;\r\n  return (\r\n    <DocumentBlock>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\">\r\n        <span>{dayjs(publishedDate).format('YYYY-MM-DD')}</span>\r\n      </div>\r\n    </DocumentBlock>\r\n  );\r\n};\r\n\r\nconst WikiSection = ({ documentList, loading, error }) => {\r\n  if (error) {\r\n    return (\r\n      <ErrorBlock>\r\n        <span className=\"error-title\">WIKI 리스트 요청 실패.</span>\r\n        <span className=\"error-msg\">ERROR MESSAGE: {error.message}</span>\r\n      </ErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <WikiSectionBlock>\r\n      <h3>최근 변경된 위키 문서</h3>\r\n      {!loading && documentList && (\r\n        <div>\r\n          {documentList.map((document) => (\r\n            <DocumentItem document={document} key={document._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <span>\r\n        <Link to=\"/wiki/list\">MORE WIKI...</Link>\r\n      </span>\r\n    </WikiSectionBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSection;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as wikiAPI from '../../lib/api/wiki';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// api - request list\r\nconst [\r\n  GET_REQUEST_LIST,\r\n  GET_REQUEST_LIST_SUCCESS,\r\n  GET_REQUEST_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_REQUEST_LIST');\r\n// edit - set title\r\nconst SET_TITLE = createRequestActionTypes('wiki/SET_TITLE');\r\n// edit - initialize\r\nconst INITIALIZE = 'wiki/INITIALIZE';\r\n// edit - change field\r\nconst CHANGE_FIELD = 'wiki/CHANGE_FIELD';\r\n// edit - write document\r\nconst [\r\n  WRITE_DOCUMENT,\r\n  WRITE_DOCUMENT_SUCCESS,\r\n  WRITE_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/WRITE_DOCUMENT');\r\n// api - read\r\nconst [\r\n  READ_DOCUMENT,\r\n  READ_DOCUMENT_SUCCESS,\r\n  READ_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/READ_DOCUMENT');\r\nconst UNLOAD_DOCUMENT = 'wiki/UNLOAD_DOCUMENT'; // 위키 문서 뷰 언마운트시 문서 정보 제거\r\nconst SET_ORIGINAL_DOCUMENT = 'wiki/SET_ORIGINAL_DOCUMENT'; // 위키 문서 편집 시 에디터에 문서 세팅\r\n// api - list\r\nconst [\r\n  GET_DOCUMENT_LIST,\r\n  GET_DOCUMENT_LIST_SUCCESS,\r\n  GET_DOCUMENT_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_LIST');\r\nconst UNLOAD_LIST = 'wiki/UNLOAD_LIST'; // 위키 리스트 뷰 언마운트시 document list 정보 제거\r\n// api - history list\r\nconst [\r\n  GET_HISTORY_LIST,\r\n  GET_HISTORY_LIST_SUCCESS,\r\n  GET_HISTORY_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_HISTORY_LIST');\r\n// api - search\r\nconst [\r\n  GET_SEARCH_LIST,\r\n  GET_SEARCH_LIST_SUCCESS,\r\n  GET_SEARCH_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_SEARCH_LIST');\r\n// api- search/direct\r\nconst [\r\n  GET_DIRECT_TITLE,\r\n  GET_DIRECT_TITLE_SUCCESS,\r\n  GET_DIRECT_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DIRECT_TITLE');\r\n// api - search/random\r\nconst [\r\n  GET_RANDOM_TITLE,\r\n  GET_RANDOM_TITLE_SUCCESS,\r\n  GET_RANDOM_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_RANDOM_TITLE');\r\n// api - document count\r\nconst [\r\n  GET_DOCUMENT_COUNT,\r\n  GET_DOCUMENT_COUNT_SUCCESS,\r\n  GET_DOCUMENT_COUNT_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_COUNT');\r\n\r\n/* action */\r\nexport const getRequestList = createAction(GET_REQUEST_LIST);\r\nexport const setTitle = createAction(SET_TITLE, (title) => title);\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writeDocument = createAction(WRITE_DOCUMENT, ({ id, body }) => ({\r\n  id,\r\n  body,\r\n}));\r\nexport const readDocument = createAction(READ_DOCUMENT, ({ id, r }) => ({\r\n  id,\r\n  r,\r\n}));\r\nexport const unloadDocument = createAction(UNLOAD_DOCUMENT);\r\nexport const setOriginalDocument = createAction(\r\n  SET_ORIGINAL_DOCUMENT,\r\n  (document) => document,\r\n);\r\nexport const getDocumentList = createAction(\r\n  GET_DOCUMENT_LIST,\r\n  (block) => block,\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\nexport const getHistoryList = createAction(GET_HISTORY_LIST, ({ id }) => ({\r\n  id,\r\n}));\r\nexport const getSearchList = createAction(\r\n  GET_SEARCH_LIST,\r\n  ({ query, oldest, shortest, longest }) => ({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n  }),\r\n);\r\nexport const getDirectTitle = createAction(GET_DIRECT_TITLE, ({ query }) => ({\r\n  query,\r\n}));\r\nexport const getRandomTitle = createAction(GET_RANDOM_TITLE);\r\nexport const getDocumentCount = createAction(\r\n  GET_DOCUMENT_COUNT,\r\n  ({ username }) => ({ username }),\r\n);\r\n\r\n/* redux-saga */\r\nconst getRequestListSaga = createRequestSaga(\r\n  GET_REQUEST_LIST,\r\n  wikiAPI.requestDocument,\r\n);\r\nconst writeDocumentSaga = createRequestSaga(\r\n  WRITE_DOCUMENT,\r\n  wikiAPI.writeDocument,\r\n);\r\nexport const readDocumentSaga = createRequestSaga(\r\n  READ_DOCUMENT,\r\n  wikiAPI.readDocument,\r\n);\r\nexport const getDocumentListSaga = createRequestSaga(\r\n  GET_DOCUMENT_LIST,\r\n  wikiAPI.getDocumentList,\r\n);\r\nexport const getHistoryListSaga = createRequestSaga(\r\n  GET_HISTORY_LIST,\r\n  wikiAPI.getHistoryList,\r\n);\r\nexport const getSearchListSaga = createRequestSaga(\r\n  GET_SEARCH_LIST,\r\n  wikiAPI.getSearchList,\r\n);\r\nexport const getDirectTitleSaga = createRequestSaga(\r\n  GET_DIRECT_TITLE,\r\n  wikiAPI.getDirectTitle,\r\n);\r\nexport const getRandomTitleSaga = createRequestSaga(\r\n  GET_RANDOM_TITLE,\r\n  wikiAPI.getRandomTitle,\r\n);\r\nexport const getDocumentCountSaga = createRequestSaga(\r\n  GET_DOCUMENT_COUNT,\r\n  wikiAPI.getDocumentCount,\r\n);\r\n\r\nexport function* wikiSaga() {\r\n  yield takeLatest(GET_REQUEST_LIST, getRequestListSaga);\r\n  yield takeLatest(WRITE_DOCUMENT, writeDocumentSaga);\r\n  yield takeLatest(READ_DOCUMENT, readDocumentSaga);\r\n  yield takeLatest(GET_DOCUMENT_LIST, getDocumentListSaga);\r\n  yield takeLatest(GET_HISTORY_LIST, getHistoryListSaga);\r\n  yield takeLatest(GET_SEARCH_LIST, getSearchListSaga);\r\n  yield takeLatest(GET_DIRECT_TITLE, getDirectTitleSaga);\r\n  yield takeLatest(GET_RANDOM_TITLE, getRandomTitleSaga);\r\n  yield takeLatest(GET_DOCUMENT_COUNT, getDocumentCountSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: null,\r\n  titleError: null,\r\n  body: '',\r\n  document: null,\r\n  documentError: null,\r\n  editDocument: null,\r\n  editDocumentError: null,\r\n  requestList: [],\r\n  requestListError: null,\r\n  documentList: null,\r\n  documentListError: null,\r\n  historyList: null,\r\n  historyListError: null,\r\n  query: '',\r\n  searchList: null,\r\n  searchListError: null,\r\n  directName: null,\r\n  directError: null,\r\n  randomTitle: null,\r\n  randomTitleError: null,\r\n  documentCount: 0,\r\n  documentCountError: null,\r\n};\r\n\r\n/* reducer */\r\nconst wiki = handleActions(\r\n  {\r\n    [GET_REQUEST_LIST_SUCCESS]: (state, { payload: requestList }) => ({\r\n      ...state,\r\n      requestList,\r\n    }),\r\n    [GET_REQUEST_LIST_FAILURE]: (state, { payload: requestListError }) => ({\r\n      ...state,\r\n      requestListError,\r\n    }),\r\n    [SET_TITLE]: (state, { payload: title }) => ({\r\n      ...state,\r\n      title,\r\n    }),\r\n    [INITIALIZE]: (state) => ({\r\n      ...state,\r\n      title: null,\r\n      titleError: null,\r\n      body: '',\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n      query: '',\r\n      directName: null,\r\n      directError: null,\r\n      randomTitle: null,\r\n      randomTitleError: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키 값을 업데이트\r\n    }),\r\n    [WRITE_DOCUMENT_SUCCESS]: (state, { payload: editDocument }) => ({\r\n      ...state,\r\n      editDocument,\r\n    }),\r\n    [WRITE_DOCUMENT_FAILURE]: (state, { payload: editDocumentError }) => ({\r\n      ...state,\r\n      editDocumentError,\r\n    }),\r\n    [READ_DOCUMENT_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      document,\r\n    }),\r\n    [READ_DOCUMENT_FAILURE]: (state, { payload: documentError }) => ({\r\n      ...state,\r\n      documentError,\r\n    }),\r\n    [UNLOAD_DOCUMENT]: (state) => ({\r\n      ...state,\r\n      document: null,\r\n      documentError: null,\r\n    }),\r\n    [SET_ORIGINAL_DOCUMENT]: (state, { payload: document }) => ({\r\n      ...state,\r\n      title: document.title,\r\n      body: document.body,\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n    }),\r\n    [GET_DOCUMENT_LIST_SUCCESS]: (state, { payload: documentList }) => ({\r\n      ...state,\r\n      documentList,\r\n    }),\r\n    [GET_DOCUMENT_LIST_FAILURE]: (state, { payload: documentListError }) => ({\r\n      ...state,\r\n      documentListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      documentList: null,\r\n      documentListError: null,\r\n    }),\r\n    [GET_HISTORY_LIST_SUCCESS]: (state, { payload: historyList }) => ({\r\n      ...state,\r\n      historyList,\r\n    }),\r\n    [GET_HISTORY_LIST_FAILURE]: (state, { payload: historyListError }) => ({\r\n      ...state,\r\n      historyListError,\r\n    }),\r\n    [GET_SEARCH_LIST_SUCCESS]: (state, { payload: searchList }) => ({\r\n      ...state,\r\n      searchList,\r\n    }),\r\n    [GET_SEARCH_LIST_FAILURE]: (state, { payload: searchListError }) => ({\r\n      ...state,\r\n      searchListError,\r\n    }),\r\n    [GET_DIRECT_TITLE_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      directName: document.title.name,\r\n    }),\r\n    [GET_DIRECT_TITLE_FAILURE]: (state, { payload: directError }) => ({\r\n      ...state,\r\n      directError,\r\n    }),\r\n    [GET_RANDOM_TITLE_SUCCESS]: (state, { payload: title }) => ({\r\n      ...state,\r\n      randomTitle: title.name,\r\n    }),\r\n    [GET_RANDOM_TITLE_FAILURE]: (state, { payload: randomTitleError }) => ({\r\n      ...state,\r\n      randomTitleError,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_SUCCESS]: (state, { payload: documentCount }) => ({\r\n      ...state,\r\n      documentCount,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_FAILURE]: (state, { payload: documentCountError }) => ({\r\n      ...state,\r\n      documentCountError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default wiki;\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const requestDocument = () => client.get('/api/wiki/request');\r\n\r\nexport const writeDocument = ({ id, body }) =>\r\n  client.post(`/api/wiki/write/${id}`, { body });\r\n\r\nexport const readDocument = ({ id, r }) => {\r\n  const queryString = qs.stringify({ r });\r\n  return client.get(`/api/wiki/${id}?${queryString}`);\r\n};\r\n\r\nexport const getDocumentList = (block) => {\r\n  const queryString = qs.stringify({ block });\r\n  return client.get(`/api/wiki/list?${queryString}`);\r\n};\r\n\r\nexport const getHistoryList = ({ id }) => client.get(`/api/wiki/${id}/history`);\r\n\r\nexport const getSearchList = ({ query, oldest, shortest, longest }) => {\r\n  const queryString = qs.stringify({ query, oldest, shortest, longest });\r\n  return client.get(`/api/wiki/search?${queryString}`);\r\n};\r\n\r\nexport const getDirectTitle = ({ query }) => {\r\n  const queryString = qs.stringify({ query });\r\n  return client.get(`/api/wiki/search/direct?${queryString}`);\r\n};\r\n\r\nexport const getRandomTitle = () => client.get('/api/wiki/search/random');\r\n\r\nexport const getDocumentCount = ({ username }) =>\r\n  client.post('/api/wiki/doc/count', { username });\r\n","import React from 'react';\r\nimport WikiSection from '../../components/main/WikiSection';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getDocumentList, unloadList } from '../../module/redux/wiki';\r\n\r\nconst WikiSectionContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { documentList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    documentList: wiki.documentList,\r\n    error: wiki.documentListError,\r\n    loading: loading['wiki/GET_DOCUMENT_LIST'],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    dispatch(getDocumentList({ block: 5 }));\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <WikiSection documentList={documentList} error={error} loading={loading} />\r\n  );\r\n};\r\n\r\nexport default WikiSectionContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BlogSectionContainer from '../../containers/main/BlogSectionContainer';\r\nimport WikiSectionContainer from '../../containers/main/WikiSectionContainer';\r\n\r\nconst MainBlock = styled.div`\r\n  margin: 2rem;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst Main = () => {\r\n  return (\r\n    <>\r\n      <MainBlock>\r\n        <BlogSectionContainer />\r\n        <WikiSectionContainer />\r\n      </MainBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport Main from '../../components/main/Main';\r\n\r\nconst MainContainer = () => {\r\n  return <Main />;\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport MainContainer from '../../containers/main/MainContainer';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <MainContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import palette from './open-color';\r\n\r\nexport const lightTheme = {\r\n  /* Common */\r\n  body: '#fff',\r\n  text: palette.gray[9],\r\n  hoverText: palette.gray[6],\r\n  categoryBorder: palette.cyan[7],\r\n  themeColorBody: palette.cyan[7],\r\n  themeColorHoverBody: palette.cyan[5],\r\n  /* Header */\r\n  hoverList: palette.gray[2],\r\n  inputBody: palette.gray[1],\r\n  placeholder: palette.gray[7],\r\n  btnSearchBody: palette.gray[1],\r\n  dropdownBody: '#fff',\r\n  /* AuthForm */\r\n  loginBody: palette.gray[2],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[7],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: palette.gray[7],\r\n  darkThemeSwitchTrack: palette.gray[5],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[4],\r\n  editorText: palette.gray[8],\r\n  editorTagComponentBorder: palette.gray[4],\r\n  editorTagBoxBorder: palette.gray[9],\r\n  editorTagTitle: palette.gray[8],\r\n  editorTagButtonBody: palette.gray[8],\r\n  editorHoverTagButtonBody: palette.gray[6],\r\n  editorTagButtonText: '#fff',\r\n  editorTagText: palette.gray[6],\r\n  /* Footer */\r\n  footerText: palette.gray[8],\r\n  /* Button */\r\n  btnBody: palette.gray[9],\r\n  btnHoverBody: palette.gray[7],\r\n  btnText: '#fff',\r\n  btnDisableBody: palette.cyan[2],\r\n  btnDisableColor: palette.gray[9],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[4],\r\n  postSubInfoText: palette.gray[6],\r\n  postSubInfoHoverText: palette.gray[7],\r\n  postTagText: palette.cyan[7],\r\n  postTagHoverText: palette.cyan[5],\r\n  postActionButtonText: palette.gray[7],\r\n  postActionButtonHoverText: palette.gray[6],\r\n  postActionButtonBody: palette.gray[2],\r\n  postActionButtonHoverBody: palette.gray[1],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[5],\r\n  wikiActionButtonBody: palette.gray[2],\r\n  wikiActionButtonHoverBody: palette.gray[1],\r\n  wikiActionButtonText: palette.gray[7],\r\n  wikitActionButtonHoverText: palette.gray[6],\r\n  wikiBorder: palette.gray[4],\r\n  wikiHistoryLinkText: palette.cyan[7],\r\n  wikiHistoryLinkHoverText: palette.cyan[5],\r\n  /* Error */\r\n  errorText: palette.red[5],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.cyan[0],\r\n  profileInputValid: palette.cyan[2],\r\n  profileInputInValid: palette.red[3],\r\n};\r\n\r\nexport const darkTheme = {\r\n  /* Common */\r\n  body: palette.gray[9],\r\n  text: '#fff',\r\n  hoverText: palette.gray[3],\r\n  categoryBorder: palette.violet[5],\r\n  themeColorBody: palette.violet[5],\r\n  themeColorHoverBody: palette.violet[3],\r\n  /* Header */\r\n  hoverList: palette.gray[7],\r\n  inputBody: palette.gray[7],\r\n  placeholder: palette.gray[2],\r\n  btnSearchBody: palette.gray[8],\r\n  dropdownBody: palette.gray[9],\r\n  /* AuthForm */\r\n  loginBody: palette.gray[7],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[3],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: '#fff',\r\n  darkThemeSwitchTrack: palette.gray[2],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[5],\r\n  editorText: palette.gray[5],\r\n  editorTagComponentBorder: palette.gray[5],\r\n  editorTagBoxBorder: palette.gray[5],\r\n  editorTagTitle: palette.gray[6],\r\n  editorTagButtonBody: palette.gray[2],\r\n  editorHoverTagButtonBody: palette.gray[4],\r\n  editorTagButtonText: palette.gray[9],\r\n  editorTagText: palette.gray[4],\r\n  /* Footer */\r\n  footerText: palette.gray[2],\r\n  /* Button */\r\n  btnBody: '#fff',\r\n  btnHoverBody: palette.gray[4],\r\n  btnText: palette.gray[9],\r\n  btnDisableBody: palette.violet[3],\r\n  btnDisableColor: palette.gray[9],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[5],\r\n  postSubInfoText: palette.gray[5],\r\n  postSubInfoHoverText: palette.gray[4],\r\n  postTagText: palette.violet[7],\r\n  postTagHoverText: palette.violet[5],\r\n  postActionButtonText: palette.gray[5],\r\n  postActionButtonHoverText: palette.gray[3],\r\n  postActionButtonBody: palette.gray[8],\r\n  postActionButtonHoverBody: palette.gray[7],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[7],\r\n  wikiActionButtonBody: palette.gray[8],\r\n  wikiActionButtonHoverBody: palette.gray[7],\r\n  wikiActionButtonText: palette.gray[5],\r\n  wikitActionButtonHoverText: palette.gray[3],\r\n  wikiBorder: palette.gray[5],\r\n  wikiHistoryLinkText: palette.violet[7],\r\n  wikiHistoryLinkHoverText: palette.violet[5],\r\n  /* Error */\r\n  errorText: palette.red[9],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.violet[5],\r\n  profileInputValid: palette.violet[3],\r\n  profileInputInValid: palette.red[3],\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: ${({ theme }) => theme.loginBody};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    text-align: center;\r\n    padding-bottom: 2rem;\r\n    font-size: 1.25rem;\r\n    letter-spacing: 1px;\r\n  }\r\n  .logo-area > a {\r\n      color: ${({theme}) => theme.text}\r\n  }\r\n  .logo-area > a:hover {\r\n      color: ${({theme}) => theme.hoverText}\r\n  }\r\n  box-shadow: 0 0 8px\r\n    ${({ theme }) =>\r\n      theme.body === '#fff'\r\n        ? 'rgba(0, 0, 0, 0.25)'\r\n        : 'rgba(0, 0, 0, 0.5)'};\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: ${({ theme }) => theme.body};\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <ContentBox>\r\n        <div className=\"logo-area\">\r\n          <Link to=\"/\">MAKE UP HARA</Link>\r\n        </div>\r\n        {children}\r\n      </ContentBox>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Button, { buttonStyle } from '../common/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport palette from '../../lib/styles/open-color';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.text};\r\n    margin-bottom: 1rem;\r\n    font-weight: normal;\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.loginInputBorder};\r\n  }\r\n  .social-login {\r\n    button + a {\r\n      margin-top: 0.5rem;\r\n    }\r\n    a + button {\r\n      margin-top: 0.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 2px solid ${({ theme }) => theme.loginInputBorder};\r\n  padding-bottom: 0.5rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    border-bottom: 2px solid ${({ theme }) => theme.loginInputBorderFocus};\r\n    -webkit-transition: all 0.3s ease;\r\n    transition: all 0.3s ease;\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n  &::placeholder {\r\n    font-weight: normal;\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      text-decoration: underline !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst GoogleLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  border-radius: 0.375rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst socialBtnStyle = css`\r\n  border: none;\r\n  padding: 0;\r\n  display: block;\r\n  border-radius: 0.5rem;\r\n  img {\r\n    width: 100%;\r\n    display: flex;\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NaverLoginButton = styled.a`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst KakaoLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  signinGoogle: '구글로 로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${palette.red[9]};\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({ type, form, onChange, onSubmit, error, onSocialLogin }) => {\r\n  const text = textMap[type];\r\n\r\n  // Login with Google\r\n  const googleLoginBtn = useRef(null);\r\n  const auth2 = useRef(null);\r\n\r\n  // Config Google Login API\r\n  const loadGoogleLoginApi = () => {\r\n    // 로그인 버튼 이벤트 주입\r\n    const prepareLoginButton = () => {\r\n      auth2.current.attachClickHandler(\r\n        googleLoginBtn.current,\r\n        {},\r\n        (googleUser) => {\r\n          // const profile = googleUser.getBasicProfile();\r\n          // console.log('Token || ' + googleUser.getAuthResponse().id_token);\r\n          // console.log('ID: ' + profile.getId());\r\n          // console.log('Name: ' + profile.getName());\r\n          // console.log('Image URL: ' + profile.getImageUrl());\r\n          // console.log('Email: ' + profile.getEmail());\r\n\r\n          const id_token = googleUser.getAuthResponse().id_token;\r\n          onSocialLogin({ id_token });\r\n        },\r\n        (error) => {\r\n          console.log(JSON.stringify(error, undefined, 2));\r\n        },\r\n      );\r\n    };\r\n\r\n    window['googleSDKLoaded'] = () => {\r\n      window['gapi'].load('auth2', () => {\r\n        auth2.current = window['gapi'].auth2.init({\r\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          cookiepolicy: 'single_host_origin',\r\n          scope: 'profile email',\r\n        });\r\n        prepareLoginButton();\r\n      });\r\n    };\r\n  };\r\n\r\n  const onNaverLoginClick = () => {\r\n    const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_NAVER_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_NAVER_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://nid.naver.com/oauth2.0/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  };\r\n\r\n  const onKakaoLoginClick = () => {\r\n    const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_KAKAO_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://kauth.kakao.com/oauth/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  };\r\n\r\n  // Load Script\r\n  const loadScript = (document, script, id, srcValue) => {\r\n    const referenceNode = document.getElementsByTagName(script)[0];\r\n    if (document.getElementById(id)) {\r\n      return;\r\n    }\r\n    const googlejssdkNode = document.createElement(script);\r\n    googlejssdkNode.id = id;\r\n    googlejssdkNode.src = srcValue;\r\n    referenceNode.parentNode.insertBefore(googlejssdkNode, referenceNode);\r\n  };\r\n\r\n  const removeApiScript = () => {\r\n    const removeTag = (tagName, targetId) => {\r\n      const targetNode = document.getElementsByTagName(tagName);\r\n      [...targetNode].map(\r\n        (node) =>\r\n          node.src.indexOf(targetId) >= 0 && node.parentNode.removeChild(node),\r\n      );\r\n    };\r\n\r\n    removeTag('script', 'apis.google.com');\r\n\r\n    const removeJssdk = (id) => {\r\n      const sdkNode = document.getElementById(id);\r\n      if (sdkNode) {\r\n        sdkNode.parentNode.removeChild(sdkNode);\r\n      }\r\n    };\r\n\r\n    removeJssdk('google-jssdk');\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadScript(\r\n      document,\r\n      'script',\r\n      'google-jssdk',\r\n      'https://apis.google.com/js/platform.js?onload=googleSDKLoaded',\r\n    );\r\n    loadGoogleLoginApi();\r\n\r\n    return () => {\r\n      removeApiScript();\r\n    };\r\n  });\r\n\r\n  return (\r\n    <AuthFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          name=\"username\"\r\n          placeholder=\"계정 이름\"\r\n          value={form.username}\r\n          onChange={onChange}\r\n        />\r\n        <StyledInput\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={form.password}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' && (\r\n          <StyledInput\r\n            type=\"password\"\r\n            autoComplete=\"new-password\"\r\n            name=\"passwordConfirm\"\r\n            placeholder=\"비밀번호 확인\"\r\n            value={form.passwordConfirm}\r\n            onChange={onChange}\r\n          />\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonWithMarginTop cyan fullWidth>\r\n          {text}\r\n        </ButtonWithMarginTop>\r\n      </form>\r\n      {type === 'login' && (\r\n        <div className=\"social-login\">\r\n          <hr />\r\n          <GoogleLoginButton fullWidth indigo ref={googleLoginBtn}>\r\n            <FontAwesomeIcon icon={faGoogle} />\r\n            {' ' + textMap['signinGoogle']}\r\n            <span> </span>\r\n          </GoogleLoginButton>\r\n          <NaverLoginButton transparent onClick={() => onNaverLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/naver_login_btn.png'}\r\n              alt=\"naver-login-btn\"\r\n            />\r\n          </NaverLoginButton>\r\n          <KakaoLoginButton transparent onClick={() => onKakaoLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/kakao_login_btn.png'}\r\n              alt=\"kakao-login-btn\"\r\n            />\r\n          </KakaoLoginButton>\r\n        </div>\r\n      )}\r\n\r\n      <Footer>\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n  'auth/REGISTER',\r\n);\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n  'auth/LOGIN',\r\n);\r\nconst [\r\n  LOGIN_WITH_GOOGLE,\r\n  LOGIN_WITH_GOOGLE_SUCCESS,\r\n  LOGIN_WITH_GOOGLE_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_GOOGLE');\r\nconst [\r\n  LOGIN_WITH_NAVER,\r\n  LOGIN_WITH_NAVER_SUCCESS,\r\n  LOGIN_WITH_NAVER_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_NAVER');\r\nconst [\r\n  LOGIN_WITH_KAKAO,\r\n  LOGIN_WITH_KAKAO_SUCCESS,\r\n  LOGIN_WITH_KAKAO_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_KAKAO');\r\n\r\n/* action */\r\nexport const changeFieid = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // register, login\r\n    key, // username, password, passwordConfirm\r\n    value, // 변경 하려는 값\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\nexport const register = createAction(REGISTER, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const loginWithGoogle = createAction(\r\n  LOGIN_WITH_GOOGLE,\r\n  ({ id_token }) => ({ id_token }),\r\n);\r\nexport const loginWithNaver = createAction(\r\n  LOGIN_WITH_NAVER,\r\n  ({ client_id, client_secret, code, state }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  }),\r\n);\r\nexport const loginWithKakao = createAction(\r\n  LOGIN_WITH_KAKAO,\r\n  ({ client_id, client_secret, code, redirect_uri }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  }),\r\n);\r\n\r\n/* redux-saga */\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nconst loginWithGoogleSaga = createRequestSaga(\r\n  LOGIN_WITH_GOOGLE,\r\n  authAPI.loginWithGoogle,\r\n);\r\nconst loginWithNaverSaga = createRequestSaga(\r\n  LOGIN_WITH_NAVER,\r\n  authAPI.loginWithNaver,\r\n);\r\nconst loginWithKakaoSaga = createRequestSaga(\r\n  LOGIN_WITH_KAKAO,\r\n  authAPI.loginWithKakao,\r\n);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(LOGIN_WITH_GOOGLE, loginWithGoogleSaga);\r\n  yield takeLatest(LOGIN_WITH_NAVER, loginWithNaverSaga);\r\n  yield takeLatest(LOGIN_WITH_KAKAO, loginWithKakaoSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  auth: null,\r\n  authError: null,\r\n};\r\n\r\n/* reducer */\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      auth: null,\r\n      authError: null, // 폼 전환 시 회원인증 에러 초기화\r\n    }),\r\n    [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_NAVER_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_NAVER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  login,\r\n  loginWithGoogle,\r\n  initializeForm,\r\n} from '../../module/redux/auth';\r\nimport { check } from '../../module/redux/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(changeFieid({ form: 'login', key: name, value }));\r\n    setError(null);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    if ([username, password].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  const onSocialLogin = ({ id_token }) => {\r\n    dispatch(loginWithGoogle({ id_token }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      if (authError.response.status === 401) {\r\n        setError('계정 또는 비밀번호가 일치하지 않습니다.');\r\n        return;\r\n      } else {\r\n        setError('로그인 실패: ' + authError);\r\n        return;\r\n      }\r\n    }\r\n    if (auth) {\r\n      dispatch(check());\r\n      dispatch(initializeForm());\r\n    }\r\n    return () => {\r\n      dispatch(initializeForm());\r\n    };\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.goBack();\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n      onSocialLogin={onSocialLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport LoginForm from '../../containers/auth/LoginForm';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>로그인 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeFieid, register, initializeForm } from '../../module/redux/auth';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError } = useSelector(({ auth }) => ({\r\n    form: auth.register,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n  }));\r\n\r\n  const onChange = e => {\r\n    const { value, name } = e.target;\r\n    dispatch(changeFieid({ form: 'register', key: name, value }));\r\n    setError(null);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const { username, password, passwordConfirm } = form;\r\n    // 하나라도 비어 있다면\r\n    if ([username, password, passwordConfirm].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    // 비밀번호가 일치하지 않는다면\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      dispatch(changeFieid({ form: 'register', key: 'password', value: '' }));\r\n      dispatch(\r\n        changeFieid({ form: 'register', key: 'passwordConfirm', value: '' }),\r\n      );\r\n      return;\r\n    }\r\n    dispatch(register({ username, password }));\r\n  };\r\n\r\n  // 컴포넌트가 처음 렌더링 될 때  form을 초기화함\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n  }, [dispatch]);\r\n\r\n  // 회원가입 성공/실패 처리\r\n  useEffect(() => {\r\n    if (authError) {\r\n      // 계정명이 이미 존재할 때\r\n      if (authError.response.status === 409) {\r\n        setError('이미 존재하는 계정입니다.');\r\n        return;\r\n      }\r\n      // 기타 이유\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      history.push('/login');\r\n    }\r\n  }, [auth, authError, dispatch, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport RegisterForm from '../../containers/auth/RegisterForm';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>회원가입 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EditorFooterBlock = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  height: 2rem;\r\n  width: inherit;\r\n  padding-bottom: 1.25rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: ${({ theme }) => theme.body};\r\n\r\n  .title > a {\r\n    color: ${({ theme }) => theme.footerText};\r\n  }\r\n  .title > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    -webkit-transition: all 0.5s ease;\r\n    transition: all 0.5s ease;\r\n  }\r\n  .editor-name {\r\n    color: ${({ theme }) => theme.footerText};\r\n  }\r\n  .editor-name > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    -webkit-transition: all 0.5s ease;\r\n    transition: all 0.5s ease;\r\n  }\r\n`;\r\n\r\nconst EditorFooter = ({ type = 'blog' }) => {\r\n  const editorName = type === 'blog' ? 'BLOG' : 'WIKI';\r\n  const editorHref = type === 'blog' ? '/blog' : '/wiki';\r\n  return (\r\n    <EditorFooterBlock>\r\n      <div className=\"title\">\r\n        <Link to=\"/\">MAKE UP HARA</Link>\r\n      </div>\r\n      <div className=\"editor-name\">\r\n        <Link to={editorHref}>{editorName}</Link>\r\n        <span>&nbsp;EDITOR</span>\r\n      </div>\r\n    </EditorFooterBlock>\r\n  );\r\n};\r\n\r\nexport default EditorFooter;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../../common/Responsive';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding: 5rem 0;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 2rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${({ theme }) => theme.editorTitleBorder};\r\n  background: ${({ theme }) => theme.body};\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    color: ${({ theme }) => theme.editorText};\r\n    left: 0;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ title, body, onChangeField }) => {\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '포스트 작성...',\r\n      modules: {\r\n        imageResize: {\r\n          modules: ['Resize', 'DisplaySize'],\r\n        },\r\n        // 참고: https://quilljs.com/docs/modules/toolbar/\r\n        toolbar: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ indent: '-1' }, { indent: '+1' }],\r\n          [{ align: [] }],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          ['video'],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n          ['clean'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  /* useRef를 사용하여 에디터 내 편집할 데이터 삽입 */\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  const onChangeTitle = (e) => {\r\n    onChangeField({ key: 'title', value: e.target.value });\r\n  };\r\n  return (\r\n    <EditorBlock>\r\n      <TitleInput\r\n        placeholder=\"포스트 제목\"\r\n        value={title}\r\n        onChange={onChangeTitle}\r\n      />\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initialize } from '../../../module/redux/post';\r\nimport { useEffect } from 'react';\r\nimport Editor from '../../../components/post/write/Editor';\r\n\r\nconst EditorContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body } = useSelector(({ post }) => ({\r\n    title: post.title,\r\n    body: post.body,\r\n  }));\r\n  // 액션함수를 토대로 이벤트 정의\r\n  const onChangeField = useCallback(payload => dispatch(changeField(payload)), [\r\n    dispatch,\r\n  ]);\r\n  // 언마운트될 때 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default EditorContainer;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid ${({ theme }) => theme.editorTagComponentBorder};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${({ theme }) => theme.editorTagTitle};\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst TagForm = styled.form`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${({ theme }) => theme.editorTagBoxBorder};\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n    min-width: 0;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    padding: 0 1rem;\r\n    background: ${({ theme }) => theme.editorTagButtonBody};\r\n    color: ${({ theme }) => theme.editorTagButtonText};\r\n    &:hover {\r\n      background: ${({ theme }) => theme.editorHoverTagButtonBody};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin-right: 0.5rem;\r\n  color: ${({ theme }) => theme.editorTagText};\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n  <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n));\r\n\r\nconst TagList = React.memo(({ tags, onRemove }) => (\r\n  <TagListBlock>\r\n    {tags.map(tag => (\r\n      <TagItem key={tag} tag={tag} onRemove={onRemove} />\r\n    ))}\r\n  </TagListBlock>\r\n));\r\n\r\nconst TagBox = ({ tags, onChangeTags }) => {\r\n  const [input, setInput] = useState('');\r\n  const [localTags, setLocalTags] = useState([]);\r\n\r\n  const insertTag = useCallback(\r\n    tag => {\r\n      if (!tag) return;\r\n      if (localTags.includes(tag)) return;\r\n      const nextTags = [...localTags, tag];\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    tag => {\r\n      const nextTags = localTags.filter(t => t !== tag);\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\n\r\n  const onChange = useCallback(e => {\r\n    setInput(e.target.value);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    e => {\r\n      e.preventDefault();\r\n      insertTag(input.trim());\r\n      setInput('');\r\n    },\r\n    [input, insertTag],\r\n  );\r\n\r\n  useEffect(() => {\r\n    setLocalTags(tags);\r\n  }, [tags]);\r\n\r\n  return (\r\n    <TagBoxBlock>\r\n      <h4>태그</h4>\r\n      <TagForm onSubmit={onSubmit}>\r\n        <input placeholder=\"태그 입력...\" onChange={onChange} value={input} />\r\n        <button type=\"submit\">추가</button>\r\n      </TagForm>\r\n      <TagList tags={localTags} onRemove={onRemove} />\r\n    </TagBoxBlock>\r\n  );\r\n};\r\n\r\nexport default TagBox;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField } from '../../../module/redux/post';\r\nimport TagBox from '../../../components/post/write/TagBox';\r\n\r\nconst TagBoxContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const tags = useSelector(state => state.post.tags);\r\n\r\n  // 이벤트 정의\r\n  const onChangeTags = nextTags => {\r\n    dispatch(changeField({ key: 'tags', value: nextTags }));\r\n  };\r\n\r\n  return <TagBox onChangeTags={onChangeTags} tags={tags} />;\r\n};\r\n\r\nexport default TagBoxContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../Button';\r\n\r\nconst WriteActionButtonsBlock = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 4rem;\r\n  button + button {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2.125rem;\r\n`;\r\n\r\nconst WriteActionButtons = ({ type = 'blog', isEdit, onClick, onCancel }) => {\r\n  const editorName = type === 'blog' ? '포스트' : '위키';\r\n  return (\r\n    <WriteActionButtonsBlock>\r\n      <StyledButton cyan onClick={onClick}>\r\n        {editorName} {isEdit ? '수정' : '등록'}\r\n      </StyledButton>\r\n      <StyledButton red onClick={onCancel}>\r\n        취소\r\n      </StyledButton>\r\n    </WriteActionButtonsBlock>\r\n  );\r\n};\r\n\r\nexport default WriteActionButtons;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { writePost, updatePost } from '../../../module/redux/post';\r\nimport WriteActionButtons from '../../../components/common/editor/WriteActionButtons';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    title,\r\n    body,\r\n    tags,\r\n    editPost,\r\n    editPostError,\r\n    targetPostId,\r\n  } = useSelector(({ post }) => ({\r\n    title: post.title,\r\n    body: post.body,\r\n    tags: post.tags,\r\n    editPost: post.editPost,\r\n    editPostError: post.editPostError,\r\n    targetPostId: post.targetPostId,\r\n  }));\r\n  // 이벤트 정의\r\n  // 포스트 등록\r\n  const onPublish = () => {\r\n    if (targetPostId) {\r\n      dispatch(updatePost({ id: targetPostId, title, body, tags }));\r\n    } else {\r\n      dispatch(writePost({ title, body, tags }));\r\n    }\r\n  };\r\n  // 취소\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n  // 처리 후 작업\r\n  useEffect(() => {\r\n    if (editPost) {\r\n      const { _id, publisher } = editPost;\r\n      history.push(`/blog/@${publisher.username}/${_id}`);\r\n    }\r\n    if (editPostError) {\r\n      // TODO: Failure Write Post\r\n    }\r\n  }, [history, editPost, editPostError]);\r\n\r\n  return (\r\n    <WriteActionButtons\r\n      onClick={onPublish}\r\n      onCancel={onCancel}\r\n      isEdit={!!targetPostId}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from 'react';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport EditorFooter from '../../components/common/editor/EditorFooter';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport EditorContainer from '../../containers/post/write/EditorContainer';\r\nimport TagBoxContainer from '../../containers/post/write/TagBoxContainer';\r\nimport WriteActionButtonsContainer from '../../containers/post/write/WriteActionButtonsContainer';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PostWritePage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>POST 작성 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <TagBoxContainer />\r\n      <WriteActionButtonsContainer />\r\n      <EditorFooter />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(PostWritePage);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport SubInfo from './common/SubInfo';\r\nimport Tags from './common/Tags';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst PostViewerErrorBlock = styled(ErrorBlock)`\r\n  margin: 3rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  margin-bottom: 2rem;\r\n  padding-bottom: 2rem;\r\n  h1 {\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 570px;\r\n  }\r\n  .ql-align-left {\r\n    text-align: left;\r\n  }\r\n  .ql-align-center {\r\n    text-align: center;\r\n  }\r\n  .ql-align-right {\r\n    text-align: right;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    .ql-video {\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostViewer = ({ post, loading, error, actionButtons }) => {\r\n  // 에러 처리\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return (\r\n        <PostViewerErrorBlock>\r\n          <span className=\"error-title\">존재하지 않는 포스트입니다.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </PostViewerErrorBlock>\r\n      );\r\n    } else {\r\n      return (\r\n        <PostViewerErrorBlock>\r\n          <span className=\"error-title\">포스트 요청 실패.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </PostViewerErrorBlock>\r\n      );\r\n    }\r\n  }\r\n  // 로딩 중이거나 아직 포스트 데이터가 없을 때\r\n  if (loading || !post) {\r\n    return null;\r\n  }\r\n  // 렌더링 데이터\r\n  const { title, body, tags, publisher, publishedDate } = post;\r\n  return (\r\n    <PostViewerBlock>\r\n      <Helmet>\r\n        <title>{title} - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <PostHead>\r\n        <h1>{title}</h1>\r\n        <SubInfo\r\n          hasMarginTop\r\n          username={publisher.username}\r\n          publishedDate={publishedDate}\r\n        />\r\n        <Tags tags={tags} />\r\n      </PostHead>\r\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\r\n      {actionButtons}\r\n    </PostViewerBlock>\r\n  );\r\n};\r\n\r\nexport default PostViewer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst FullScreen = styled.div`\r\n  position: fixed;\r\n  z-index: 30;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: ${({ theme }) =>\r\n    theme.body === '#fff' ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.45)'};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst AskModalBlock = styled.div`\r\n  width: 320px;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  padding: 1.5rem;\r\n  border-radius: 4px;\r\n  box-shadow: ${({ theme }) =>\r\n    theme.body === '#fff'\r\n      ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n      : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n  h2 {\r\n    margin-top: 0;\r\n    margin-bottom: 1rem;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n  }\r\n  p {\r\n    margin-bottom: 3rem;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 2rem;\r\n  & + & {\r\n    margin-left: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst AskModal = ({\r\n  className,\r\n  visible,\r\n  title,\r\n  description,\r\n  confirmText = '확인',\r\n  cancelText = '취소',\r\n  onConfirm,\r\n  onCancel,\r\n}) => {\r\n  return (\r\n    visible && (\r\n      <FullScreen className={className}>\r\n        <AskModalBlock>\r\n          <h2>{title}</h2>\r\n          <p>{description}</p>\r\n          <div className=\"buttons\">\r\n            <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n            <StyledButton cyan onClick={onConfirm}>\r\n              {confirmText}\r\n            </StyledButton>\r\n          </div>\r\n        </AskModalBlock>\r\n      </FullScreen>\r\n    )\r\n  );\r\n};\r\n\r\nexport default AskModal;\r\n","import React from 'react';\r\nimport AskModal from '../common/AskModal';\r\n\r\nconst AskRemoveModal = ({ className, visible, onConfirm, onCancel }) => {\r\n  return (\r\n    <AskModal\r\n      className={className}\r\n      visible={visible}\r\n      title=\"DELETE POST\"\r\n      description=\"정말 POST를 삭제하시겠습니까?\"\r\n      confirmText=\"삭제\"\r\n      onConfirm={onConfirm}\r\n      onCancel={onCancel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AskRemoveModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport AskRemoveModal from './AskRemoveModal';\r\n\r\nconst PostActionButtionsBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 2rem;\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  color: ${({ theme }) => theme.postActionButtonText};\r\n  background: ${({ theme }) => theme.postActionButtonBody};\r\n  font-weight: 600;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n  &:hover {\r\n    color: ${({ theme }) => theme.postActionButtonHoverText};\r\n    background: ${({ theme }) => theme.postActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst PostActionButtions = ({ onEdit, onRemove }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const onRemoveClick = () => {\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    onRemove();\r\n  };\r\n\r\n  /* 모달 영역 밖 클릭시 모달 닫기 */\r\n  useEffect(() => {\r\n    window.onclick = event => {\r\n      if (\r\n        !!event.target.className.includes &&\r\n        event.target.className.includes('modal')\r\n      ) {\r\n        setModal(false);\r\n      }\r\n    };\r\n    // 언마운트시 이벤트 제거\r\n    return () => {\r\n      window.onclick = () => {};\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PostActionButtionsBlock>\r\n        <ActionButton onClick={onEdit}>수정</ActionButton>\r\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n      </PostActionButtionsBlock>\r\n      <AskRemoveModal\r\n        className=\"modal\"\r\n        visible={modal}\r\n        onConfirm={onConfirm}\r\n        onCancel={onCancel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostActionButtions;\r\n","import React, { useEffect } from 'react';\r\nimport PostViewer from '../../components/post/PostViewer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { readPost, unloadPost, setOriginalPost } from '../../module/redux/post';\r\nimport PostActionButtions from '../../components/post/PostActionButtions';\r\nimport { removePost } from '../../lib/api/post';\r\n\r\nconst PostViewerContainer = ({ match, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { postId } = match.params;\r\n  const { post, error, loading, user } = useSelector(\r\n    ({ post, loading, user }) => ({\r\n      post: post.post,\r\n      error: post.postError,\r\n      loading: loading['post/READ_POST'],\r\n      user: user.user,\r\n    }),\r\n  );\r\n\r\n  // 이벤트 정의\r\n  const onEdit = () => {\r\n    dispatch(setOriginalPost(post));\r\n    history.push('/blog/write');\r\n  };\r\n\r\n  const onRemove = async () => {\r\n    try {\r\n      await removePost(postId);\r\n      history.push('/blog');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(readPost(postId));\r\n    // 언마운트 될 때 포스트 데이터 제거\r\n    return () => {\r\n      dispatch(unloadPost());\r\n    };\r\n  }, [dispatch, postId]);\r\n\r\n  const isPublisher =\r\n    (post && post.publisher.username) === (user && user.username);\r\n\r\n  return (\r\n    <PostViewer\r\n      post={post}\r\n      loading={loading}\r\n      error={error}\r\n      actionButtons={\r\n        isPublisher && (\r\n          <PostActionButtions onEdit={onEdit} onRemove={onRemove} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport PostViewerContainer from '../../containers/post/PostViewerContainer';\r\n\r\nconst PostPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PostListContainer = loadable(() =>\r\n  import('../../containers/post/PostListContainer'),\r\n);\r\n\r\nconst PostListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostListPage;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithNaver } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithNaverPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, state, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_NAVER_CLIENT_SECRET;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithNaver({ client_id, client_secret, code, state }));\r\n  }, [dispatch, client_id, client_secret, code, state]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithNaverPage);\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithKakao } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithKakaoPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_KAKAO_CLIENT_SECRET;\r\n  const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithKakao({ client_id, client_secret, redirect_uri, code }));\r\n  }, [dispatch, client_id, client_secret, code, redirect_uri]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithKakaoPage);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst WikiViewerBlock = styled.div``;\r\n\r\nconst WikiViewerErrorBlock = styled(ErrorBlock)`\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 85vh;\r\n`;\r\n\r\nconst DocumentMenuBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  button,\r\n  a {\r\n    padding: 0.25rem 0.75rem;\r\n    outline: none;\r\n    border: none;\r\n    border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n    cursor: pointer;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n  a {\r\n    padding-top: 0.3rem;\r\n    font-size: 0.8rem;\r\n    align-items: center;\r\n  }\r\n  li {\r\n    list-style: square !important;\r\n  }\r\n`;\r\n\r\nconst DocumentMenu = ({ onEdit, docName }) => {\r\n  return (\r\n    <>\r\n      <button>코드 등록</button>\r\n      <button onClick={onEdit}>편집</button>\r\n      <Link to={`/wiki/history/${docName}`}>역사</Link>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DocumentBlock = styled(Responsive)`\r\n  margin: 1rem auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst TitleBlock = styled.div`\r\n  h2 {\r\n    font-weight: 500;\r\n  }\r\n  p {\r\n    text-align: right;\r\n  }\r\n  hr {\r\n    background: ${({ theme }) => theme.wikiMenuBorder};\r\n    border: 0;\r\n    height: 1px;\r\n  }\r\n`;\r\n\r\nconst BodyBlock = styled.div`\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst DocumentContent = styled.div`\r\n  color: ${({ theme }) => theme.text};\r\n  p {\r\n    margin-top: 0.25rem;\r\n    margin-bottom: 0.25rem;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 570px;\r\n  }\r\n  .ql-align-left {\r\n    text-align: left;\r\n  }\r\n  .ql-align-center {\r\n    text-align: center;\r\n  }\r\n  .ql-align-right {\r\n    text-align: right;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    .ql-video {\r\n      height: 400px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst WikiViewer = ({ document, error, loading, onEdit, docName }) => {\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return (\r\n        <WikiViewerBlock>\r\n          <DocumentBlock>\r\n            <TitleBlock>\r\n              <h2>{docName}</h2>\r\n            </TitleBlock>\r\n            <DocumentContent>존재하지 않는 위키 문서입니다.</DocumentContent>\r\n          </DocumentBlock>\r\n        </WikiViewerBlock>\r\n      );\r\n    } else {\r\n      return (\r\n        <WikiViewerErrorBlock>\r\n          <span className=\"error-title\">문서 요청 실패.</span>\r\n          <span>\r\n            Status: <span className=\"error-msg\">{error.response.status}</span>\r\n          </span>\r\n          <span>\r\n            Message:{' '}\r\n            <span className=\"error-msg\">{error.response.statusText}</span>\r\n          </span>\r\n        </WikiViewerErrorBlock>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loading || !document) {\r\n    return null;\r\n  }\r\n  const { title, body, publishedDate } = document;\r\n\r\n  return (\r\n    <WikiViewerBlock>\r\n      <DocumentMenuBlock>\r\n        <DocumentMenu onEdit={onEdit} docName={docName} />\r\n      </DocumentMenuBlock>\r\n      <DocumentBlock>\r\n        <TitleBlock>\r\n          <h2>{title && title.name}</h2>\r\n          <p>\r\n            최근 수정시각: {dayjs(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n          </p>\r\n          <hr />\r\n        </TitleBlock>\r\n        <BodyBlock>\r\n          <DocumentContent dangerouslySetInnerHTML={{ __html: body }} />\r\n        </BodyBlock>\r\n      </DocumentBlock>\r\n    </WikiViewerBlock>\r\n  );\r\n};\r\n\r\nexport default WikiViewer;\r\n","import React, { useEffect } from 'react';\r\nimport WikiViewer from '../../components/wiki/WikiViewer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  readDocument,\r\n  unloadDocument,\r\n  setOriginalDocument,\r\n} from '../../module/redux/wiki';\r\nimport qs from 'qs';\r\n\r\nconst WikiViewerContainer = ({ location, match, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { docName } = match.params;\r\n  const { document, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    document: wiki.document,\r\n    error: wiki.documentError,\r\n    loading: loading['wiki/READ_DOCUMENT'],\r\n  }));\r\n  const { r } = qs.parse(location.search, { ignoreQueryPrefix: true });\r\n\r\n  // 이벤트 정의\r\n  const onEdit = () => {\r\n    dispatch(setOriginalDocument(document));\r\n    history.push('/wiki/edit');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (docName) {\r\n      dispatch(readDocument({ id: docName, r }));\r\n    } else {\r\n      history.push('/w/MAKE UP HARA WIKI: 대문');\r\n    }\r\n    // 언마운트 될 때 포스트 데이터 제거\r\n    return () => {\r\n      dispatch(unloadDocument());\r\n    };\r\n  }, [dispatch, history, docName, r]);\r\n\r\n  return (\r\n    <WikiViewer\r\n      document={document}\r\n      error={error}\r\n      loading={loading}\r\n      onEdit={onEdit}\r\n      docName={docName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiViewerContainer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faRandom,\r\n  faArrowRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst WikiSearchBlock = styled.div`\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n`;\r\n\r\nconst SearchBlock = styled.div`\r\n  display: flex;\r\n  flex: none;\r\n  color: ${({ theme }) => theme.text};\r\n  a {\r\n    padding: 0.375rem 0.75rem;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n    }\r\n  }\r\n  .action-button {\r\n    display: flex;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 0 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  flex-grow: 1;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background: ${({ theme }) => theme.body};\r\n  outline: none;\r\n  padding: 0.375rem 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst WikiSearch = ({ onChangeField, onSearch, onDirect, onShuffle }) => {\r\n  library.add([faSearch, faRandom, faArrowRight]);\r\n\r\n  const handleChange = (e) => {\r\n    onChangeField({ key: 'query', value: e.target.value });\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) {\r\n      return onSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WikiSearchBlock>\r\n      <SearchBlock>\r\n        <SearchButton onClick={onShuffle}>\r\n          <FontAwesomeIcon icon=\"random\" />\r\n        </SearchButton>\r\n        <SearchInput\r\n          onChange={handleChange}\r\n          onKeyUp={handleKeyUp}\r\n          placeholder=\"위키 문서 검색\"\r\n        />\r\n        <span className=\"action-button\">\r\n          <SearchButton onClick={onSearch}>\r\n            <FontAwesomeIcon icon=\"search\" />\r\n          </SearchButton>\r\n          <SearchButton onClick={onDirect}>\r\n            <FontAwesomeIcon icon=\"arrow-right\" />\r\n          </SearchButton>\r\n        </span>\r\n      </SearchBlock>\r\n    </WikiSearchBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSearch;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport WikiSearch from '../../components/wiki/WikiSearch';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  getDirectTitle,\r\n  initialize,\r\n  getRandomTitle,\r\n} from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiSearchContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 설정 불러오기\r\n  const { query, directName, randomTitle } = useSelector(({ wiki }) => ({\r\n    query: wiki.query,\r\n    directName: wiki.directName,\r\n    randomTitle: wiki.randomTitle,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  const onSearch = () => {\r\n    if (query === '') {\r\n      history.push('/wiki/list');\r\n    } else {\r\n      history.push(`/wiki/list?query=${query}`);\r\n    }\r\n  };\r\n\r\n  const onDirect = () => {\r\n    dispatch(getDirectTitle({ query }));\r\n  };\r\n\r\n  const onShuffle = () => {\r\n    dispatch(getRandomTitle());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (directName) {\r\n      history.push(`/w/${directName}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, directName]);\r\n\r\n  useEffect(() => {\r\n    if (randomTitle) {\r\n      history.push(`/w/${randomTitle}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, randomTitle]);\r\n\r\n  return (\r\n    <WikiSearch\r\n      onChangeField={onChangeField}\r\n      onSearch={onSearch}\r\n      onDirect={onDirect}\r\n      onShuffle={onShuffle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiSearchContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiViewerContainer from '../../containers/wiki/WikiViewerContainer';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\n\r\nconst WikiPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiPage;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../../common/Responsive';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport ImageResize from 'quill-image-resize-module-react';\r\n\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding: 1rem 0;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst TitleBlock = styled.div`\r\n  margin-top: 2rem;\r\n  h5 {\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  .title {\r\n    font-size: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  padding: 3rem 0;\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 400px;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    color: ${({ theme }) => theme.editorText};\r\n    left: 0;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ onChangeField, title, body }) => {\r\n  let localTitle;\r\n  try {\r\n    localTitle = title || JSON.parse(sessionStorage.getItem('wiki-title'));\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '문서 작성...',\r\n      modules: {\r\n        imageResize: {\r\n          modules: ['Resize', 'DisplaySize'],\r\n        },\r\n        // 참고: https://quilljs.com/docs/modules/toolbar/\r\n        toolbar: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ align: [] }],\r\n          [{ indent: '-1' }, { indent: '+1' }],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          ['video'],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n          ['clean'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  /* useRef를 사용하여 에디터 내 편집할 데이터 삽입 */\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  return (\r\n    <EditorBlock>\r\n      <TitleBlock>\r\n        <h5>문서 제목</h5>\r\n        <span className=\"title\">{localTitle.name}</span>\r\n      </TitleBlock>\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport Editor from '../../../components/wiki/edit/Editor';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initialize, changeField } from '../../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst EditorContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body } = useSelector(({ wiki }) => ({\r\n    title: wiki.title,\r\n    body: wiki.body,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n  try {\r\n    if (title) {\r\n      sessionStorage.setItem('wiki-title', JSON.stringify(title));\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n\r\n  // 언마운트 될 때 초기화\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initialize());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  if (!title && !sessionStorage.getItem('wiki-title')) {\r\n    history.push('/wiki');\r\n    return null;\r\n  }\r\n\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default withRouter(EditorContainer);\r\n","import React, { useEffect } from 'react';\r\nimport WriteActionButtons from '../../../components/common/editor/WriteActionButtons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { writeDocument } from '../../../module/redux/wiki';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  // 액션함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body, editDocument, editDocumentError } = useSelector(\r\n    ({ wiki }) => ({\r\n      title: wiki.title,\r\n      body: wiki.body,\r\n      editDocument: wiki.editDocument,\r\n      editDocumentError: wiki.editDocumentError,\r\n    }),\r\n  );\r\n  let localTitle;\r\n  try {\r\n    localTitle = title || JSON.parse(sessionStorage.getItem('wiki-title'));\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n  const { _id } = localTitle;\r\n  // 이벤트 정의\r\n  // 문서 등록\r\n  const onPublish = () => {\r\n    dispatch(writeDocument({ id: _id, body }));\r\n  };\r\n  // 취소\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n  // 처리 후 작업\r\n  useEffect(() => {\r\n    if (editDocument) {\r\n      const { name } = editDocument;\r\n      history.replace(`/w/${name}`);\r\n      history.goBack();\r\n    }\r\n    if (editDocumentError) {\r\n      // TODO: Failure Write Document\r\n    }\r\n    try {\r\n      sessionStorage.getItem('wiki-title');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }, [history, editDocument, editDocumentError]);\r\n  return (\r\n    <WriteActionButtons type=\"wiki\" onClick={onPublish} onCancel={onCancel} />\r\n  );\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport EditorContainer from '../../containers/wiki/edit/EditorContainer';\r\nimport EditorFooter from '../../components/common/editor/EditorFooter';\r\nimport WriteActionButtonsContainer from '../../containers/wiki/edit/WriteActionButtonsContainer';\r\n\r\nconst WikiEditPage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>WIKI 에디터 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <EditorFooter type=\"wiki\" />\r\n      <WriteActionButtonsContainer />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiEditPage);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst WikiRequestBlock = styled.div`\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  h2 {\r\n    font-weight: 500;\r\n    margin-top: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n    button {\r\n      padding: 0.25rem 0.5rem;\r\n      margin-left: 3rem;\r\n      border: none;\r\n      outline: none;\r\n      font-size: 0.875rem;\r\n      cursor: pointer;\r\n      color: ${({ theme }) => theme.wikiActionButtonText};\r\n      background: ${({ theme }) => theme.wikiActionButtonBody};\r\n      &:hover {\r\n        color: ${({ theme }) => theme.wikiActionButtonHoverText};\r\n        background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst WikiRequestErrorBlock = styled(ErrorBlock)`\r\n  margin-top: 3rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst RequestItem = ({ title, onEdit }) => {\r\n  const { name } = title;\r\n  return (\r\n    <div className=\"item\">\r\n      <span>{name}</span>\r\n      <button onClick={() => onEdit(title)}>작성하기</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WikiRequest = ({ requestList, loading, error, onEdit }) => {\r\n  if (error) {\r\n    return (\r\n      <Responsive>\r\n        <WikiRequestErrorBlock>\r\n          <span className=\"error-title\">리스트 요청 실패.</span>\r\n          <span className=\"error-msg\">Status: {error.response.status}</span>\r\n          <span className=\"error-msg\">\r\n            Message: {error.response.statusText}\r\n          </span>\r\n        </WikiRequestErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  if (!requestList || loading) {\r\n    return null;\r\n  }\r\n  if (!requestList.length) {\r\n    return (\r\n      <Responsive>\r\n        <WikiRequestErrorBlock>\r\n          <span className=\"error-title\">지금 작성이 필요한 문서가 없습니다...ㅠ</span>\r\n        </WikiRequestErrorBlock>\r\n      </Responsive>\r\n    );\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <WikiRequestBlock>\r\n        <h2>작성이 필요한 문서</h2>\r\n        {requestList.map((request) => (\r\n          <RequestItem title={request} onEdit={onEdit} key={request._id} />\r\n        ))}\r\n      </WikiRequestBlock>\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default WikiRequest;\r\n","import React, { useEffect } from 'react';\r\nimport WikiRequest from '../../components/wiki/WikiRequest';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRequestList, setTitle } from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiRequestContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n\r\n  // 전역 상태 불러오기\r\n  const { requestList, loading, error } = useSelector(({ wiki, loading }) => ({\r\n    requestList: wiki.requestList,\r\n    loading: loading['wiki/GET_REQUEST_LIST'],\r\n    error: wiki.requestListError,\r\n  }));\r\n\r\n  // 이벤트 정의\r\n  const onEdit = title => {\r\n    dispatch(setTitle(title));\r\n    history.push('/wiki/edit');\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getRequestList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <WikiRequest\r\n      requestList={requestList}\r\n      loading={loading}\r\n      error={error}\r\n      onEdit={onEdit}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiRequestContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiRequestContainer from '../../containers/wiki/WikiRequestContainer';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\n\r\nconst WikiRequestPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiRequestContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiRequestPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst WikiHistoryBlock = styled(Responsive)`\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  .title {\r\n    margin: 1rem 0;\r\n    font-size: 2rem;\r\n    font-weight: 300;\r\n    & > span {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  .item {\r\n    margin: 0.25rem 0;\r\n  }\r\n  .item .item-link {\r\n    font-size: 0.8rem;\r\n    margin-left: 0.5rem;\r\n    color: ${({ theme }) => theme.wikiHistoryLinkText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.wikiHistoryLinkHoverText};\r\n    }\r\n  }\r\n  .item .item-revision {\r\n    font-weight: 700;\r\n    margin-left: 3rem;\r\n  }\r\n`;\r\n\r\nconst HistoryErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst HistoryItem = ({ document }) => {\r\n  const { title, publishedDate, revision } = document;\r\n  return (\r\n    <div className=\"item\">\r\n      <span className=\"item-date\">\r\n        {dayjs(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n      </span>\r\n      <Link to={`/w/${title.name}?r=${revision}`} className=\"item-link\">\r\n        (보기)\r\n      </Link>\r\n      <span className=\"item-revision\">(r{revision})</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WikiHistory = ({ historyList, error, loading, docName }) => {\r\n  if (error) {\r\n    return (\r\n      <WikiHistoryBlock>\r\n        <HistoryErrorBlock>\r\n          <span className=\"error-title\">히스토리 요청 실패.</span>\r\n          <span>\r\n            Status: <span className=\"error-msg\">{error.response.status}</span>\r\n          </span>\r\n          <span>\r\n            Message:{' '}\r\n            <span className=\"error-msg\">{error.response.statusText}</span>\r\n          </span>\r\n        </HistoryErrorBlock>\r\n      </WikiHistoryBlock>\r\n    );\r\n  }\r\n  if (!historyList || loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <WikiHistoryBlock>\r\n      <span className=\"title\">\r\n        <Link to=\"#\">{docName}</Link>\r\n        <span>(문서 역사)</span>\r\n      </span>\r\n      {historyList.map((document) => (\r\n        <HistoryItem document={document} key={document._id} />\r\n      ))}\r\n    </WikiHistoryBlock>\r\n  );\r\n};\r\n\r\nexport default WikiHistory;\r\n","import React, { useEffect } from 'react';\r\nimport WikiHistory from '../../components/wiki/WikiHistory';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getHistoryList } from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiHistoryContainer = ({ match }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 변수 불러오기\r\n  const { historyList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    historyList: wiki.historyList,\r\n    error: wiki.historyListError,\r\n    loading: loading['wiki/GET_HISTORY_LIST'],\r\n  }));\r\n  const { docName } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(getHistoryList({ id: docName }));\r\n  }, [dispatch, docName]);\r\n\r\n  return (\r\n    <WikiHistory\r\n      historyList={historyList}\r\n      error={error}\r\n      loading={loading}\r\n      docName={docName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiHistoryContainer);\r\n","import React from 'react';\r\nimport WikiHistoryContainer from '../../containers/wiki/WikiHistoryContainer';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\n\r\nconst WikiHistoryPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiHistoryContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiHistoryPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nconst WikiListBlock = styled.div`\r\n  margin: 2rem;\r\n  margin-top: 0;\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst WikiListErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst DocumentBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:first-of-type {\r\n    border-top: none;\r\n  }\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .wiki-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst DocumentItem = ({ document }) => {\r\n  const { name } = document;\r\n  return (\r\n    <DocumentBlock>\r\n      <Link to={`/w/${name}`}>{name}</Link>\r\n      <div className=\"wiki-info\"></div>\r\n    </DocumentBlock>\r\n  );\r\n};\r\n\r\nconst WikiList = ({ documentList, error, loading }) => {\r\n  if (error) {\r\n    return (\r\n      <WikiListErrorBlock>\r\n        <span className=\"error-title\">검색 결과 요청 실패.</span>\r\n        <span>\r\n          Status: <span className=\"error-msg\">{error.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">{error.response.statusText}</span>\r\n        </span>\r\n      </WikiListErrorBlock>\r\n    );\r\n  }\r\n  if (loading || !documentList) {\r\n    return null;\r\n  }\r\n  if (!loading && documentList && !documentList.length) {\r\n    return (\r\n      <WikiListErrorBlock>\r\n        <span className=\"error-title\">검색 결과가 없습니다.</span>\r\n        <span className=\"error-title\">\r\n          다른 검색어를 입력해보는건 어떨까요???\r\n        </span>\r\n      </WikiListErrorBlock>\r\n    );\r\n  }\r\n  return (\r\n    <WikiListBlock>\r\n      {!loading && documentList && (\r\n        <div>\r\n          {documentList.map((document) => (\r\n            <DocumentItem document={document} key={document._id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </WikiListBlock>\r\n  );\r\n};\r\n\r\nexport default WikiList;\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Category = styled(NavLink)`\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  white-space: pre;\r\n  text-decoration: none;\r\n  font-weight: lighter;\r\n\r\n  &.active {\r\n    font-weight: 600;\r\n    border-bottom: 2px solid ${({ theme }) => theme.categoryBorder};\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\n\r\nexport default Category;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Category from '../common/Category';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\nconst categories = [\r\n  {\r\n    name: 'normal',\r\n    text: '위키 문서',\r\n  },\r\n  {\r\n    name: 'oldest',\r\n    text: 'OLDEST',\r\n  },\r\n  {\r\n    name: 'shortest',\r\n    text: '짧은 내용',\r\n  },\r\n  {\r\n    name: 'longest',\r\n    text: '긴 내용',\r\n  },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n  margin: 2rem;\r\n  margin-bottom: 0;\r\n  padding-top: 0.1rem;\r\n  line-height: 3;\r\n  border-top: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  @media screen and (max-width: 768px) {\r\n    overflow-x: auto;\r\n  }\r\n`;\r\n\r\nconst Categories = ({ location }) => {\r\n  const { query, oldest, shortest, longest } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const handleActive = (name) => {\r\n    if (name === 'oldest' && oldest === 'true') return true;\r\n    else if (name === 'shortest' && shortest === 'true') return true;\r\n    else if (name === 'longest' && longest === 'true') return true;\r\n    else if (\r\n      name === 'normal' &&\r\n      oldest === undefined &&\r\n      shortest === undefined &&\r\n      longest === undefined\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <CategoriesBlock>\r\n      {categories.map((category) => (\r\n        <Category\r\n          key={category.name}\r\n          activeClassName=\"active\"\r\n          exact={true}\r\n          isActive={() => handleActive(category.name)}\r\n          to={\r\n            category.name === 'normal'\r\n              ? `/wiki/list?${qs.stringify({ query: query })}`\r\n              : `/wiki/list?${qs.stringify({ query: query })}&${\r\n                  category.name\r\n                }=true`\r\n          }\r\n        >\r\n          {category.text}\r\n        </Category>\r\n      ))}\r\n    </CategoriesBlock>\r\n  );\r\n};\r\n\r\nexport default withRouter(Categories);\r\n","import React, { useEffect } from 'react';\r\nimport WikiList from '../../components/wiki/WikiList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSearchList } from '../../module/redux/wiki';\r\nimport qs from 'qs';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Categories from '../../components/wiki/Categories';\r\n\r\nconst isValidQuery = (oldest, shortest, longest) => {\r\n  if (oldest !== undefined && shortest !== undefined) {\r\n    return false;\r\n  }\r\n  if (shortest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  if (oldest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  if (oldest !== undefined && shortest !== undefined && longest !== undefined) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst WikiListContainer = ({ location, history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 설정 불러오기\r\n  const { searchList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    searchList: wiki.searchList,\r\n    error: wiki.searchListError,\r\n    loading: loading['wiki/GET_SEARCH_LIST'],\r\n  }));\r\n  const { query, oldest, shortest, longest } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  // 이벤트 정의하기\r\n  useEffect(() => {\r\n    if (isValidQuery(oldest, shortest, longest)) {\r\n      dispatch(getSearchList({ query, oldest, shortest, longest }));\r\n    } else {\r\n      history.replace(`/wiki/list?query=${query}`);\r\n    }\r\n  }, [dispatch, history, query, oldest, shortest, longest]);\r\n  return (\r\n    <>\r\n      <Categories />\r\n      <WikiList documentList={searchList} error={error} loading={loading} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiListContainer);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport WikiSearchContainer from '../../containers/wiki/WikiSearchContainer';\r\nimport WikiListContainer from '../../containers/wiki/WikiListContainer';\r\n\r\nconst WikiListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiListPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MyPageMenuBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 2rem;\r\n  border-right: 1px solid ${({ theme }) => theme.categoryBorder};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst MenuList = [\r\n  { name: '프로필', link: '/mypage' },\r\n  { name: '보안', link: '/mypage/security' },\r\n  { name: '활동 기록', link: '/mypage/activity' },\r\n];\r\n\r\nconst NavMenu = styled(NavLink)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  &:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  &.active {\r\n    font-weight: 600;\r\n    border-left: 2px solid ${({ theme }) => theme.categoryBorder};\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .menu-name {\r\n    padding: 0 0.5rem;\r\n  }\r\n`;\r\n\r\nconst MyPageMenu = () => {\r\n  return (\r\n    <MyPageMenuBlock>\r\n      {MenuList.map((menu) => (\r\n        <NavMenu key={menu.name} to={menu.link} exact={true}>\r\n          <span className=\"menu-name\">{menu.name}</span>\r\n        </NavMenu>\r\n      ))}\r\n    </MyPageMenuBlock>\r\n  );\r\n};\r\n\r\nexport default MyPageMenu;\r\n","import React from 'react';\r\nimport MyPageMenu from '../../components/profile/MyPageMenu';\r\n\r\nconst MyPageMenuContainer = () => {\r\n  return <MyPageMenu />;\r\n};\r\n\r\nexport default MyPageMenuContainer;\r\n","import styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\n\r\nconst FlexContentBlock = styled(Responsive)`\r\n  display: flex;\r\n  flex-direction: ${(props) =>\r\n    props.direction === 'column' ? 'column' : 'row'};\r\n`;\r\n\r\nexport default FlexContentBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\nexport const ProfileBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  .profile-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .profile-info-title {\r\n    font-weight: lighter;\r\n    font-size: 1.5rem;\r\n  }\r\n  .profile-info-explain {\r\n    font-weight: lighter;\r\n    font-size: 1rem;\r\n    margin-top: 0.25rem;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-info-value {\r\n    margin-top: 1.25rem;\r\n    span {\r\n      padding: 0.25rem 0.5rem;\r\n      font-size: 1.125rem;\r\n      border-radius: 0.25rem;\r\n      background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n    }\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-form {\r\n    margin: 1.5rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .value-provider {\r\n    text-transform: uppercase;\r\n  }\r\n  .possible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  .impossible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.errorText};\r\n    margin-top: 0.5rem;\r\n  }\r\n  .success-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyleInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1.125rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n`;\r\n\r\nconst ProfileSubmitButton = styled(Button)`\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const ProfileErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst Profile = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  validName,\r\n  nameMessage,\r\n  existNameError,\r\n  equalName,\r\n  submitMessage,\r\n  errorMessage,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  if (existNameError) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">프로필 요청 실패.</span>\r\n        <span>\r\n          Status:{' '}\r\n          <span className=\"error-msg\">{existNameError.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">\r\n            {existNameError.response.statusText}\r\n          </span>\r\n        </span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { username, provider } = user;\r\n  return (\r\n    <ProfileBlock>\r\n      <div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">ID</span>\r\n          <div className=\"profile-info-value\">\r\n            <span>{username}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">로그인 유형</span>\r\n          <span className=\"profile-info-explain\">\r\n            어떤 방식으로 로그인했는지를 확인합니다.\r\n          </span>\r\n          <div className=\"profile-info-value\">\r\n            <span className=\"value-provider\">{provider}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <form className=\"profile-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">DISPLAY NAME</span>\r\n            <span className=\"profile-info-explain\">\r\n              다른 사용자들에게 보여지는 이름입니다.\r\n            </span>\r\n            <StyleInput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={\r\n                !equalName && (validName === true ? 'possible' : 'impossible')\r\n              }\r\n              value={form.name ? form.name : ''}\r\n              onChange={onChange}\r\n            />\r\n            {validName === false && (\r\n              <span className=\"invaild-message\">{nameMessage}</span>\r\n            )}\r\n            {submitMessage !== '' && (\r\n              <span className=\"success-message\">{submitMessage}</span>\r\n            )}\r\n            {errorMessage !== '' && (\r\n              <span className=\"invalid-message\">{errorMessage}</span>\r\n            )}\r\n          </div>\r\n          <ProfileSubmitButton\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validName || equalName}\r\n          >\r\n            수정\r\n          </ProfileSubmitButton>\r\n        </form>\r\n      </div>\r\n    </ProfileBlock>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport Profile from '../../components/profile/Profile';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  checkExistName,\r\n  check,\r\n  initializeUpdateName,\r\n  updateName,\r\n} from '../../module/redux/user';\r\n\r\nconst ProfileContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    user,\r\n    form,\r\n    existName,\r\n    existNameError,\r\n    updateUser,\r\n    updateUserError,\r\n  } = useSelector(({ user }) => ({\r\n    user: user.user,\r\n    form: user.profile,\r\n    existName: user.existName,\r\n    existNameError: user.existNameError,\r\n    updateUser: user.updateUser,\r\n    updateUserError: user.updateUserError,\r\n  }));\r\n\r\n  const [validName, setValidName] = useState(true); // 사용 가능한 이름 여부\r\n  const [equalName, setEqualName] = useState(true); // 기존 사용자 이름이랑 일치하는지 여부\r\n  const [nameMessage, setNameMessage] = useState(''); // 검증 실패 메시지\r\n  const [submitMessage, setSubmitMessage] = useState(''); // submit 결과 메시지\r\n  const [errorMessage, setErrorMessage] = useState(''); // submit 에러 메시지\r\n  const loadingForm = useRef(true);\r\n\r\n  // input 상태 반영\r\n  const onChange = (e) => {\r\n    setNameMessage('');\r\n    const { value, name } = e.target;\r\n    dispatch(changeField({ form: 'profile', key: name, value }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name } = form;\r\n    const { _id } = user;\r\n    if (validName && !equalName) {\r\n      dispatch(updateName({ id: _id, name }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // 중복되지 않은 이름일 때\r\n    if (!existName || (existName && existName.result)) {\r\n      setValidName(true);\r\n    } else {\r\n      // 상태 업데이트\r\n      setValidName(false);\r\n      setEqualName(false);\r\n      setNameMessage(existName ? existName.message : ''); // 메시지 저장\r\n    }\r\n    setSubmitMessage('');\r\n  }, [existName]);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    if (loadingForm.current) return;\r\n    const { name } = form;\r\n    const loginName = user ? user.name : '';\r\n    if (name === undefined) return;\r\n    // 이름이 현재 사용자 이름이랑 다르면\r\n    if (name && name.toLowerCase() !== loginName.toLowerCase()) {\r\n      // 이름이 사용 가능한지 비동기로 요청\r\n      dispatch(checkExistName(name));\r\n      setEqualName(false);\r\n    } else {\r\n      // 이름이 같으면\r\n      if (name) {\r\n        setEqualName(true); // 상태 갱신\r\n      } else {\r\n        // 공백일 때\r\n        console.log('실행');\r\n        dispatch(checkExistName(name)); // 요청해서 공백일 떄의 결과 값을 갱신 한다\r\n      }\r\n    }\r\n  }, [dispatch, form, user]);\r\n\r\n  useEffect(() => {\r\n    const { name } = user ? user : '';\r\n    dispatch(changeField({ form: 'profile', key: 'name', value: name }));\r\n    loadingForm.current = false;\r\n  }, [dispatch, user]);\r\n\r\n  useEffect(() => {\r\n    if (updateUser) {\r\n      dispatch(check());\r\n      setSubmitMessage('성공적으로 수정되었습니다.');\r\n      dispatch(initializeUpdateName());\r\n    } else if (updateUserError) {\r\n      setErrorMessage('에러가 발생했습니다.');\r\n      dispatch(initializeUpdateName());\r\n    }\r\n  }, [dispatch, updateUser, updateUserError]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeUpdateName());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Profile\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      validName={validName}\r\n      nameMessage={nameMessage}\r\n      existNameError={existNameError}\r\n      equalName={equalName}\r\n      submitMessage={submitMessage}\r\n      errorMessage={errorMessage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport ProfileContainer from '../../containers/profile/ProfileContainer';\r\n\r\nconst MyPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ProfileContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ProfileBlock, ProfileErrorBlock } from './Profile';\r\nimport Button from '../common/Button';\r\n\r\nconst SecurityBlock = styled(ProfileBlock)`\r\n  .password-input-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .change-password-result {\r\n    margin: 1rem 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n  width: 20rem;\r\n  &::placeholder {\r\n    font-weight: lighter;\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst Security = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  valid,\r\n  validMessage,\r\n  onSubmit,\r\n  submitPassword,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { curPassword, newPassword, confirmPassword } = form;\r\n  const {\r\n    curPassword: validCur,\r\n    newPassword: validNew,\r\n    confirmPassword: validConfirm,\r\n  } = valid;\r\n  const {\r\n    curPassword: validMessageCur,\r\n    newPassword: validMessageNew,\r\n    confirmPassword: validMessageConfirm,\r\n  } = validMessage;\r\n  const { result, message } = submitPassword;\r\n  const { username } = user ? user : '';\r\n  return (\r\n    <SecurityBlock>\r\n      <div>\r\n        <form className=\"change-password-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">비밀번호 변경</span>\r\n            <span className=\"profile-info-explain\">\r\n              비밀번호를 변경할 수 있습니다.\r\n            </span>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"curPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"기존 비밀번호 입력\"\r\n                className={validCur === true ? 'possible' : 'impossible'}\r\n                value={curPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageCur !== '' && (\r\n                <span className=\"invalid-message\">{validMessageCur}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 입력\"\r\n                className={validNew === true ? 'possible' : 'impossible'}\r\n                value={newPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageNew !== '' && (\r\n                <span className=\"invalid-message\">{validMessageNew}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 한번 더 입력\"\r\n                className={validConfirm === true ? 'possible' : 'impossible'}\r\n                value={confirmPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageConfirm !== '' && (\r\n                <span className=\"invalid-message\">{validMessageConfirm}</span>\r\n              )}\r\n            </div>\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"username\"\r\n              value={username ? username : ''}\r\n            />\r\n          </div>\r\n          <div className=\"change-password-result\">\r\n            {message !== '' && result && (\r\n              <span className=\"success-message\">{message}</span>\r\n            )}\r\n            {message !== '' && !result && (\r\n              <span className=\"invalid-message\">{message}</span>\r\n            )}\r\n          </div>\r\n          <ButtonWithMarginTop\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validCur || !validNew || !validConfirm}\r\n          >\r\n            비밀번호 변경\r\n          </ButtonWithMarginTop>\r\n        </form>\r\n      </div>\r\n    </SecurityBlock>\r\n  );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Security from '../../components/profile/Security';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  changePassword,\r\n  initializeChangePassword,\r\n} from '../../module/redux/user';\r\n\r\nconst SecurityContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { user, form, changePasswordResult, changePasswordError } = useSelector(\r\n    ({ user }) => ({\r\n      user: user.user,\r\n      form: user.password,\r\n      changePasswordResult: user.changePasswordResult,\r\n      changePasswordError: user.changePasswordError,\r\n    }),\r\n  );\r\n\r\n  const [valid, setValid] = useState({\r\n    curPassword: false,\r\n    newPassword: false,\r\n    confirmPassword: false,\r\n  });\r\n  const [validMessage, setValidMessage] = useState({\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  });\r\n  const [submitPassword, setSubmitPassword] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n  const MIN_LENGTH = 8;\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    if (name === 'curPassword') {\r\n      setValidMessage({\r\n        ...validMessage,\r\n        curPassword: '',\r\n      });\r\n    }\r\n    if (submitPassword.message && submitPassword.message !== '') {\r\n      setSubmitPassword({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    }\r\n    dispatch(changeField({ form: 'password', key: name, value }));\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {\r\n      curPassword: curValid,\r\n      newPassword: newValid,\r\n      confirmPassword: confirmValid,\r\n    } = valid;\r\n    const { _id } = user;\r\n    const { curPassword, newPassword } = form;\r\n    if (curValid && newValid && confirmValid) {\r\n      dispatch(changePassword({ id: _id, password: curPassword, newPassword }));\r\n    }\r\n  };\r\n\r\n  const stateValidMessage = useRef(validMessage);\r\n\r\n  useEffect(() => {\r\n    const isValidNewPassword =\r\n      form.newPassword && form.newPassword.length >= MIN_LENGTH;\r\n    const isValidConfirmPassword =\r\n      form.confirmPassword === form.newPassword &&\r\n      form.confirmPassword.length >= MIN_LENGTH;\r\n    setValid({\r\n      curPassword: form.curPassword !== '',\r\n      newPassword:\r\n        form.newPassword !== '' &&\r\n        isValidNewPassword &&\r\n        form.newPassword !== form.curPassword,\r\n      confirmPassword: form.confirmPassword !== '' && isValidConfirmPassword,\r\n    });\r\n    if (!isValidNewPassword && form.newPassword !== '') {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '비밀번호는 8자 이상 입력해야 합니다!',\r\n      });\r\n    } else if (!isValidConfirmPassword && form.confirmPassword !== '') {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        confirmPassword: '비밀번호가 일치하지 않습니다!',\r\n      });\r\n    } else if (\r\n      form.newPassword !== '' &&\r\n      form.newPassword === form.curPassword &&\r\n      isValidNewPassword\r\n    ) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '기존 비밀번호와 일치합니다.',\r\n      });\r\n    } else if (form.newPassword === '' || isValidNewPassword) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '',\r\n      });\r\n    } else if (form.confirmPassword === '' || isValidConfirmPassword) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        confirmPassword: '',\r\n      });\r\n    }\r\n  }, [form, stateValidMessage]);\r\n\r\n  useEffect(() => {\r\n    if (changePasswordResult) {\r\n      setSubmitPassword({\r\n        result: true,\r\n        message: '비밀번호가 성공적으로 변경되었습니다.',\r\n      });\r\n      dispatch(initializeChangePassword());\r\n    } else if (changePasswordError) {\r\n      if (\r\n        changePasswordError.response &&\r\n        changePasswordError.response.status === 412\r\n      ) {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '',\r\n        });\r\n        setValidMessage({\r\n          curPassword: '기존 비밀번호가 일치하지 않습니다',\r\n          newPassword: '',\r\n          confirmPassword: '',\r\n        });\r\n        setValid({\r\n          curPassword: false,\r\n          newPassword: true,\r\n          confirmPassword: true,\r\n        });\r\n      } else {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '비밀번호 변경에 실패했습니다.',\r\n        });\r\n      }\r\n    }\r\n  }, [dispatch, changePasswordResult, changePasswordError]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeChangePassword());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Security\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      valid={valid}\r\n      validMessage={validMessage}\r\n      onSubmit={onSubmit}\r\n      submitPassword={submitPassword}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SecurityContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport SecurityContainer from '../../containers/profile/SecurityContainer';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\n\r\nconst SecurityPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <SecurityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SecurityPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport PaginationContainer from '../../containers/post/PaginationContainer';\r\n\r\nconst ActivityBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 700px;\r\n  @media screen and (max-width: 1024px) {\r\n    width: 580px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 70vw;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 60vw;\r\n  }\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  .activity-count-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media screen and (min-width: 769px) {\r\n      flex-direction: row;\r\n      .profile-info-group {\r\n        &:first-of-type {\r\n          margin-left: 0;\r\n        }\r\n        margin-left: 3rem;\r\n      }\r\n    }\r\n  }\r\n  .profile-info-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .profile-info-title {\r\n    font-weight: lighter;\r\n    font-size: 1.5rem;\r\n  }\r\n  .profile-info-content {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .profile-info-content-col {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .content-title {\r\n    margin-right: 1rem;\r\n    font-size: 1rem;\r\n  }\r\n  .content-value {\r\n    padding: 0.25rem 0.5rem;\r\n    font-size: 1rem;\r\n    border-radius: 0.25rem;\r\n    background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  }\r\n  .activity-post-list {\r\n    margin: 1rem 0;\r\n  }\r\n  .activity-post-item {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst Activity = ({\r\n  user,\r\n  postList,\r\n  postCount,\r\n  lastPage,\r\n  documentCount,\r\n  postListError,\r\n  documentCountError,\r\n  loadingPost,\r\n  loadingWiki,\r\n}) => {\r\n  return (\r\n    <ActivityBlock>\r\n      <div className=\"activity-count-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">WIKI DOCUMENT</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 위키 문서 개수</span>\r\n            {!loadingWiki && (\r\n              <span className=\"content-value\">{documentCount}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">POST</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 개수</span>\r\n            {!loadingPost && <span className=\"content-value\">{postCount}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"activity-post-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">PUBLISHED POST LIST</span>\r\n          <div className=\"profile-info-content-col\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 목록</span>\r\n            {!loadingPost && postList && (\r\n              <div className=\"activity-post-list\">\r\n                <div className=\"activity-post-item\">\r\n                  {postList.map((post) => (\r\n                    <PostItem post={post} key={post._id} />\r\n                  ))}\r\n                </div>\r\n                <PaginationContainer />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ActivityBlock>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { useEffect } from 'react';\r\nimport Activity from '../../components/profile/Activity';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList } from '../../module/redux/post';\r\nimport { getDocumentCount } from '../../module/redux/wiki';\r\n\r\nconst ActivityContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    user,\r\n    postList,\r\n    postCount,\r\n    documentCount,\r\n    postListError,\r\n    documentCountError,\r\n    loadingPost,\r\n    loadingWiki,\r\n  } = useSelector(({ user, post, wiki, loading }) => ({\r\n    user: user.user,\r\n    postList: post.postList,\r\n    postCount: post.postCount,\r\n    documentCount: wiki.documentCount,\r\n    postListError: post.postListError,\r\n    documentCountError: wiki.documentCountError,\r\n    loadingPost: loading['post/GET_LIST'],\r\n    loadingWiki: loading['wiki/GET_DOCUMENT_COUNT'],\r\n  }));\r\n\r\n  const { username } = user;\r\n  useEffect(() => {\r\n    if (username) {\r\n      dispatch(getList({ username }));\r\n      dispatch(getDocumentCount({ username }));\r\n    }\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch, username]);\r\n\r\n  return (\r\n    <Activity\r\n      user={user}\r\n      postList={postList}\r\n      postCount={postCount}\r\n      documentCount={documentCount}\r\n      postListError={postListError}\r\n      documentCountError={documentCountError}\r\n      loadingPost={loadingPost}\r\n      loadingWiki={loadingWiki}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ActivityContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport MyPageMenuContainer from '../../containers/profile/MyPageMenuContainer';\r\nimport ActivityContainer from '../../containers/profile/ActivityContainer';\r\n\r\nconst ActivityPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ActivityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityPage;\r\n","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport MainPage from './pages/main/MainPage';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme } from './lib/styles/theme';\nimport { darkTheme } from './lib/styles/theme';\nimport LoginPage from './pages/auth/LoginPage';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTheme } from './module/redux/theme';\nimport PostWritePage from './pages/post/PostWritePage';\nimport PostPage from './pages/post/PostPage';\nimport PostListPage from './pages/post/PostListPage';\nimport { Helmet } from 'react-helmet-async';\nimport LoginWithNaverPage from './pages/auth/callback/LoginWithNaverPage';\nimport LoginWithKakaoPage from './pages/auth/callback/LoginWithKakaoPage';\nimport WikiPage from './pages/wiki/WikiPage';\nimport WikiEditPage from './pages/wiki/WikiEditPage';\nimport WikiRequestPage from './pages/wiki/WikiRequestPage';\nimport WikiHistoryPage from './pages/wiki/WikiHistoryPage';\nimport WikiListPage from './pages/wiki/WikiListPage';\nimport MyPage from './pages/profile/MyPage';\nimport SecurityPage from './pages/profile/SecurityPage';\nimport ActivityPage from './pages/profile/ActivityPage';\n\nconst App = () => {\n  const { isDarkTheme } = useSelector(({ theme }) => ({\n    isDarkTheme: theme.isDarkTheme,\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      const storageTheme = localStorage.getItem('darkTheme');\n      if (storageTheme === 'true') {\n        dispatch(setTheme(true));\n      }\n    } catch (error) {\n      throw error;\n    }\n  }, [dispatch]);\n  return (\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n      <>\n        <Helmet>\n          <title>MAKE UP HARA</title>\n        </Helmet>\n        <Route component={MainPage} path={['/']} exact />\n        <Route component={LoginPage} path={'/login'} exact />\n        <Route component={LoginWithNaverPage} path={'/login/naver'} />\n        <Route component={LoginWithKakaoPage} path={'/login/kakao'} />\n        <Route component={RegisterPage} path={'/register'} />\n        <Route\n          component={PostListPage}\n          path={['/blog', '/blog/@:username']}\n          exact\n        />\n        <Route component={PostWritePage} path={'/blog/write'} />\n        <Route component={PostPage} path={'/blog/@:username/:postId'} exact />\n        <Route component={WikiPage} path={['/w', '/w/:docName']} exact />\n        <Route component={WikiEditPage} path={'/wiki/edit'} exact />\n        <Route component={WikiRequestPage} path={'/wiki/request'} exact />\n        <Route\n          component={WikiHistoryPage}\n          path={'/wiki/history/:docName'}\n          exact\n        />\n        <Route component={WikiListPage} path={'/wiki/list'} exact />\n        <Route component={MyPage} path={'/mypage'} exact />\n        <Route component={SecurityPage} path={'/mypage/security'} exact />\n        <Route component={ActivityPage} path={'/mypage/activity'} exact />\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport post, { postSaga } from './post';\r\nimport wiki, { wikiSaga } from './wiki';\r\nimport theme from './theme';\r\n\r\n/* root reducer */\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n  theme,\r\n  post,\r\n  wiki,\r\n});\r\n\r\n/* root saga */\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), postSaga(), wikiSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer, { rootSaga } from './module/redux/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { tempSetUser, check } from './module/redux/user';\nimport { HelmetProvider } from 'react-helmet-async';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n  // applyMiddleware(sagaMiddleware);\n);\n\nsagaMiddleware.run(rootSaga);\nconst loadUser = () => {\n  try {\n    const user = sessionStorage.getItem('user');\n    if (!user) return;\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (error) {\n    throw error;\n  }\n};\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as postAPI from '../../lib/api/post';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// local\r\nconst INITIALIZE = 'post/INITIALIZE'; // 작성 내용 초기화\r\nconst CHANGE_FIELD = 'post/CHANGE_FIELD'; // 특정 key값 바꾸기\r\nconst SET_ORIGINAL_POST = 'post/SET_ORIGINAL_POST'; // 포스트 편집 시 에디터에 포스트 정보 세팅\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 뷰 언마운트시 post 정보 제거\r\n// api - write\r\nconst [\r\n  WRITE_POST,\r\n  WRITE_POST_SUCCESS,\r\n  WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('post/WRITE_POST');\r\n// api - read\r\nconst [\r\n  READ_POST,\r\n  READ_POST_SUCCESS,\r\n  READ_POST_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST');\r\n// api - update\r\nconst [\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAILURE,\r\n] = createRequestActionTypes('post/UPDATE_POST');\r\n// api - list\r\nconst [GET_LIST, GET_LIST_SUCCESS, GET_LIST_FAILURE] = createRequestActionTypes(\r\n  'post/GET_LIST',\r\n);\r\nconst UNLOAD_LIST = 'post/UNLOAD_LIST'; // 포스트 리스트 뷰 언마운트시 post list 정보 제거\r\n\r\n/* action */\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, (post) => post);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\nexport const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\r\n  title,\r\n  body,\r\n  tags,\r\n}));\r\nexport const readPost = createAction(READ_POST, (id) => id);\r\nexport const updatePost = createAction(\r\n  UPDATE_POST,\r\n  ({ id, title, body, tags }) => ({ id, title, body, tags }),\r\n);\r\nexport const getList = createAction(\r\n  GET_LIST,\r\n  ({ page, tag, username, block }) => ({\r\n    page,\r\n    tag,\r\n    username,\r\n    block,\r\n  }),\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\n\r\n/* redux-saga */\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\nconst getListSaga = createRequestSaga(GET_LIST, postAPI.getList);\r\n\r\nexport function* postSaga() {\r\n  yield takeLatest(WRITE_POST, writePostSaga);\r\n  yield takeLatest(READ_POST, readPostSaga);\r\n  yield takeLatest(UPDATE_POST, updatePostSaga);\r\n  yield takeLatest(GET_LIST, getListSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n  editPost: null,\r\n  editPostError: null,\r\n  post: null,\r\n  postError: null,\r\n  postList: [],\r\n  lastPage: 1,\r\n  postCount: 0,\r\n  postListError: null,\r\n  targetPostId: null,\r\n};\r\n\r\n/* reducer */\r\nconst post = handleActions(\r\n  {\r\n    [INITIALIZE]: () => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키값을 업데이트\r\n    }),\r\n    [SET_ORIGINAL_POST]: (state, { payload: post }) => ({\r\n      ...state,\r\n      title: post.title,\r\n      body: post.body,\r\n      tags: post.tags,\r\n      targetPostId: post._id,\r\n    }),\r\n    [UNLOAD_POST]: (state) => ({\r\n      ...state,\r\n      post: null,\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST]: (state) => ({\r\n      ...state,\r\n      editPost: null,\r\n      neditPosttError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPostError,\r\n    }),\r\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n    }),\r\n    [READ_POST_FAILURE]: (state, { payload: postError }) => ({\r\n      ...state,\r\n      postError,\r\n    }),\r\n    [UPDATE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n    }),\r\n    [UPDATE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPostError,\r\n    }),\r\n    [GET_LIST_SUCCESS]: (state, { payload: postList, meta: response }) => ({\r\n      ...state,\r\n      postList,\r\n      postCount: parseInt(response.headers['makeuphara-post-count'], '10'),\r\n      lastPage: parseInt(response.headers['makeuphara-post-last-page'], '10'),\r\n    }),\r\n    [GET_LIST_FAILURE]: (state, { payload: postListError }) => ({\r\n      ...state,\r\n      postListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      postList: null,\r\n      postListError: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default post;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  padding: 0, 1rem;\r\n  width: 986px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 748px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 98%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 소셜 로그인 버튼에서 css를 사용하기 위해 export\r\n * 소셜 로그인은 ref를 설정해주어야 하기 때문에 prop 전달이 어려움\r\n */\r\nexport const buttonStyle = css`\r\n  border: none;\r\n  border-radius: 2px;\r\n  font-size: 1rem;\r\n  font-weight: normal;\r\n  padding: 0.25rem 1rem;\r\n  color: ${({ theme }) => theme.btnText};\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: ${({ theme }) => theme.btnBody};\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.btnHoverBody};\r\n  }\r\n\r\n  &:disabled,\r\n  &[disabled] {\r\n    cursor: default;\r\n    background: ${({ theme }) => theme.btnDisableBody};\r\n    color: ${({ theme }) => theme.btnDisableColor};\r\n    &:hover{\r\n      background: ${({ theme }) => theme.btnDisableBody};\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      display: inline-block;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.indigo &&\r\n    css`\r\n      background: ${palette.indigo[9]};\r\n      &:hover {\r\n        background: ${palette.indigo[7]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.violet &&\r\n    css`\r\n      background: ${palette.violet[9]};\r\n      color: #fff;\r\n      &:hover {\r\n        background: ${palette.violet[7]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.red &&\r\n    css`\r\n      background: ${palette.red[8]};\r\n      &:hover {\r\n        background: ${palette.red[6]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[6]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.yellow &&\r\n    css`\r\n      background: ${palette.yellow[5]};\r\n      &:hover {\r\n        background: ${palette.yellow[3]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.transparent &&\r\n    css`\r\n      background: none;\r\n      color: ${({ theme }) => theme.text};\r\n      border: 1px solid ${({ theme }) => theme.text};\r\n      &:hover {\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.gray[7]};\r\n      }\r\n    `}\r\n    \r\n  ${(props) =>\r\n    props.themeColor &&\r\n    css`\r\n      background: ${({ theme }) => theme.themeColorBody};\r\n      color: ${palette.gray[1]};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.themeColorHoverBody};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? <StyledLink {...props} /> : <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","const palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n  red: [\r\n    '#fff5f5',\r\n    '#ffe3e3',\r\n    '#ffc9c9',\r\n    '#ffa8a8',\r\n    '#ff8787',\r\n    '#ff6b6b',\r\n    '#fa5252',\r\n    '#f03e3e',\r\n    '#e03131',\r\n    '#c92a2a',\r\n  ],\r\n  violet: [\r\n    '#f3f0ff',\r\n    '#e5dbff',\r\n    '#d0bfff',\r\n    '#b197fc',\r\n    '#9775fa',\r\n    '#845ef7',\r\n    '#7950f2',\r\n    '#7048e8',\r\n    '#6741d9',\r\n    '#5f3dc4',\r\n  ],\r\n  indigo: [\r\n    '#edf2ff',\r\n    '#dbe4ff',\r\n    '#bac8ff',\r\n    '#91a7ff',\r\n    '#748ffc',\r\n    '#5c7cfa',\r\n    '#4c6ef5',\r\n    '#4263eb',\r\n    '#3b5bdb',\r\n    '#364fc7',\r\n  ],\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '#0b7285',\r\n  ],\r\n  yellow: [\r\n    '#fff9db',\r\n    '#fff3bf',\r\n    '#ffec99',\r\n    '#ffe066',\r\n    '#ffd43b',\r\n    '#fcc419',\r\n    '#fab005',\r\n    '#f59f00',\r\n    '#f08c00',\r\n    '#e67700',\r\n  ]\r\n};\r\n\r\nexport default palette;","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const writePost = ({ title, body, tags }) =>\r\n  client.post('/api/post/write', { title, body, tags });\r\n\r\nexport const readPost = id => client.get(`/api/post/${id}`);\r\n\r\nexport const updatePost = ({ id, title, body, tags }) =>\r\n  client.patch(`/api/post/${id}`, { title, body, tags });\r\n\r\nexport const removePost = id => client.delete(`/api/post/${id}`);\r\n\r\nexport const getList = ({ page, tag, username, block }) => {\r\n  const queryString = qs.stringify({ page, tag, username, block });\r\n  return client.get(`/api/post/list?${queryString}`);\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => {\r\n  return (\r\n    <TagsBlock className=\"tags\">\r\n      {limit > 0 &&\r\n        tags.map(\r\n          (tag, index) =>\r\n            index < limit && (\r\n              <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n                #{tag}\r\n              </Link>\r\n            ),\r\n        )}\r\n      {limit > 0 && limit < tags.length && <span>...</span>}\r\n      {!limit &&\r\n        tags.map(tag => (\r\n          <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n            #{tag}\r\n          </Link>\r\n        ))}\r\n    </TagsBlock>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({ ...state, [action.payload]: true }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nconst SubInfoBlock = styled.div`\r\n  ${(props) =>\r\n    props.hasMarginTop &&\r\n    css`\r\n      margin-top: 1rem;\r\n    `}\r\n  color: ${({ theme }) => theme.postSubInfoText};\r\n  .username:hover {\r\n    color: ${({ theme }) => theme.postSubInfoHoverText};\r\n  }\r\n\r\n  /* span 사이 가운뎃점 문자 출력 */\r\n  span + span:before {\r\n    padding: 0 0.25rem;\r\n    content: '\\\\B7'; /* 가운뎃점 문자 */\r\n  }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\r\n  return (\r\n    <SubInfoBlock hasMarginTop={hasMarginTop} className=\"subinfo\">\r\n      <span className=\"username\">\r\n        <Link to={`/blog/@${username}`}>\r\n          <b>{username}</b>\r\n        </Link>\r\n      </span>\r\n      {publishedDate && (\r\n        <span className=\"publishedDate\">\r\n          {dayjs(publishedDate).format('YYYY-MM-DD HH:mm:ss')}\r\n        </span>\r\n      )}\r\n    </SubInfoBlock>\r\n  );\r\n};\r\n\r\nexport default SubInfo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport qs from 'qs';\r\nimport Button from './Button';\r\n\r\nconst PaginationBlock = styled.div`\r\n  width: 320px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n  span {\r\n    margin: 0 0.25rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  span:before {\r\n    content: '\\\\B7\\\\B7\\\\B7';\r\n  }\r\n`;\r\n\r\nconst PageButton = styled(Button)`\r\n  width: 1rem;\r\n  padding: 0.375rem;\r\n  text-align: center;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag, page }) => {\r\n  const query = qs.stringify({ tag, page });\r\n  return username ? `/blog/@${username}?${query}` : `/blog/?${query}`;\r\n};\r\n\r\n/* CONFIG */\r\nconst endpointBlockCount = 3;\r\nconst blockCount = 5;\r\n\r\n/* 페이지 번호를 저장한 배열을 구하는 함수 */\r\nconst getPageNumber = (page, lastPage) => {\r\n  // 페이지 번호 그룹을 3개로 분할\r\n  // 총 페이지 블록 개수 : endpointBlockCount + blockCount + 1(첫/마지막 페이지)\r\n  const result = {\r\n    front: [],\r\n    mid: [],\r\n    end: [],\r\n  };\r\n  // 전체 페이지의 중간지점을 기준으로 위치 설정\r\n  // 해당되는 위치에 endpointBlockCount 값만큼 페이지 번호 할당, 반대편은 1개 할당(첫/마지막 페이지)\r\n  const endpointSite = page <= lastPage / 2 ? 'first' : 'last';\r\n  // 1. 전체 페이지 개수(lastPage)가 총 페이지 블록 개수보다 작으면 mid 위치에 페이지 블록 모두 삽입\r\n  if (lastPage <= endpointBlockCount + blockCount + 1) {\r\n    // 페이지 블록 모두 삽입\r\n    for (let i = 1; i <= lastPage; i++) {\r\n      result.mid.push(i);\r\n    }\r\n    // 양 끝 그룹 비활성화\r\n    result.front = null;\r\n    result.end = null;\r\n    // 리턴\r\n    return result;\r\n  }\r\n  // blockCount의 절반 값을 정수로 저장\r\n  const halfBlockCount = parseInt(blockCount / 2);\r\n  // 2. 현 페이지가 왼쪽 구역일 경우\r\n  if (endpointSite === 'first') {\r\n    // front: 왼쪽 구역 블록 삽입\r\n    for (let i = 1; i <= endpointBlockCount; i++) {\r\n      result.front.push(i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page <= endpointBlockCount) {\r\n      page = endpointBlockCount + 1;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 왼쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page - halfBlockCount <= endpointBlockCount) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page - 1; i > endpointBlockCount; i--) {\r\n        result.mid.push(i);\r\n        count--;\r\n      }\r\n      // 겹친 개수만큼 오른쪽 블록에 추가\r\n      for (let i = page; i <= page + halfBlockCount + count; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n    // end: 마지막 페이지 번호만 삽입\r\n    result.end.push(lastPage);\r\n  } else if (endpointSite === 'last') {\r\n    // 오른쪽 구역일 경우\r\n    // front: 첫 페이지 번호만 삽입\r\n    result.front.push(1);\r\n    // end: 오른쪽 구역 블록 삽입\r\n    for (let i = 0; i < endpointBlockCount; i++) {\r\n      result.end.push(lastPage - i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page >= lastPage - endpointBlockCount + 1) {\r\n      page = lastPage - endpointBlockCount;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 오른쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page + halfBlockCount >= lastPage - endpointBlockCount + 1) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page + 1; i < lastPage - endpointBlockCount + 1; i++) {\r\n        result.mid.push(i);\r\n        count--;\r\n      }\r\n      // 겹친 개수만큼 왼쪽 블록에 추가\r\n      for (let i = page; i >= page - halfBlockCount - count; i--) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n  }\r\n  // 3. 페이지 블록을 정렬\r\n  result.front.sort((a, b) => a - b);\r\n  result.mid.sort((a, b) => a - b);\r\n  result.end.sort((a, b) => a - b);\r\n\r\n  // 4. 각 그룹이 연결되면 mid로 병합\r\n  if (result.front[result.front.length - 1] + 1 === result.mid[0]) {\r\n    result.mid = result.front.concat(result.mid);\r\n    result.front = null;\r\n  }\r\n  if (result.mid[result.mid.length - 1] + 1 === result.end[0]) {\r\n    result.mid = result.mid.concat(result.end);\r\n    result.end = null;\r\n  }\r\n  // 리턴\r\n  return result;\r\n};\r\n\r\nconst Pagination = ({ page, lastPage, username, tag }) => {\r\n  const pageNumber = getPageNumber(page, lastPage);\r\n  return (\r\n    <PaginationBlock>\r\n      {pageNumber.front &&\r\n        pageNumber.front.map(number => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ username, tag, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.front && <span />}\r\n      {pageNumber.mid &&\r\n        pageNumber.mid.map(number => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ username, tag, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.end && <span />}\r\n      {pageNumber.end &&\r\n        pageNumber.end.map(number => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            to={buildLink({ username, tag, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n    </PaginationBlock>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport qs from 'qs';\r\n\r\nconst PaginationContainer = ({ location, match }) => {\r\n  // 전역 변수 불러오기\r\n  const { postList, loading, lastPage } = useSelector(({ post, loading }) => ({\r\n    postList: post.postList,\r\n    loading: loading['post/GET_LIST'],\r\n    lastPage: post.lastPage,\r\n  }));\r\n\r\n  // 포스트 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\r\n  if (!postList || loading) return null;\r\n\r\n  // page가 없으면 1을 기본으로 사용\r\n  const { username } = match.params;\r\n  const { tag, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n\r\n  return (\r\n    <Pagination\r\n      tag={tag}\r\n      username={username}\r\n      page={parseInt(page, 10)}\r\n      lastPage={lastPage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n"],"sourceRoot":""}