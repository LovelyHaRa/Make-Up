{"version":3,"sources":["components/common/ErrorBlock.js","components/common/LoadingProgress.js","components/wiki/WikiHistory.js","containers/wiki/WikiHistoryContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","LoadingProgressBlock","props","customHeight","css","CustomCircularProgress","CircularProgress","categoryBorder","LoadingProgress","full","body","className","WikiHistoryBlock","Responsive","wikiHistoryLinkText","wikiHistoryLinkHoverText","HistoryErrorBlock","HistoryItem","document","title","publishedDate","revision","format","Date","to","name","WikiHistory","historyList","error","loading","docName","response","status","statusText","map","_id","withRouter","match","dispatch","useDispatch","useSelector","wiki","historyListError","params","useEffect","getHistoryList","id"],"mappings":"maAMA,IAAMA,E,MAAaC,EAAOC,IAAV,KAKL,qBAAGC,MAAkBC,QAKnB,qBAAGD,MAAkBE,aAInBL,O,oiBCZf,IAAMM,EAAuBL,IAAOC,IAAV,KAUtB,SAACK,GAAD,OACAA,EAAMC,cACNC,YADA,IAEYF,EAAMC,iBAIhBE,EAAyBT,YAAOU,IAAPV,CAAH,KAEf,qBAAGE,MAAkBS,kBAgBnBC,IAZS,SAACN,GAAW,IAC1BO,EAAeP,EAAfO,KAAMC,EAASR,EAATQ,KACd,OACE,cAACT,EAAD,2BACMC,GADN,IAEES,UAAS,UAAKF,GAAQ,cAAb,YAA8BC,GAAQ,eAFjD,SAIE,cAACL,EAAD,S,mvBC1BN,IAAMO,EAAmBhB,YAAOiB,IAAPjB,CAAH,KACN,qBAAGE,MAAkBY,QAC1B,qBAAGZ,MAAkBC,QAiBnB,qBAAGD,MAAkBgB,uBAEnB,qBAAGhB,MAAkBiB,4BAS9BC,EAAoBpB,YAAOD,IAAPC,CAAH,KAIjBqB,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACbC,EAAmCD,EAAnCC,MAAOC,EAA4BF,EAA5BE,cAAeC,EAAaH,EAAbG,SAC9B,OACE,sBAAKV,UAAU,OAAf,UACE,sBAAMA,UAAU,YAAhB,SACGW,YAAO,IAAIC,KAAKH,GAAgB,yBAEnC,cAAC,IAAD,CAAMI,GAAE,aAAQL,EAAMM,KAAd,cAAwBJ,GAAYV,UAAU,YAAtD,4BAGA,uBAAMA,UAAU,gBAAhB,eAAmCU,EAAnC,WAuCSK,EAlCK,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAClD,OAAIF,EAEA,cAAChB,EAAD,UACE,eAACI,EAAD,WACE,sBAAML,UAAU,cAAhB,iEACA,4CACU,sBAAMA,UAAU,YAAhB,SAA6BiB,EAAMG,SAASC,YAEtD,4CACW,IACT,sBAAMrB,UAAU,YAAhB,SAA6BiB,EAAMG,SAASE,sBAMjDN,GAAeE,EACX,cAACrB,EAAA,EAAD,CAAiBL,aAAc,KAItC,eAACS,EAAD,WACE,uBAAMD,UAAU,QAAhB,UACE,+BAAOmB,IACP,kEAEDH,EAAYO,KAAI,SAAChB,GAAD,OACf,cAAC,EAAD,CAAaA,SAAUA,GAAeA,EAASiB,Y,QC1DxCC,uBAzBc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAExBC,EAAWC,cAFyB,EAIFC,aAAY,gBAAGC,EAAH,EAAGA,KAAMZ,EAAT,EAASA,QAAT,MAAwB,CAC1EF,YAAac,EAAKd,YAClBC,MAAOa,EAAKC,iBACZb,QAASA,EAAQ,6BAHXF,EAJkC,EAIlCA,YAAaC,EAJqB,EAIrBA,MAAOC,EAJc,EAIdA,QAKpBC,EAAYO,EAAMM,OAAlBb,QAMR,OAJAc,qBAAU,WACRN,EAASO,YAAe,CAAEC,GAAIhB,OAC7B,CAACQ,EAAUR,IAGZ,cAAC,EAAD,CACEH,YAAaA,EACbC,MAAOA,EACPC,QAASA,EACTC,QAASA","file":"static/js/18.130d5879.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={`${full && 'full-height'} ${body && 'body-height'}`}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\nimport Responsive from '../common/Responsive';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 위키 문서 역사 리스트 컴포넌트\r\n */\r\n\r\nconst WikiHistoryBlock = styled(Responsive)`\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  flex-direction: column;\r\n  .title {\r\n    margin: 1rem 0;\r\n    font-size: 2rem;\r\n    font-weight: 300;\r\n    & > span {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n  .item {\r\n    margin: 0.25rem 0;\r\n  }\r\n  .item .item-link {\r\n    font-size: 0.8rem;\r\n    margin-left: 0.5rem;\r\n    color: ${({ theme }) => theme.wikiHistoryLinkText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.wikiHistoryLinkHoverText};\r\n    }\r\n  }\r\n  .item .item-revision {\r\n    font-weight: 700;\r\n    margin-left: 3rem;\r\n  }\r\n`;\r\n\r\nconst HistoryErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst HistoryItem = ({ document }) => {\r\n  const { title, publishedDate, revision } = document;\r\n  return (\r\n    <div className=\"item\">\r\n      <span className=\"item-date\">\r\n        {format(new Date(publishedDate), 'yyyy-MM-dd HH:mm:ss')}\r\n      </span>\r\n      <Link to={`/w/${title.name}?r=${revision}`} className=\"item-link\">\r\n        (보기)\r\n      </Link>\r\n      <span className=\"item-revision\">(r{revision})</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WikiHistory = ({ historyList, error, loading, docName }) => {\r\n  if (error) {\r\n    return (\r\n      <WikiHistoryBlock>\r\n        <HistoryErrorBlock>\r\n          <span className=\"error-title\">히스토리 요청 실패.</span>\r\n          <span>\r\n            Status: <span className=\"error-msg\">{error.response.status}</span>\r\n          </span>\r\n          <span>\r\n            Message:{' '}\r\n            <span className=\"error-msg\">{error.response.statusText}</span>\r\n          </span>\r\n        </HistoryErrorBlock>\r\n      </WikiHistoryBlock>\r\n    );\r\n  }\r\n  if (!historyList || loading) {\r\n    return <LoadingProgress customHeight={80} />;\r\n  }\r\n\r\n  return (\r\n    <WikiHistoryBlock>\r\n      <span className=\"title\">\r\n        <span>{docName}</span>\r\n        <span>(문서 역사)</span>\r\n      </span>\r\n      {historyList.map((document) => (\r\n        <HistoryItem document={document} key={document._id} />\r\n      ))}\r\n    </WikiHistoryBlock>\r\n  );\r\n};\r\n\r\nexport default WikiHistory;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport WikiHistory from '../../components/wiki/WikiHistory';\r\nimport { getHistoryList } from '../../module/redux/wiki';\r\n\r\nconst WikiHistoryContainer = ({ match }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 변수 불러오기\r\n  const { historyList, error, loading } = useSelector(({ wiki, loading }) => ({\r\n    historyList: wiki.historyList,\r\n    error: wiki.historyListError,\r\n    loading: loading['wiki/GET_HISTORY_LIST'],\r\n  }));\r\n  const { docName } = match.params;\r\n\r\n  useEffect(() => {\r\n    dispatch(getHistoryList({ id: docName }));\r\n  }, [dispatch, docName]);\r\n\r\n  return (\r\n    <WikiHistory\r\n      historyList={historyList}\r\n      error={error}\r\n      loading={loading}\r\n      docName={docName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiHistoryContainer);\r\n"],"sourceRoot":""}