{"version":3,"sources":["components/common/ErrorBlock.js","components/profile/Profile.js","components/profile/Security.js","containers/profile/SecurityContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","ProfileBlock","categoryBorder","profileInfoValueBody","profileInputValid","profileInputInValid","StyleInput","input","body","ProfileSubmitButton","Button","ProfileErrorBlock","Profile","user","form","onChange","onSubmit","validName","nameMessage","existNameError","equalName","submitMessage","errorMessage","className","response","status","statusText","username","provider","type","name","value","themeColor","fullWidth","disabled","SecurityBlock","PasswordInput","hoverText","ButtonWithMarginTop","Security","valid","validMessage","submitPassword","curPassword","newPassword","confirmPassword","validCur","validNew","validConfirm","validMessageCur","validMessageNew","validMessageConfirm","result","message","autoComplete","placeholder","SecurityContainer","dispatch","useDispatch","useSelector","password","changePasswordResult","changePasswordError","useState","setValid","setValidMessage","setSubmitPassword","useCallback","e","target","changeField","key","preventDefault","curValid","newValid","confirmValid","_id","changePassword","id","stateValidMessage","useRef","useEffect","isValidNewPassword","length","isValidConfirmPassword","current","initializeChangePassword"],"mappings":"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","file":"static/js/20.35bf98ba.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 프로필 컴포넌트\r\n * 기능: 이름 변경\r\n */\r\n\r\nexport const ProfileBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  .profile-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .profile-info-title {\r\n    font-weight: 300;\r\n    font-size: 1.5rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n  }\r\n  .profile-info-explain {\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n    margin-top: 0.25rem;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-info-value {\r\n    margin-top: 1.25rem;\r\n    span {\r\n      padding: 0.25rem 0.5rem;\r\n      font-size: 1.125rem;\r\n      font-family: 'Raleway', 'NanumGothic';\r\n      border-radius: 0.25rem;\r\n      background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n    }\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-form {\r\n    margin: 1.5rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .value-provider {\r\n    text-transform: uppercase;\r\n  }\r\n  .possible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  .impossible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.errorText};\r\n    margin-top: 0.5rem;\r\n  }\r\n  .success-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyleInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1.125rem;\r\n  font-family: 'Raleway', 'NanumGothic';\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n`;\r\n\r\nconst ProfileSubmitButton = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const ProfileErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst Profile = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  validName,\r\n  nameMessage,\r\n  existNameError,\r\n  equalName,\r\n  submitMessage,\r\n  errorMessage,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  if (existNameError) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">프로필 요청 실패.</span>\r\n        <span>\r\n          Status:{' '}\r\n          <span className=\"error-msg\">{existNameError.response.status}</span>\r\n        </span>\r\n        <span>\r\n          Message:{' '}\r\n          <span className=\"error-msg\">\r\n            {existNameError.response.statusText}\r\n          </span>\r\n        </span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { username, provider } = user;\r\n  return (\r\n    <ProfileBlock>\r\n      <div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">ID</span>\r\n          <div className=\"profile-info-value\">\r\n            <span>{username}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">로그인 유형</span>\r\n          <span className=\"profile-info-explain\">\r\n            어떤 방식으로 로그인했는지를 확인합니다.\r\n          </span>\r\n          <div className=\"profile-info-value\">\r\n            <span className=\"value-provider\">{provider}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <form className=\"profile-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">DISPLAY NAME</span>\r\n            <span className=\"profile-info-explain\">\r\n              다른 사용자들에게 보여지는 이름입니다.\r\n            </span>\r\n            <StyleInput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={\r\n                !equalName && (validName === true ? 'possible' : 'impossible')\r\n              }\r\n              value={form.name ? form.name : ''}\r\n              onChange={onChange}\r\n            />\r\n            {validName === false && (\r\n              <span className=\"invalid-message\">{nameMessage}</span>\r\n            )}\r\n            {submitMessage !== '' && (\r\n              <span className=\"success-message\">{submitMessage}</span>\r\n            )}\r\n            {errorMessage !== '' && (\r\n              <span className=\"invalid-message\">{errorMessage}</span>\r\n            )}\r\n          </div>\r\n          <ProfileSubmitButton\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validName || equalName}\r\n          >\r\n            수정\r\n          </ProfileSubmitButton>\r\n        </form>\r\n      </div>\r\n    </ProfileBlock>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ProfileBlock, ProfileErrorBlock } from './Profile';\r\nimport Button from '../common/Button';\r\n\r\n/**\r\n * 보안 컴포넌트\r\n * 기능: 비밀번호 변경\r\n */\r\n\r\nconst SecurityBlock = styled(ProfileBlock)`\r\n  .password-input-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .change-password-result {\r\n    margin: 1rem 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n  width: 20rem;\r\n  &::placeholder {\r\n    font-family: 'NanumGothic';\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst Security = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  valid,\r\n  validMessage,\r\n  onSubmit,\r\n  submitPassword,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { curPassword, newPassword, confirmPassword } = form;\r\n  const {\r\n    curPassword: validCur,\r\n    newPassword: validNew,\r\n    confirmPassword: validConfirm,\r\n  } = valid;\r\n  const {\r\n    curPassword: validMessageCur,\r\n    newPassword: validMessageNew,\r\n    confirmPassword: validMessageConfirm,\r\n  } = validMessage;\r\n  const { result, message } = submitPassword;\r\n  const { username } = user ? user : '';\r\n  return (\r\n    <SecurityBlock>\r\n      <div>\r\n        <form className=\"change-password-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">비밀번호 변경</span>\r\n            <span className=\"profile-info-explain\">\r\n              비밀번호를 변경할 수 있습니다.\r\n            </span>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"curPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"기존 비밀번호 입력\"\r\n                className={validCur === true ? 'possible' : 'impossible'}\r\n                value={curPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageCur !== '' && (\r\n                <span className=\"invalid-message\">{validMessageCur}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 입력\"\r\n                className={validNew === true ? 'possible' : 'impossible'}\r\n                value={newPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageNew !== '' && (\r\n                <span className=\"invalid-message\">{validMessageNew}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 한번 더 입력\"\r\n                className={validConfirm === true ? 'possible' : 'impossible'}\r\n                value={confirmPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validMessageConfirm !== '' && (\r\n                <span className=\"invalid-message\">{validMessageConfirm}</span>\r\n              )}\r\n            </div>\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"username\"\r\n              value={username ? username : ''}\r\n            />\r\n          </div>\r\n          <div className=\"change-password-result\">\r\n            {message !== '' && result && (\r\n              <span className=\"success-message\">{message}</span>\r\n            )}\r\n            {message !== '' && !result && (\r\n              <span className=\"invalid-message\">{message}</span>\r\n            )}\r\n          </div>\r\n          <ButtonWithMarginTop\r\n            themeColor\r\n            fullWidth\r\n            disabled={!validCur || !validNew || !validConfirm}\r\n          >\r\n            비밀번호 변경\r\n          </ButtonWithMarginTop>\r\n        </form>\r\n      </div>\r\n    </SecurityBlock>\r\n  );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Security from '../../components/profile/Security';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  changePassword,\r\n  initializeChangePassword,\r\n} from '../../module/redux/user';\r\n\r\nconst SecurityContainer = () => {\r\n  // 액션 상태 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { user, form, changePasswordResult, changePasswordError } = useSelector(\r\n    ({ user }) => ({\r\n      user: user.user,\r\n      form: user.password,\r\n      changePasswordResult: user.changePasswordResult,\r\n      changePasswordError: user.changePasswordError,\r\n    }),\r\n  );\r\n\r\n  // 검증 정보\r\n  const [valid, setValid] = useState({\r\n    curPassword: false,\r\n    newPassword: false,\r\n    confirmPassword: false,\r\n  });\r\n  // 검증 메시지\r\n  const [validMessage, setValidMessage] = useState({\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  });\r\n  // 비밀번호 변경 처리결과\r\n  const [submitPassword, setSubmitPassword] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n  const MIN_LENGTH = 8;\r\n\r\n  // 폼 데이터 변경시 메시지 초기화\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      if (name === 'curPassword') {\r\n        setValidMessage({\r\n          ...validMessage,\r\n          curPassword: '',\r\n        });\r\n      }\r\n      if (submitPassword.message && submitPassword.message !== '') {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '',\r\n        });\r\n      }\r\n      dispatch(changeField({ form: 'password', key: name, value }));\r\n    },\r\n    [dispatch, submitPassword, validMessage],\r\n  );\r\n\r\n  // submit 이벤트\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        curPassword: curValid,\r\n        newPassword: newValid,\r\n        confirmPassword: confirmValid,\r\n      } = valid;\r\n      const { _id } = user;\r\n      const { curPassword, newPassword } = form;\r\n      // 검증 통과시 액션 수행\r\n      if (curValid && newValid && confirmValid) {\r\n        dispatch(\r\n          changePassword({ id: _id, password: curPassword, newPassword }),\r\n        );\r\n      }\r\n    },\r\n    [dispatch, form, user, valid],\r\n  );\r\n\r\n  const stateValidMessage = useRef(validMessage);\r\n\r\n  // 비동기 검증 수행\r\n  useEffect(() => {\r\n    const isValidNewPassword =\r\n      form.newPassword && form.newPassword.length >= MIN_LENGTH;\r\n    const isValidConfirmPassword =\r\n      form.confirmPassword === form.newPassword &&\r\n      form.confirmPassword.length >= MIN_LENGTH;\r\n    setValid({\r\n      curPassword: form.curPassword !== '',\r\n      newPassword:\r\n        form.newPassword !== '' &&\r\n        isValidNewPassword &&\r\n        form.newPassword !== form.curPassword,\r\n      confirmPassword: form.confirmPassword !== '' && isValidConfirmPassword,\r\n    });\r\n    // 검증 실패 시 처리\r\n    if (!isValidNewPassword && form.newPassword !== '') {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '비밀번호는 8자 이상 입력해야 합니다!',\r\n      });\r\n    } else if (!isValidConfirmPassword && form.confirmPassword !== '') {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        confirmPassword: '비밀번호가 일치하지 않습니다!',\r\n      });\r\n    } else if (\r\n      form.newPassword !== '' &&\r\n      form.newPassword === form.curPassword &&\r\n      isValidNewPassword\r\n    ) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '기존 비밀번호와 일치합니다.',\r\n      });\r\n    } else if (form.newPassword === '' || isValidNewPassword) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        newPassword: '',\r\n      });\r\n    } else if (form.confirmPassword === '' || isValidConfirmPassword) {\r\n      setValidMessage({\r\n        ...stateValidMessage.current,\r\n        confirmPassword: '',\r\n      });\r\n    }\r\n  }, [form, stateValidMessage]);\r\n\r\n  // 비밀번호 변경 처리 결과에 따른 메시지 저장\r\n  useEffect(() => {\r\n    if (changePasswordResult) {\r\n      setSubmitPassword({\r\n        result: true,\r\n        message: '비밀번호가 성공적으로 변경되었습니다.',\r\n      });\r\n      dispatch(initializeChangePassword());\r\n    } else if (changePasswordError) {\r\n      if (\r\n        changePasswordError.response &&\r\n        changePasswordError.response.status === 412\r\n      ) {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '',\r\n        });\r\n        setValidMessage({\r\n          curPassword: '기존 비밀번호가 일치하지 않습니다',\r\n          newPassword: '',\r\n          confirmPassword: '',\r\n        });\r\n        setValid({\r\n          curPassword: false,\r\n          newPassword: true,\r\n          confirmPassword: true,\r\n        });\r\n      } else {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '비밀번호 변경에 실패했습니다.',\r\n        });\r\n      }\r\n    }\r\n  }, [dispatch, changePasswordResult, changePasswordError]);\r\n\r\n  // 언마운트시 작업\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeChangePassword());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Security\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      valid={valid}\r\n      validMessage={validMessage}\r\n      onSubmit={onSubmit}\r\n      submitPassword={submitPassword}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SecurityContainer;\r\n"],"sourceRoot":""}