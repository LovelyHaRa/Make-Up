{"version":3,"sources":["components/common/ErrorBlock.js","components/profile/Profile.js","components/profile/Security.js","containers/profile/SecurityContainer.js"],"names":["ErrorBlock","styled","div","theme","text","errorText","ProfileBlock","categoryBorder","profileInfoValueBody","profileInputValid","profileInputInValid","StyleInput","input","body","ProfileSubmitButton","Button","ProfileErrorBlock","Profile","user","form","onChange","onSubmit","isValid","validMessage","resultMessage","className","username","provider","isExistValid","existName","isEqualValid","equalName","validNameMessage","submitMessage","submit","errorMessage","error","type","name","value","themeColor","fullWidth","disabled","SecurityBlock","PasswordInput","hoverText","ButtonWithMarginTop","Security","submitPassword","curPassword","newPassword","confirmPassword","isCurValid","isNewValid","isConfirmValid","validCurMessage","validNewMessage","validConfirmMessage","result","message","autoComplete","placeholder","SecurityContainer","dispatch","useDispatch","useSelector","password","changePasswordResult","changePasswordError","useState","setIsValid","setValidMessage","setSubmitPassword","useCallback","e","target","changeField","key","preventDefault","_id","changePassword","id","useEffect","isValidNewPassword","length","isValidConfirmPassword","prevState","initializeChangePassword","response","status"],"mappings":"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","file":"static/js/20.21219c85.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/**\r\n * 에러를 보여주기 위한 컴포넌트\r\n */\r\n\r\nconst ErrorBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 3rem;\r\n  font-family: 'NanumBarunGothic';\r\n  color: ${({ theme }) => theme.text};\r\n  span + span {\r\n    margin-top: 1rem;\r\n  }\r\n  .error-msg {\r\n    color: ${({ theme }) => theme.errorText};\r\n  }\r\n`;\r\n\r\nexport default ErrorBlock;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\nimport ErrorBlock from '../common/ErrorBlock';\r\n\r\n/**\r\n * 프로필 컴포넌트\r\n * 기능: 이름 변경\r\n */\r\n\r\nexport const ProfileBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: ${({ theme }) => theme.text};\r\n\r\n  .profile-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .profile-info-title {\r\n    font-weight: 300;\r\n    font-size: 1.5rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n  }\r\n  .profile-info-explain {\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n    margin-top: 0.25rem;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-info-value {\r\n    margin-top: 1.25rem;\r\n    span {\r\n      padding: 0.25rem 0.5rem;\r\n      font-size: 1.125rem;\r\n      font-family: 'Raleway', 'NanumGothic';\r\n      border-radius: 0.25rem;\r\n      background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n    }\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.categoryBorder};\r\n  }\r\n  .profile-form {\r\n    margin: 1.5rem 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .value-provider {\r\n    text-transform: uppercase;\r\n  }\r\n  .possible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  .impossible {\r\n    border: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.errorText};\r\n    margin-top: 0.5rem;\r\n  }\r\n  .success-message {\r\n    font-weight: 300;\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst StyleInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1.125rem;\r\n  font-family: 'Raleway', 'NanumGothic';\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n`;\r\n\r\nconst ProfileSubmitButton = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nexport const ProfileErrorBlock = styled(ErrorBlock)`\r\n  margin: 2rem;\r\n`;\r\n\r\nconst Profile = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  isValid,\r\n  validMessage,\r\n  resultMessage,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { username, provider } = user;\r\n  const { existName: isExistValid, equalName: isEqualValid } = isValid;\r\n  const { existName: validNameMessage } = validMessage;\r\n  const { submit: submitMessage, error: errorMessage } = resultMessage;\r\n  return (\r\n    <ProfileBlock>\r\n      <div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">ID</span>\r\n          <div className=\"profile-info-value\">\r\n            <span>{username}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info\">\r\n          <span className=\"profile-info-title\">로그인 유형</span>\r\n          <span className=\"profile-info-explain\">\r\n            어떤 방식으로 로그인했는지를 확인합니다.\r\n          </span>\r\n          <div className=\"profile-info-value\">\r\n            <span className=\"value-provider\">{provider}</span>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <form className=\"profile-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">DISPLAY NAME</span>\r\n            <span className=\"profile-info-explain\">\r\n              다른 사용자들에게 보여지는 이름입니다.\r\n            </span>\r\n            <StyleInput\r\n              type=\"text\"\r\n              name=\"name\"\r\n              className={\r\n                !isEqualValid &&\r\n                (isExistValid === true ? 'possible' : 'impossible')\r\n              }\r\n              value={form.name ? form.name : ''}\r\n              onChange={onChange}\r\n            />\r\n            {isExistValid === false && (\r\n              <span className=\"invalid-message\">{validNameMessage}</span>\r\n            )}\r\n            {submitMessage !== '' && (\r\n              <span className=\"success-message\">{submitMessage}</span>\r\n            )}\r\n            {errorMessage !== '' && (\r\n              <span className=\"invalid-message\">{errorMessage}</span>\r\n            )}\r\n          </div>\r\n          <ProfileSubmitButton\r\n            themeColor\r\n            fullWidth\r\n            disabled={!isExistValid || isEqualValid}\r\n          >\r\n            수정\r\n          </ProfileSubmitButton>\r\n        </form>\r\n      </div>\r\n    </ProfileBlock>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ProfileBlock, ProfileErrorBlock } from './Profile';\r\nimport Button from '../common/Button';\r\n\r\n/**\r\n * 보안 컴포넌트\r\n * 기능: 비밀번호 변경\r\n */\r\n\r\nconst SecurityBlock = styled(ProfileBlock)`\r\n  .password-input-section {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .change-password-result {\r\n    margin: 1rem 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst PasswordInput = styled.input`\r\n  margin-top: 1.25rem;\r\n  padding: 0.5rem 0.75rem;\r\n  font-size: 1rem;\r\n  border-radius: 0.25rem;\r\n  background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  border: 2px solid ${({ theme }) => theme.body};\r\n  width: 20rem;\r\n  &::placeholder {\r\n    font-family: 'NanumGothic';\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 0.5rem;\r\n`;\r\n\r\nconst Security = ({\r\n  user,\r\n  form,\r\n  onChange,\r\n  isValid,\r\n  validMessage,\r\n  onSubmit,\r\n  submitPassword,\r\n}) => {\r\n  if (!user) {\r\n    return (\r\n      <ProfileErrorBlock>\r\n        <span className=\"error-title\">로그인 정보가 없어요...ㅠ</span>\r\n      </ProfileErrorBlock>\r\n    );\r\n  }\r\n  const { curPassword, newPassword, confirmPassword } = form;\r\n  const {\r\n    curPassword: isCurValid,\r\n    newPassword: isNewValid,\r\n    confirmPassword: isConfirmValid,\r\n  } = isValid;\r\n  const {\r\n    curPassword: validCurMessage,\r\n    newPassword: validNewMessage,\r\n    confirmPassword: validConfirmMessage,\r\n  } = validMessage;\r\n  const { result, message } = submitPassword;\r\n  const { username } = user ? user : '';\r\n  return (\r\n    <SecurityBlock>\r\n      <div>\r\n        <form className=\"change-password-form\" onSubmit={onSubmit}>\r\n          <div className=\"profile-info\">\r\n            <span className=\"profile-info-title\">비밀번호 변경</span>\r\n            <span className=\"profile-info-explain\">\r\n              비밀번호를 변경할 수 있습니다.\r\n            </span>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"curPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"기존 비밀번호 입력\"\r\n                className={isCurValid === true ? 'possible' : 'impossible'}\r\n                value={curPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validCurMessage && (\r\n                <span className=\"invalid-message\">{validCurMessage}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 입력\"\r\n                className={isNewValid === true ? 'possible' : 'impossible'}\r\n                value={newPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validNewMessage && (\r\n                <span className=\"invalid-message\">{validNewMessage}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"password-input-section\">\r\n              <PasswordInput\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"변경할 비밀번호 한번 더 입력\"\r\n                className={isConfirmValid === true ? 'possible' : 'impossible'}\r\n                value={confirmPassword}\r\n                onChange={onChange}\r\n              />\r\n              {validConfirmMessage && (\r\n                <span className=\"invalid-message\">{validConfirmMessage}</span>\r\n              )}\r\n            </div>\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"username\"\r\n              value={username ? username : ''}\r\n            />\r\n          </div>\r\n          <div className=\"change-password-result\">\r\n            {result && message && (\r\n              <span className=\"success-message\">{message}</span>\r\n            )}\r\n            {!result && message && (\r\n              <span className=\"invalid-message\">{message}</span>\r\n            )}\r\n          </div>\r\n          <ButtonWithMarginTop\r\n            themeColor\r\n            fullWidth\r\n            disabled={!isCurValid || !isNewValid || !isConfirmValid}\r\n          >\r\n            비밀번호 변경\r\n          </ButtonWithMarginTop>\r\n        </form>\r\n      </div>\r\n    </SecurityBlock>\r\n  );\r\n};\r\n\r\nexport default Security;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport Security from '../../components/profile/Security';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  changePassword,\r\n  initializeChangePassword,\r\n} from '../../module/redux/user';\r\n\r\nconst SecurityContainer = () => {\r\n  // 액션 상태 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { user, form, changePasswordResult, changePasswordError } = useSelector(\r\n    ({ user }) => ({\r\n      user: user.user,\r\n      form: user.password,\r\n      changePasswordResult: user.changePasswordResult,\r\n      changePasswordError: user.changePasswordError,\r\n    }),\r\n  );\r\n\r\n  // 검증 정보\r\n  const [isValid, setIsValid] = useState({\r\n    curPassword: false,\r\n    newPassword: false,\r\n    confirmPassword: false,\r\n  });\r\n  // 검증 메시지\r\n  const [validMessage, setValidMessage] = useState({\r\n    curPassword: null,\r\n    newPassword: null,\r\n    confirmPassword: null,\r\n  });\r\n  // 비밀번호 변경 처리결과\r\n  const [submitPassword, setSubmitPassword] = useState({\r\n    result: false,\r\n    message: null,\r\n  });\r\n  const MIN_LENGTH = 8;\r\n\r\n  // 폼 데이터 변경시 메시지 초기화\r\n  const onChange = useCallback(\r\n    (e) => {\r\n      const { value, name } = e.target;\r\n      if (name === 'curPassword') {\r\n        setValidMessage({\r\n          ...validMessage,\r\n          curPassword: null,\r\n        });\r\n      }\r\n      if (submitPassword.message) {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: null,\r\n        });\r\n      }\r\n      dispatch(changeField({ form: 'password', key: name, value }));\r\n    },\r\n    [dispatch, submitPassword, validMessage],\r\n  );\r\n\r\n  // submit 이벤트\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      const {\r\n        curPassword: isCurValid,\r\n        newPassword: isNewValid,\r\n        confirmPassword: isConfirmValid,\r\n      } = isValid;\r\n      const { _id } = user;\r\n      const { curPassword, newPassword } = form;\r\n      // 검증 통과시 액션 수행\r\n      if (isCurValid && isNewValid && isConfirmValid) {\r\n        dispatch(\r\n          changePassword({ id: _id, password: curPassword, newPassword }),\r\n        );\r\n      }\r\n    },\r\n    [dispatch, form, user, isValid],\r\n  );\r\n\r\n  // 비동기 검증 수행\r\n  useEffect(() => {\r\n    const isValidNewPassword =\r\n      form.newPassword && form.newPassword.length >= MIN_LENGTH;\r\n    const isValidConfirmPassword =\r\n      form.confirmPassword === form.newPassword &&\r\n      form.confirmPassword.length >= MIN_LENGTH;\r\n    setIsValid({\r\n      curPassword: form.curPassword !== '',\r\n      newPassword:\r\n        form.newPassword !== '' &&\r\n        isValidNewPassword &&\r\n        form.newPassword !== form.curPassword,\r\n      confirmPassword: form.confirmPassword !== '' && isValidConfirmPassword,\r\n    });\r\n    // 검증 실패 시 처리\r\n    if (!isValidNewPassword && form.newPassword !== '') {\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        newPassword: '비밀번호는 8자 이상 입력해야 합니다!',\r\n      }));\r\n    } else if (\r\n      form.newPassword !== '' &&\r\n      form.newPassword === form.curPassword &&\r\n      isValidNewPassword\r\n    ) {\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        newPassword: '기존 비밀번호와 일치합니다.',\r\n      }));\r\n    } else if (form.newPassword === '' || isValidNewPassword) {\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        newPassword: '',\r\n      }));\r\n    }\r\n    if (!isValidConfirmPassword && form.confirmPassword !== '') {\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        confirmPassword: '비밀번호가 일치하지 않습니다!',\r\n      }));\r\n    } else if (form.confirmPassword === '' || isValidConfirmPassword) {\r\n      setValidMessage((prevState) => ({\r\n        ...prevState,\r\n        confirmPassword: '',\r\n      }));\r\n    }\r\n  }, [form]);\r\n\r\n  // 비밀번호 변경 처리 결과에 따른 메시지 저장\r\n  useEffect(() => {\r\n    if (changePasswordResult) {\r\n      setSubmitPassword({\r\n        result: true,\r\n        message: '비밀번호가 성공적으로 변경되었습니다.',\r\n      });\r\n      dispatch(initializeChangePassword());\r\n    } else if (changePasswordError) {\r\n      if (\r\n        changePasswordError.response &&\r\n        changePasswordError.response.status === 412\r\n      ) {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: null,\r\n        });\r\n        setValidMessage((prevState) => ({\r\n          ...prevState,\r\n          curPassword: '기존 비밀번호가 일치하지 않습니다',\r\n        }));\r\n        setIsValid((prevState) => ({\r\n          ...prevState,\r\n          curPassword: false,\r\n        }));\r\n      } else {\r\n        setSubmitPassword({\r\n          result: false,\r\n          message: '비밀번호 변경에 실패했습니다.',\r\n        });\r\n      }\r\n    }\r\n  }, [dispatch, changePasswordResult, changePasswordError]);\r\n\r\n  // 언마운트시 작업\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(initializeChangePassword());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Security\r\n      user={user}\r\n      form={form}\r\n      onChange={onChange}\r\n      isValid={isValid}\r\n      validMessage={validMessage}\r\n      onSubmit={onSubmit}\r\n      submitPassword={submitPassword}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SecurityContainer;\r\n"],"sourceRoot":""}