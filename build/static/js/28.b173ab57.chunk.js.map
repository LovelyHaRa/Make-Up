{"version":3,"sources":["components/wiki/edit/Editor.js","containers/wiki/edit/EditorContainer.js"],"names":["Quill","debug","register","ImageResize","EditorBlock","styled","Responsive","theme","body","text","TitleBlock","div","QuillWrapper","editorText","Editor","localTitle","onChangeField","title","JSON","parse","sessionStorage","getItem","error","Error","quillElement","useRef","quillInstance","useEffect","current","placeholder","modules","imageResize","toolbar","header","align","indent","list","color","background","quill","on","delta","oldDelta","source","key","value","root","innerHTML","mounted","className","name","ref","withRouter","history","dispatch","useDispatch","useSelector","wiki","useCallback","payload","changeField","setItem","stringify","initialize","push"],"mappings":"65BAOAA,IAAMC,MAAM,SACZD,IAAME,SAAS,sBAAuBC,KAEtC,IAAMC,EAAcC,YAAOC,IAAPD,CAAH,KAED,qBAAGE,MAAkBC,QAC1B,qBAAGD,MAAkBE,QAG1BC,EAAaL,IAAOM,IAAV,KAWVC,EAAeP,IAAOM,IAAV,KAOL,qBAAGJ,MAAkBM,cAGrB,qBAAGN,MAAkBM,cAyEnBC,EA/DA,SAAC,GAAoC,IAC9CC,EADYC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,KAEtC,IACEO,EAAaE,GAASC,KAAKC,MAAMC,eAAeC,QAAQ,eACxD,MAAOC,GACP,MAAM,IAAIC,MAAM,gCAElB,IAAMC,EAAeC,iBAAO,MACtBC,EAAgBD,iBAAO,MAE7BE,qBAAU,WACRD,EAAcE,QAAU,IAAI5B,IAAMwB,EAAaI,QAAS,CACtDrB,MAAO,SACPsB,YAAa,+BACbC,QAAS,CACPC,YAAa,CACXD,QAAS,CAAC,SAAU,gBAGtBE,QAAS,CACP,CAAC,CAAEC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,CAAEC,MAAO,KACV,CAAC,CAAEC,OAAQ,MAAQ,CAAEA,OAAQ,OAC7B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAEC,MAAO,IAAM,CAAEC,WAAY,KAC9B,CAAC,SACD,CAAC,aAAc,aAAc,OAAQ,SACrC,CAAC,aAMP,IAAMC,EAAQb,EAAcE,QAC5BW,EAAMC,GAAG,eAAe,SAACC,EAAOC,EAAUC,GACzB,SAAXA,GACF3B,EAAc,CAAE4B,IAAK,OAAQC,MAAON,EAAMO,KAAKC,iBAGlD,CAAC/B,IAGJ,IAAMgC,EAAUvB,kBAAO,GAOvB,OANAE,qBAAU,WACJqB,EAAQpB,UACZoB,EAAQpB,SAAU,EAClBF,EAAcE,QAAQkB,KAAKC,UAAYvC,KACtC,CAACA,IAGF,eAACJ,EAAD,WACE,eAACM,EAAD,WACE,2DACA,sBAAMuC,UAAU,QAAhB,SAAyBlC,EAAWmC,UAEtC,cAACtC,EAAD,UACE,qBAAKuC,IAAK3B,U,QC3DH4B,uBAvCS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEnBC,EAAWC,cAFsB,EAIfC,aAAY,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACjDxC,MAAOwC,EAAKxC,MACZT,KAAMiD,EAAKjD,SAFLS,EAJ+B,EAI/BA,MAAOT,EAJwB,EAIxBA,KAKTQ,EAAgB0C,uBACpB,SAACC,GAAD,OAAaL,EAASM,YAAYD,MAClC,CAACL,IAGH,IACMrC,GACFG,eAAeyC,QAAQ,aAAc3C,KAAK4C,UAAU7C,IAEtD,MAAOK,GACP,MAAM,IAAIC,MAAM,gCAYlB,OARAI,qBACE,kBAAM,WACJ2B,EAASS,kBAEX,CAACT,IAIErC,GAAUG,eAAeC,QAAQ,cAK/B,cAAC,EAAD,CAAQL,cAAeA,EAAeC,MAAOA,EAAOT,KAAMA,KAJ/D6C,EAAQW,KAAK,SACN","file":"static/js/28.b173ab57.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Quill from 'quill';\r\nimport ImageResize from 'quill-image-resize-module-react';\r\nimport Responsive from '../../common/Responsive';\r\nimport 'quill/dist/quill.bubble.css';\r\n\r\nQuill.debug('error');\r\nQuill.register('modules/imageResize', ImageResize);\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding: 1rem 0;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst TitleBlock = styled.div`\r\n  margin-top: 2rem;\r\n  h5 {\r\n    font-weight: 500;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  .title {\r\n    font-size: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  padding: 3rem 0;\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 400px;\r\n    font-size: 1rem;\r\n    line-height: 1.5;\r\n    color: ${({ theme }) => theme.editorText};\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    color: ${({ theme }) => theme.editorText};\r\n    left: 0;\r\n  }\r\n  .ql-video {\r\n    margin: 0 1%;\r\n    width: 98%;\r\n    height: 450px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ onChangeField, title, body }) => {\r\n  let localTitle;\r\n  try {\r\n    localTitle = title || JSON.parse(sessionStorage.getItem('wiki-title'));\r\n  } catch (error) {\r\n    throw new Error('cannot access sessionStorage');\r\n  }\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '문서 작성...',\r\n      modules: {\r\n        imageResize: {\r\n          modules: ['Resize', 'DisplaySize'],\r\n        },\r\n        // 참고: https://quilljs.com/docs/modules/toolbar/\r\n        toolbar: [\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ align: [] }],\r\n          [{ indent: '-1' }, { indent: '+1' }],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          [{ color: [] }, { background: [] }],\r\n          ['video'],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n          ['clean'],\r\n        ],\r\n      },\r\n    });\r\n\r\n    // 참고: https://quilljs.com/docs/api/#events\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  /* useRef를 사용하여 에디터 내 편집할 데이터 삽입 */\r\n  const mounted = useRef(false);\r\n  useEffect(() => {\r\n    if (mounted.current) return;\r\n    mounted.current = true;\r\n    quillInstance.current.root.innerHTML = body;\r\n  }, [body]);\r\n\r\n  return (\r\n    <EditorBlock>\r\n      <TitleBlock>\r\n        <h5>문서 제목</h5>\r\n        <span className=\"title\">{localTitle.name}</span>\r\n      </TitleBlock>\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Editor from '../../../components/wiki/edit/Editor';\r\nimport { initialize, changeField } from '../../../module/redux/wiki';\r\n\r\nconst EditorContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const { title, body } = useSelector(({ wiki }) => ({\r\n    title: wiki.title,\r\n    body: wiki.body,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  try {\r\n    if (title) {\r\n      sessionStorage.setItem('wiki-title', JSON.stringify(title));\r\n    }\r\n  } catch (error) {\r\n    throw new Error('cannot access sessionStorage');\r\n  }\r\n\r\n  // 언마운트 될 때 초기화\r\n  useEffect(\r\n    () => () => {\r\n      dispatch(initialize());\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  // 세션스토리지를 이용하여 위키 타이틀 상태 저장\r\n  if (!title && !sessionStorage.getItem('wiki-title')) {\r\n    history.push('/wiki');\r\n    return null;\r\n  }\r\n\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />;\r\n};\r\n\r\nexport default withRouter(EditorContainer);\r\n"],"sourceRoot":""}