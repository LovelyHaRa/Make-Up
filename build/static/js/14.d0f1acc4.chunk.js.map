{"version":3,"sources":["components/common/LoadingProgress.js","components/post/common/Tags.js","components/common/Pagination.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","containers/post/PaginationContainer.js","components/profile/Activity.js","containers/profile/ActivityContainer.js"],"names":["LoadingProgressBlock","styled","div","props","customHeight","css","CustomCircularProgress","CircularProgress","theme","categoryBorder","LoadingProgress","full","body","className","TagsBlock","postTagText","postTagHoverText","buildLink","username","tag","query","qs","stringify","Tags","tags","limit","map","index","to","key","length","PaginationBlock","text","PageLink","Button","PageButton","path","page","getPageNumber","lastPage","result","front","mid","end","endpointSite","endpointBlockCount","i","push","halfBlockCount","parseInt","blockCount","count","sort","a","b","concat","AsyncPagination","handleClick","pageNumber","number","disabled","onClick","Pagination","easeOut","t","value","min","max","Math","React","ref","classes","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","transform","_extends","clsx","root","capitalize","indeterminate","static","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","name","flip","withRouter","location","match","useSelector","post","loading","postList","params","parse","search","ignoreQueryPrefix","ActivityBlock","profileInfoValueBody","PostBlock","postBorder","hoverList","PostItem","_id","title","publisher","Activity","user","postCount","documentCount","loadingPost","postListError","documentCountError","loadingWiki","PaginationContainer","ActivityContainer","dispatch","useDispatch","wiki","useEffect","getList","getDocumentCount","unloadList"],"mappings":"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","file":"static/js/14.d0f1acc4.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/**\r\n * 로딩 프로그래스 컴포넌트\r\n */\r\n\r\nconst LoadingProgressBlock = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &.full-height {\r\n    height: 100vh;\r\n  }\r\n  &.body-height {\r\n    height: 90vh;\r\n  }\r\n  ${(props) =>\r\n    props.customHeight &&\r\n    css`\r\n      height: ${props.customHeight}vh;\r\n    `}\r\n`;\r\n\r\nconst CustomCircularProgress = styled(CircularProgress)`\r\n  &.MuiCircularProgress-colorPrimary {\r\n    color: ${({ theme }) => theme.categoryBorder};\r\n  }\r\n`;\r\n\r\nconst LoadingProgress = (props) => {\r\n  const { full, body } = props;\r\n  return (\r\n    <LoadingProgressBlock\r\n      {...props}\r\n      className={full ? 'full-height' : body ? 'body-height' : ''}\r\n    >\r\n      <CustomCircularProgress />\r\n    </LoadingProgressBlock>\r\n  );\r\n};\r\n\r\nexport default LoadingProgress;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\n/**\r\n * 포스트의 태그를 출력하는 컴포넌트\r\n */\r\n\r\nconst TagsBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.postTagText};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.postTagHoverText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ username, tag }) => {\r\n  const query = qs.stringify({ tag });\r\n  return username ? `/blog/@${username}?${query}` : `/blog?${query}`;\r\n};\r\n\r\nconst Tags = ({ tags, username, limit = 0 }) => {\r\n  return (\r\n    <TagsBlock className=\"tags\">\r\n      {limit > 0 &&\r\n        tags.map(\r\n          (tag, index) =>\r\n            index < limit && (\r\n              <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n                #{tag}\r\n              </Link>\r\n            ),\r\n        )}\r\n      {limit > 0 && limit < tags.length && <span>...</span>}\r\n      {!limit &&\r\n        tags.map((tag) => (\r\n          <Link className=\"tag\" to={buildLink({ username, tag })} key={tag}>\r\n            #{tag}\r\n          </Link>\r\n        ))}\r\n    </TagsBlock>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst PaginationBlock = styled.div`\r\n  width: 320px;\r\n  margin: 2rem auto;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  span {\r\n    margin: 0 0.25rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  span::before {\r\n    content: '\\\\B7\\\\B7\\\\B7';\r\n  }\r\n`;\r\n\r\nconst PageLink = styled(Button)`\r\n  width: 1rem;\r\n  padding: 0.375rem;\r\n  text-align: center;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst PageButton = styled(Button)`\r\n  width: 1.5rem;\r\n  padding: 0.375rem;\r\n  text-align: center;\r\n  & + & {\r\n    margin-left: 0.25rem;\r\n  }\r\n`;\r\n\r\nconst buildLink = ({ path, query, page }) => {\r\n  return query.length > 0\r\n    ? `${path}?${query}&page=${page}`\r\n    : `${path}?page=${page}`;\r\n};\r\n\r\n/* CONFIG */\r\nconst endpointBlockCount = 3;\r\nconst blockCount = 5;\r\n\r\n/* 페이지 번호를 저장한 배열을 구하는 함수 */\r\nconst getPageNumber = (page, lastPage) => {\r\n  // 페이지 번호 그룹을 3개로 분할\r\n  // 총 페이지 블록 개수 : endpointBlockCount + blockCount + 1(첫/마지막 페이지)\r\n  const result = {\r\n    front: [],\r\n    mid: [],\r\n    end: [],\r\n  };\r\n  // 전체 페이지의 중간지점을 기준으로 위치 설정\r\n  // 해당되는 위치에 endpointBlockCount 값만큼 페이지 번호 할당, 반대편은 1개 할당(첫/마지막 페이지)\r\n  const endpointSite = page <= lastPage / 2 ? 'first' : 'last';\r\n  // 1. 전체 페이지 개수(lastPage)가 총 페이지 블록 개수보다 작으면 mid 위치에 페이지 블록 모두 삽입\r\n  if (lastPage <= endpointBlockCount + blockCount + 1) {\r\n    // 페이지 블록 모두 삽입\r\n    for (let i = 1; i <= lastPage; i++) {\r\n      result.mid.push(i);\r\n    }\r\n    // 양 끝 그룹 비활성화\r\n    result.front = null;\r\n    result.end = null;\r\n    // 리턴\r\n    return result;\r\n  }\r\n  // blockCount의 절반 값을 정수로 저장\r\n  const halfBlockCount = parseInt(blockCount / 2);\r\n  // 2. 현 페이지가 왼쪽 구역일 경우\r\n  if (endpointSite === 'first') {\r\n    // front: 왼쪽 구역 블록 삽입\r\n    for (let i = 1; i <= endpointBlockCount; i++) {\r\n      result.front.push(i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page <= endpointBlockCount) {\r\n      page = endpointBlockCount + 1;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 왼쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page - halfBlockCount <= endpointBlockCount) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page - 1; i > endpointBlockCount; i--) {\r\n        result.mid.push(i);\r\n        count--;\r\n      }\r\n      // 겹친 개수만큼 오른쪽 블록에 추가\r\n      for (let i = page; i <= page + halfBlockCount + count; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n    // end: 마지막 페이지 번호만 삽입\r\n    result.end.push(lastPage);\r\n  } else if (endpointSite === 'last') {\r\n    // 오른쪽 구역일 경우\r\n    // front: 첫 페이지 번호만 삽입\r\n    result.front.push(1);\r\n    // end: 오른쪽 구역 블록 삽입\r\n    for (let i = 0; i < endpointBlockCount; i++) {\r\n      result.end.push(lastPage - i);\r\n    }\r\n    /**\r\n     * 현 페이지가 endpointBlockCount 보다 작으면\r\n     * 이미 포함되었으므로 페이지 값을 endpointBlockCount + 1로 설정\r\n     */\r\n    if (page >= lastPage - endpointBlockCount + 1) {\r\n      page = lastPage - endpointBlockCount;\r\n    }\r\n    // mid:\r\n    // 2-1. 현 페이지를 기준으로 오른쪽 halfBlock이 endpointBlock와 겹치는 경우\r\n    if (page + halfBlockCount >= lastPage - endpointBlockCount + 1) {\r\n      // 겹치는 개수를 구한다\r\n      let count = halfBlockCount;\r\n      for (let i = page + 1; i < lastPage - endpointBlockCount + 1; i++) {\r\n        result.mid.push(i);\r\n        count--;\r\n      }\r\n      // 겹친 개수만큼 왼쪽 블록에 추가\r\n      for (let i = page; i >= page - halfBlockCount - count; i--) {\r\n        result.mid.push(i);\r\n      }\r\n    } else {\r\n      // 그렇지 않으면 현 페이지를 중심으로 하여 blockCount만큼 페이지 블록 삽입\r\n      for (let i = page - halfBlockCount; i <= page + halfBlockCount; i++) {\r\n        result.mid.push(i);\r\n      }\r\n    }\r\n  }\r\n  // 3. 페이지 블록을 정렬\r\n  result.front.sort((a, b) => a - b);\r\n  result.mid.sort((a, b) => a - b);\r\n  result.end.sort((a, b) => a - b);\r\n\r\n  // 4. 각 그룹이 연결되면 mid로 병합\r\n  if (result.front[result.front.length - 1] + 1 === result.mid[0]) {\r\n    result.mid = result.front.concat(result.mid);\r\n    result.front = null;\r\n  }\r\n  if (result.mid[result.mid.length - 1] + 1 === result.end[0]) {\r\n    result.mid = result.mid.concat(result.end);\r\n    result.end = null;\r\n  }\r\n  // 리턴\r\n  return result;\r\n};\r\n\r\nconst Pagination = ({ path, query, page, lastPage }) => {\r\n  const pageNumber = getPageNumber(page, lastPage);\r\n  return (\r\n    <PaginationBlock>\r\n      {pageNumber.front &&\r\n        pageNumber.front.map((number) => (\r\n          <PageLink\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageLink>\r\n        ))}\r\n      {pageNumber.front && <span />}\r\n      {pageNumber.mid &&\r\n        pageNumber.mid.map((number) => (\r\n          <PageLink\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageLink>\r\n        ))}\r\n      {pageNumber.end && <span />}\r\n      {pageNumber.end &&\r\n        pageNumber.end.map((number) => (\r\n          <PageLink\r\n            disabled={page === number}\r\n            to={buildLink({ path, query, page: number })}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageLink>\r\n        ))}\r\n    </PaginationBlock>\r\n  );\r\n};\r\n\r\nexport const AsyncPagination = ({ handleClick, page, lastPage }) => {\r\n  const pageNumber = getPageNumber(page, lastPage);\r\n  return (\r\n    <PaginationBlock>\r\n      {pageNumber.front &&\r\n        pageNumber.front.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            onClick={() => handleClick(number)}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.front && <span />}\r\n      {pageNumber.mid &&\r\n        pageNumber.mid.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            onClick={() => handleClick(number)}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n      {pageNumber.end && <span />}\r\n      {pageNumber.end &&\r\n        pageNumber.end.map((number) => (\r\n          <PageButton\r\n            disabled={page === number}\r\n            onClick={() => handleClick(number)}\r\n            key={number}\r\n          >\r\n            {number}\r\n          </PageButton>\r\n        ))}\r\n    </PaginationBlock>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import React from 'react';\r\nimport Pagination from '../../components/common/Pagination';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport qs from 'qs';\r\n\r\nconst PaginationContainer = ({ location, match }) => {\r\n  // 전역 변수 불러오기\r\n  const { postList, loading, lastPage } = useSelector(({ post, loading }) => ({\r\n    postList: post.postList,\r\n    loading: loading['post/GET_LIST'],\r\n    lastPage: post.lastPage,\r\n  }));\r\n\r\n  // 포스트 데이터가 없거나 로딩 중이면 아무것도 보여주지 않음\r\n  if (!postList || loading) return null;\r\n\r\n  // page가 없으면 1을 기본으로 사용\r\n  const { username } = match.params;\r\n  const { tag, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  const query = qs.stringify({ tag });\r\n\r\n  return (\r\n    <Pagination\r\n      path={username ? `/blog/@${username}` : `/blog`}\r\n      query={query}\r\n      page={parseInt(page, 10)}\r\n      lastPage={lastPage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PaginationContainer);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport Tags from '../post/common/Tags';\r\nimport PaginationContainer from '../../containers/post/PaginationContainer';\r\nimport LoadingProgress from '../common/LoadingProgress';\r\n\r\n/**\r\n * 활동정보 컴포넌트\r\n * 위키문서/블로그 포스팅 카운트 확인\r\n * 작성한 블로그 포스트 리스트 출력\r\n */\r\n\r\nconst ActivityBlock = styled.div`\r\n  margin-top: 2rem;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 700px;\r\n  @media screen and (max-width: 1024px) {\r\n    width: 580px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 70vw;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 60vw;\r\n  }\r\n\r\n  color: ${({ theme }) => theme.text};\r\n  .activity-count-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media screen and (min-width: 769px) {\r\n      flex-direction: row;\r\n      .profile-info-group {\r\n        &:first-of-type {\r\n          margin-left: 0;\r\n        }\r\n        margin-left: 3rem;\r\n      }\r\n    }\r\n  }\r\n  .profile-info-group {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 2rem;\r\n  }\r\n  .profile-info-title {\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    font-size: 1.5rem;\r\n  }\r\n  .profile-info-content {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .profile-info-content-col {\r\n    margin-top: 0.5rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  .content-title {\r\n    margin-right: 1rem;\r\n    font-size: 1rem;\r\n    font-family: 'NanumGothic';\r\n  }\r\n  .content-value {\r\n    padding: 0.25rem 0.5rem;\r\n    font-size: 1rem;\r\n    font-family: 'Raleway', 'NanumGothic';\r\n    border-radius: 0.25rem;\r\n    background-color: ${({ theme }) => theme.profileInfoValueBody};\r\n  }\r\n  .activity-post-list {\r\n    margin: 1rem 0;\r\n  }\r\n  .activity-post-item {\r\n    margin-bottom: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst PostBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  border-top: 1px solid ${({ theme }) => theme.postBorder};\r\n  padding: 0.5rem 0.25rem;\r\n  &:last-of-type {\r\n    border-bottom: 1px solid ${({ theme }) => theme.postBorder};\r\n  }\r\n  .tags,\r\n  .subinfo {\r\n    margin: 0;\r\n    display: flex;\r\n  }\r\n  & > a {\r\n    font-family: 'NanumGothic';\r\n  }\r\n  a {\r\n    display: flex;\r\n  }\r\n  flex: none;\r\n  .post-info {\r\n    margin-left: auto;\r\n    display: flex;\r\n    align-items: center;\r\n    font-family: 'NanumGothic';\r\n    .tags + .subinfo {\r\n      margin-left: 1rem;\r\n    }\r\n  }\r\n  &:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n`;\r\n\r\n// 활동 정보 내의 유저가 작성한 블로그 포스트 리스트 아이템\r\nconst PostItem = ({ post }) => {\r\n  const { _id, title, tags, publisher } = post;\r\n  return (\r\n    <PostBlock>\r\n      <Link to={`/blog/@${publisher.username}/${_id}`}>{title}</Link>\r\n      <div className=\"post-info\">\r\n        <Tags tags={tags} limit={3} />\r\n      </div>\r\n    </PostBlock>\r\n  );\r\n};\r\n\r\nconst Activity = ({\r\n  user,\r\n  postList,\r\n  postCount,\r\n  lastPage,\r\n  documentCount,\r\n  postListError,\r\n  documentCountError,\r\n  loadingPost,\r\n  loadingWiki,\r\n}) => {\r\n  if (loadingPost || loadingWiki) {\r\n    return (\r\n      <ActivityBlock>\r\n        <LoadingProgress customHeight={70} />\r\n      </ActivityBlock>\r\n    );\r\n  }\r\n  return (\r\n    <ActivityBlock>\r\n      <div className=\"activity-count-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">WIKI DOCUMENT</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 위키 문서 개수</span>\r\n            {!loadingWiki && (\r\n              <span className=\"content-value\">{documentCount}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">POST</span>\r\n          <div className=\"profile-info-content\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 개수</span>\r\n            {!loadingPost && <span className=\"content-value\">{postCount}</span>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"activity-post-group\">\r\n        <div className=\"profile-info-group\">\r\n          <span className=\"profile-info-title\">PUBLISHED POST LIST</span>\r\n          <div className=\"profile-info-content-col\">\r\n            <span className=\"content-title\">발행한 블로그 포스트 목록</span>\r\n            {!loadingPost && postList && (\r\n              <div className=\"activity-post-list\">\r\n                <div className=\"activity-post-item\">\r\n                  {postList.map((post) => (\r\n                    <PostItem post={post} key={post._id} />\r\n                  ))}\r\n                </div>\r\n                <PaginationContainer />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ActivityBlock>\r\n  );\r\n};\r\n\r\nexport default Activity;\r\n","import React, { useEffect } from 'react';\r\nimport Activity from '../../components/profile/Activity';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getList, unloadList } from '../../module/redux/post';\r\nimport { getDocumentCount } from '../../module/redux/wiki';\r\n\r\nconst ActivityContainer = () => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 상태 불러오기\r\n  const {\r\n    user,\r\n    postList,\r\n    postCount,\r\n    documentCount,\r\n    postListError,\r\n    documentCountError,\r\n    loadingPost,\r\n    loadingWiki,\r\n  } = useSelector(({ user, post, wiki, loading }) => ({\r\n    user: user.user,\r\n    postList: post.postList,\r\n    postCount: post.postCount,\r\n    documentCount: wiki.documentCount,\r\n    postListError: post.postListError,\r\n    documentCountError: wiki.documentCountError,\r\n    loadingPost: loading['post/GET_LIST'],\r\n    loadingWiki: loading['wiki/GET_DOCUMENT_COUNT'],\r\n  }));\r\n\r\n  // 이벤트 정의\r\n  const { username } = user;\r\n  useEffect(() => {\r\n    if (username) {\r\n      dispatch(getList({ username }));\r\n      dispatch(getDocumentCount({ username }));\r\n    }\r\n    return () => {\r\n      dispatch(unloadList());\r\n    };\r\n  }, [dispatch, username]);\r\n\r\n  return (\r\n    <Activity\r\n      user={user}\r\n      postList={postList}\r\n      postCount={postCount}\r\n      documentCount={documentCount}\r\n      postListError={postListError}\r\n      documentCountError={documentCountError}\r\n      loadingPost={loadingPost}\r\n      loadingWiki={loadingWiki}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ActivityContainer;\r\n"],"sourceRoot":""}