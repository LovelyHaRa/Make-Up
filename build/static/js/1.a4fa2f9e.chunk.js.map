{"version":3,"sources":["components/wiki/WikiSearch.js","containers/wiki/WikiSearchContainer.js"],"names":["WikiSearchBlock","styled","div","theme","wikiMenuBorder","SearchBlock","text","hoverText","wikiActionButtonHoverBody","SearchInput","input","body","SearchButton","button","WikiSearch","onChangeField","onSearch","onDirect","onShuffle","library","add","faSearch","faRandom","faArrowRight","onClick","icon","onChange","e","key","value","target","onKeyUp","keyCode","placeholder","className","withRouter","history","dispatch","useDispatch","useSelector","wiki","query","directName","randomTitle","useCallback","payload","changeField","useEffect","push","initialize","getDirectTitle","getRandomTitle"],"mappings":"ksCAeA,IAAMA,EAAkBC,IAAOC,IAAV,KAEQ,qBAAGC,MAAkBC,kBAG5CC,EAAcJ,IAAOC,IAAV,KAGN,qBAAGC,MAAkBG,QAIjB,qBAAGH,MAAkBI,aAChB,qBAAGJ,MAAkBK,6BASnCC,EAAcR,IAAOS,MAAV,KAGU,qBAAGP,MAAkBC,kBAIhC,qBAAGD,MAAkBQ,QAC1B,qBAAGR,MAAkBG,QAGnB,qBAAGH,MAAkBI,aAI5BK,EAAeX,IAAOY,OAAV,KACF,qBAAGV,MAAkBQ,QAIV,qBAAGR,MAAkBC,kBACrC,qBAAGD,MAAkBG,QAGnB,qBAAGH,MAAkBI,aAChB,qBAAGJ,MAAkBK,6BAyCxBM,EArCI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACvDC,IAAQC,IAAI,CAACC,IAAUC,IAAUC,MAYjC,OACE,kBAACvB,EAAD,KACE,kBAACK,EAAD,KACE,kBAACO,EAAD,CAAcY,QAASN,GACrB,kBAAC,IAAD,CAAiBO,KAAK,YAExB,kBAAChB,EAAD,CACEiB,SAjBa,SAACC,GACpBZ,EAAc,CAAEa,IAAK,QAASC,MAAOF,EAAEG,OAAOD,SAiBxCE,QAdY,SAACJ,GACnB,GAAkB,KAAdA,EAAEK,QACJ,OAAOhB,KAaHiB,YAAY,2CAEd,0BAAMC,UAAU,iBACd,kBAACtB,EAAD,CAAcY,QAASR,GACrB,kBAAC,IAAD,CAAiBS,KAAK,YAExB,kBAACb,EAAD,CAAcY,QAASP,GACrB,kBAAC,IAAD,CAAiBQ,KAAK,qB,wBC3BnBU,uBAzDa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEvBC,EAAWC,cAF0B,EAIAC,aAAY,gBAAGC,EAAH,EAAGA,KAAH,MAAe,CACpEC,MAAOD,EAAKC,MACZC,WAAYF,EAAKE,WACjBC,YAAaH,EAAKG,gBAHZF,EAJmC,EAInCA,MAAOC,EAJ4B,EAI5BA,WAAYC,EAJgB,EAIhBA,YAMrB5B,EAAgB6B,uBACpB,SAACC,GAAD,OAAaR,EAASS,YAAYD,MAClC,CAACR,IAmCH,OAfAU,qBAAU,WACJL,IACFN,EAAQY,KAAR,aAAmBN,IACnBL,EAASY,kBAEV,CAACZ,EAAUD,EAASM,IAGvBK,qBAAU,WACJJ,IACFP,EAAQY,KAAR,aAAmBL,IACnBN,EAASY,kBAEV,CAACZ,EAAUD,EAASO,IAGrB,kBAAC,EAAD,CACE5B,cAAeA,EACfC,SAnCa,WACD,KAAVyB,EACFL,EAAQY,KAAK,cAEbZ,EAAQY,KAAR,2BAAiCP,KAgCjCxB,SA5Ba,WACfoB,EAASa,YAAe,CAAET,YA4BxBvB,UAzBc,WAChBmB,EAASc","file":"static/js/1.a4fa2f9e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faRandom,\r\n  faArrowRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n/**\r\n * 위키 검색 컴포넌트\r\n * 랜덤 문서 이동, 다이렉트 이동 구현\r\n */\r\n\r\nconst WikiSearchBlock = styled.div`\r\n  margin-top: 0.125rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n`;\r\n\r\nconst SearchBlock = styled.div`\r\n  display: flex;\r\n  flex: none;\r\n  color: ${({ theme }) => theme.text};\r\n  a {\r\n    padding: 0.375rem 0.75rem;\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n    }\r\n  }\r\n  .action-button {\r\n    display: flex;\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 0 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  flex-grow: 1;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  ::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  background: ${({ theme }) => theme.body};\r\n  outline: none;\r\n  padding: 0.375rem 0.75rem;\r\n  border: none;\r\n  border-left: 1px solid ${({ theme }) => theme.wikiMenuBorder};\r\n  color: ${({ theme }) => theme.text};\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n    background: ${({ theme }) => theme.wikiActionButtonHoverBody};\r\n  }\r\n`;\r\n\r\nconst WikiSearch = ({ onChangeField, onSearch, onDirect, onShuffle }) => {\r\n  library.add([faSearch, faRandom, faArrowRight]);\r\n\r\n  const handleChange = (e) => {\r\n    onChangeField({ key: 'query', value: e.target.value });\r\n  };\r\n\r\n  const handleKeyUp = (e) => {\r\n    if (e.keyCode === 13) {\r\n      return onSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WikiSearchBlock>\r\n      <SearchBlock>\r\n        <SearchButton onClick={onShuffle}>\r\n          <FontAwesomeIcon icon=\"random\" />\r\n        </SearchButton>\r\n        <SearchInput\r\n          onChange={handleChange}\r\n          onKeyUp={handleKeyUp}\r\n          placeholder=\"위키 문서 검색\"\r\n        />\r\n        <span className=\"action-button\">\r\n          <SearchButton onClick={onSearch}>\r\n            <FontAwesomeIcon icon=\"search\" />\r\n          </SearchButton>\r\n          <SearchButton onClick={onDirect}>\r\n            <FontAwesomeIcon icon=\"arrow-right\" />\r\n          </SearchButton>\r\n        </span>\r\n      </SearchBlock>\r\n    </WikiSearchBlock>\r\n  );\r\n};\r\n\r\nexport default WikiSearch;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport WikiSearch from '../../components/wiki/WikiSearch';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeField,\r\n  getDirectTitle,\r\n  initialize,\r\n  getRandomTitle,\r\n} from '../../module/redux/wiki';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst WikiSearchContainer = ({ history }) => {\r\n  // 액션 함수 불러오기\r\n  const dispatch = useDispatch();\r\n  // 전역 설정 불러오기\r\n  const { query, directName, randomTitle } = useSelector(({ wiki }) => ({\r\n    query: wiki.query,\r\n    directName: wiki.directName,\r\n    randomTitle: wiki.randomTitle,\r\n  }));\r\n  // 이벤트 정의\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n\r\n  const onSearch = () => {\r\n    if (query === '') {\r\n      history.push('/wiki/list');\r\n    } else {\r\n      history.push(`/wiki/list?query=${query}`);\r\n    }\r\n  };\r\n\r\n  const onDirect = () => {\r\n    dispatch(getDirectTitle({ query }));\r\n  };\r\n\r\n  const onShuffle = () => {\r\n    dispatch(getRandomTitle());\r\n  };\r\n\r\n  // 다이렉트 이동\r\n  useEffect(() => {\r\n    if (directName) {\r\n      history.push(`/w/${directName}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, directName]);\r\n\r\n  // 랜덤 문서 이동\r\n  useEffect(() => {\r\n    if (randomTitle) {\r\n      history.push(`/w/${randomTitle}`);\r\n      dispatch(initialize());\r\n    }\r\n  }, [dispatch, history, randomTitle]);\r\n\r\n  return (\r\n    <WikiSearch\r\n      onChangeField={onChangeField}\r\n      onSearch={onSearch}\r\n      onDirect={onDirect}\r\n      onShuffle={onShuffle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiSearchContainer);\r\n"],"sourceRoot":""}