{"version":3,"sources":["lib/styles/open-color.js","containers/auth/LoginForm.js","containers/auth/RegisterForm.js","lib/styles/theme.js","module/redux/theme.js","components/common/CustomSwitch.js","components/common/Header.js","containers/common/HeaderContainer.js","components/common/BodyBlock.js","pages/main/MainPage.js","pages/post/PostWritePage.js","pages/post/PostPage.js","pages/post/PostListPage.js","pages/auth/LoginPage.js","pages/auth/RegisterPage.js","pages/auth/callback/LoginWithNaverPage.js","pages/auth/callback/LoginWithKakaoPage.js","pages/wiki/WikiPage.js","pages/wiki/WikiEditPage.js","pages/wiki/WikiRequestPage.js","pages/wiki/WikiHistoryPage.js","pages/wiki/WikiListPage.js","components/common/FlexContentBlock.js","pages/profile/MyPage.js","pages/profile/SecurityPage.js","pages/profile/ActivityPage.js","pages/search/LocalSearchPage.js","App.js","serviceWorker.js","module/redux/index.js","index.js","lib/api/client.js","module/redux/auth.js","module/redux/user.js","lib/api/auth.js","components/common/Button.js","lib/api/user.js","components/common/Responsive.js","module/redux/loading.js","lib/api/post.js","module/redux/search.js","lib/createRequest.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","module/redux/wiki.js","lib/api/wiki.js","module/redux/post.js"],"names":["palette","gray","red","violet","indigo","cyan","yellow","withRouter","history","useState","error","setError","dispatch","useDispatch","useSelector","auth","user","form","login","authError","useEffect","response","status","check","initializeForm","replace","sessionStorage","setItem","JSON","stringify","type","onChange","e","target","value","name","changeFieid","key","onSubmit","preventDefault","username","password","includes","onSocialLogin","id_token","loginWithGoogle","register","isNotExistUsername","checkExistUsernameResult","isNotExistUsernameError","checkExistUsernameResultError","isNotExistName","checkExistNameResult","isNotExistNameError","checkExistNameResultError","registerResult","registerResultError","result","message","validUsername","setValidUsername","validName","setValidName","isLoading","useRef","current","checkExistUsername","checkExistName","passwordConfirm","lightTheme","body","text","hoverText","categoryBorder","themeColorBody","themeColorHoverBody","progressBar","progressBody","sliderTrack","sliderRail","hoverList","inputBody","placeholder","btnSearchBody","dropdownBody","loginBody","loginInputBorder","loginInputBorderFocus","darkThemeSwitchBody","darkThemeSwitchTrack","editorTitleBorder","editorText","editorTagComponentBorder","editorTagBoxBorder","editorTagTitle","editorTagButtonBody","editorHoverTagButtonBody","editorTagButtonText","editorTagText","footerText","btnBody","btnHoverBody","btnText","btnDisableBody","btnDisableColor","postBorder","postSubInfoText","postSubInfoHoverText","postTagText","postTagHoverText","postActionButtonText","postActionButtonHoverText","postActionButtonBody","postActionButtonHoverBody","wikiMenuBorder","wikiActionButtonBody","wikiActionButtonHoverBody","wikiActionButtonText","wikitActionButtonHoverText","wikiBorder","wikiHistoryLinkText","wikiHistoryLinkHoverText","errorText","profileInfoValueBody","profileInputValid","profileInputInValid","searchBorder","darkTheme","setTheme","createAction","theme","handleActions","state","isDarkTheme","payload","DarkThemeSwitch","styled","Switch","HeaderBlock","nav","Menu","div","SearchResponsive","SearchInputWrapper","SearchInput","input","SearchBtn","Link","MemoizedEtcDropDown","React","memo","className","to","SearchDropDown","currentPath","ProfileInfo","OptionMenu","classes","makeStyles","fontFamily","useStyles","setDarkTheme","Typography","component","Grid","container","display","alignItems","justify","style","fontSize","letterSpacing","item","checked","localStorage","size","LogoutMenu","onLogout","onClick","UserDropDown","NoneUserDropDown","SearchInputPackage","searchQuery","handleSearchInput","handleSearchKeyUp","tabIndex","onKeyUp","event","keyCode","icon","Spacer","Header","library","add","faSearch","faEllipsisH","faEllipsisV","faUserCircle","etc","setEtc","search","setSearch","userinfo","setUserinfo","noneuser","setNoneUser","ClickAwayListener","onClickAway","prevOpen","aria-haspopup","justifyContent","Button","transparent","AuthTemplate","loadable","LoginForm","RegisterForm","location","query","pathname","preload","logout","changeInput","push","BodyBlock","props","includeHeader","MainContainer","MainPage","EditorContainer","TagBoxContainer","WriteActionButtonsContainer","EditorFooter","Responsive","PostViewerContainer","PostPage","PostListContainer","PostListPage","LoginPage","RegisterPage","qs","parse","ignoreQueryPrefix","code","loginWithNaver","client_id","process","client_secret","redirect_uri","loginWithKakao","WikiViewerContainer","WikiSearchContainer","WikiPage","WikiRequestContainer","WikiRequestPage","WikiHistoryContainer","WikiHistoryPage","WikiListContainer","WikiListPage","FlexContentBlock","direction","MyPageMenuContainer","ProfileContainer","MyPage","SecurityContainer","SecurityPage","ActivityContainer","ActivityPage","LocalSearchContainer","LocalSearchPage","App","getItem","path","exact","LoginWithNaverPage","LoginWithKakaoPage","PostWritePage","WikiEditPage","Boolean","window","hostname","match","rootSaga","all","authSaga","userSaga","postSaga","wikiSaga","rootReducer","combineReducers","loading","post","wiki","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","tempSetUser","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","client","axios","create","createRequestActionTypes","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_WITH_GOOGLE","LOGIN_WITH_GOOGLE_SUCCESS","LOGIN_WITH_GOOGLE_FAILURE","LOGIN_WITH_NAVER","LOGIN_WITH_NAVER_SUCCESS","LOGIN_WITH_NAVER_FAILURE","LOGIN_WITH_KAKAO","LOGIN_WITH_KAKAO_SUCCESS","LOGIN_WITH_KAKAO_FAILURE","CHECK_EXIST_USERNAME","CHECK_EXIST_USERNAME_SUCCESS","CHECK_EXIST_USERNAME_FAILURE","CHECK_EXIST_NAME","CHECK_EXIST_NAME_SUCCESS","CHECK_EXIST_NAME_FAILURE","registerSaga","createRequestSaga","authAPI","loginSaga","loginWithGoogleSaga","loginWithNaverSaga","loginWithKakaoSaga","checkExistUsernameSaga","userAPI","checkExistNameSaga","takeLatest","debounce","initialState","produce","draft","logoutSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","UPDATE_NAME","UPDATE_NAME_SUCCESS","UPDATE_NAME_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","changeField","updateName","id","initializeUpdateName","changePassword","newPassword","initializeChangePassword","checkSaga","updateNameSaga","changePasswordSaga","checkFailureSaga","removeItem","call","checkError","updateUser","updateUserError","changePasswordResult","changePasswordError","curPassword","confirmPassword","profile","get","buttonStyle","css","fullWidth","themeColor","StyledButton","button","StyledLink","patch","ResponsiveBlock","children","rest","startLoading","requestType","finishLoading","action","writePost","title","tags","readPost","updatePost","removePost","delete","getList","page","tag","block","oldest","day","queryString","changeOption","initialize","initializeOption","option","totalSort","totalTerm","wikiSort","wikilength","blogSort","blogTerm","request","SUCCESS","FAILURE","put","data","meta","AuthTemplateBlock","ContentBox","AuthFormBlock","StyledInput","Footer","ButtonWithMarginTop","GoogleLoginButton","socialBtnStyle","NaverLoginButton","a","KakaoLoginButton","textMap","signinGoogle","ErrorMessage","AuthForm","googleLoginBtn","auth2","loadGoogleLoginApi","useCallback","load","init","cookiepolicy","scope","attachClickHandler","googleUser","getAuthResponse","onNaverLoginClick","requestUrl","onKakaoLoginClick","loadScript","script","srcValue","referenceNode","getElementsByTagName","googlejssdkNode","createElement","src","parentNode","insertBefore","removeApiScript","tagName","targetId","targetNode","map","node","indexOf","removeChild","removeTag","sdkNode","removeJssdk","autoComplete","length","ref","faGoogle","alt","GET_REQUEST_LIST","GET_REQUEST_LIST_SUCCESS","GET_REQUEST_LIST_FAILURE","SET_TITLE","WRITE_DOCUMENT","WRITE_DOCUMENT_SUCCESS","WRITE_DOCUMENT_FAILURE","READ_DOCUMENT","READ_DOCUMENT_SUCCESS","READ_DOCUMENT_FAILURE","GET_DOCUMENT_LIST","GET_DOCUMENT_LIST_SUCCESS","GET_DOCUMENT_LIST_FAILURE","GET_HISTORY_LIST","GET_HISTORY_LIST_SUCCESS","GET_HISTORY_LIST_FAILURE","GET_SEARCH_LIST","GET_SEARCH_LIST_SUCCESS","GET_SEARCH_LIST_FAILURE","GET_DIRECT_TITLE","GET_DIRECT_TITLE_SUCCESS","GET_DIRECT_TITLE_FAILURE","GET_RANDOM_TITLE","GET_RANDOM_TITLE_SUCCESS","GET_RANDOM_TITLE_FAILURE","GET_DOCUMENT_COUNT","GET_DOCUMENT_COUNT_SUCCESS","GET_DOCUMENT_COUNT_FAILURE","ADD_BARCODE_NUMBER","ADD_BARCODE_NUMBER_SUCCESS","ADD_BARCODE_NUMBER_FAILURE","getRequestList","setTitle","writeDocument","readDocument","r","unloadDocument","setOriginalDocument","getDocumentList","unloadList","getHistoryList","getSearchList","shortest","longest","getDirectTitle","getRandomTitle","getDocumentCount","addBarcodeNumber","getRequestListSaga","writeDocumentSaga","readDocumentSaga","getDocumentListSaga","getHistoryListSaga","getSearchListSaga","getDirectTitleSaga","getRandomTitleSaga","getDocumentCountSaga","addBarcodeNumberSaga","requestList","requestListError","titleError","editDocument","editDocumentError","directName","directError","randomTitle","randomTitleError","documentError","documentList","documentListError","historyList","historyListError","searchList","lastPage","parseInt","headers","searchListError","documentCount","documentCountError","addBarcodeNumberResult","addBarcodeNumberResultError","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","GET_LIST","GET_LIST_SUCCESS","GET_LIST_FAILURE","setOriginalPost","unloadPost","writePostSaga","postAPI","readPostSaga","updatePostSaga","getListSaga","editPost","editPostError","postError","postList","postCount","postListError","targetPostId","_id","neditPosttError"],"mappings":"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","file":"static/js/main.47f9b863.chunk.js","sourcesContent":["const palette = {\r\n  gray: [\r\n    '#f8f9fa',\r\n    '#f1f3f5',\r\n    '#e9ecef',\r\n    '#dee2e6',\r\n    '#ced4da',\r\n    '#adb5bd',\r\n    '#868e96',\r\n    '#495057',\r\n    '#343a40',\r\n    '#212529',\r\n  ],\r\n  red: [\r\n    '#fff5f5',\r\n    '#ffe3e3',\r\n    '#ffc9c9',\r\n    '#ffa8a8',\r\n    '#ff8787',\r\n    '#ff6b6b',\r\n    '#fa5252',\r\n    '#f03e3e',\r\n    '#e03131',\r\n    '#c92a2a',\r\n  ],\r\n  violet: [\r\n    '#f3f0ff',\r\n    '#e5dbff',\r\n    '#d0bfff',\r\n    '#b197fc',\r\n    '#9775fa',\r\n    '#845ef7',\r\n    '#7950f2',\r\n    '#7048e8',\r\n    '#6741d9',\r\n    '#5f3dc4',\r\n  ],\r\n  indigo: [\r\n    '#edf2ff',\r\n    '#dbe4ff',\r\n    '#bac8ff',\r\n    '#91a7ff',\r\n    '#748ffc',\r\n    '#5c7cfa',\r\n    '#4c6ef5',\r\n    '#4263eb',\r\n    '#3b5bdb',\r\n    '#364fc7',\r\n  ],\r\n  cyan: [\r\n    '#e3fafc',\r\n    '#c5f6fa',\r\n    '#99e9f2',\r\n    '#66d9e8',\r\n    '#3bc9db',\r\n    '#22b8cf',\r\n    '#15aabf',\r\n    '#1098ad',\r\n    '#0c8599',\r\n    '#0b7285',\r\n  ],\r\n  yellow: [\r\n    '#fff9db',\r\n    '#fff3bf',\r\n    '#ffec99',\r\n    '#ffe066',\r\n    '#ffd43b',\r\n    '#fcc419',\r\n    '#fab005',\r\n    '#f59f00',\r\n    '#f08c00',\r\n    '#e67700',\r\n  ]\r\n};\r\n\r\nexport default palette;","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  login,\r\n  loginWithGoogle,\r\n  initializeForm,\r\n} from '../../module/redux/auth';\r\nimport { check } from '../../module/redux/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  // 폼 데이터 변경 이벤트\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(changeFieid({ form: 'login', key: name, value }));\r\n    setError(null);\r\n  };\r\n\r\n  // submit 이벤트\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    if ([username, password].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  // 구글 로그인 이벤트\r\n  const onSocialLogin = ({ id_token }) => {\r\n    dispatch(loginWithGoogle({ id_token }));\r\n  };\r\n\r\n  // 로그인 성공/실페에 따른 처리\r\n  useEffect(() => {\r\n    // 로그인 실패 시 에러 메시지 출력\r\n    if (authError) {\r\n      if (authError.response.status === 401) {\r\n        setError('계정 또는 비밀번호가 일치하지 않습니다.');\r\n        return;\r\n      } else {\r\n        setError('로그인 실패: ' + authError);\r\n        return;\r\n      }\r\n    }\r\n    // 로그인 성공 시 check 액션을 통해 유저 정보를 리덕스 상태에 업데이트\r\n    if (auth) {\r\n      dispatch(check());\r\n      dispatch(initializeForm()); // 폼 입력 초기화\r\n    }\r\n    return () => {\r\n      dispatch(initializeForm()); // 언마운트 시 폼 입력 초기화\r\n    };\r\n  }, [auth, authError, dispatch]);\r\n\r\n  // 로그인 성공시 유저 정보 세션에 저장 후 페이지 리다이렉션\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.replace('/');\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"login\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n      onSocialLogin={onSocialLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  changeFieid,\r\n  register,\r\n  initializeForm,\r\n  checkExistUsername,\r\n  checkExistName,\r\n} from '../../module/redux/auth';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    form,\r\n    isNotExistUsername,\r\n    isNotExistUsernameError,\r\n    isNotExistName,\r\n    isNotExistNameError,\r\n    registerResult,\r\n    registerResultError,\r\n  } = useSelector(({ auth }) => ({\r\n    form: auth.register,\r\n    isNotExistUsername: auth.checkExistUsernameResult,\r\n    isNotExistUsernameError: auth.checkExistUsernameResultError,\r\n    isNotExistName: auth.checkExistNameResult,\r\n    isNotExistNameError: auth.checkExistNameResultError,\r\n    registerResult: auth.registerResult,\r\n    registerResultError: auth.registerResultError,\r\n  }));\r\n\r\n  const [validUsername, setValidUsername] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n  const [validName, setValidName] = useState({\r\n    result: false,\r\n    message: '',\r\n  });\r\n\r\n  // 폼 데이터 변경 이벤트\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(changeFieid({ form: 'register', key: name, value }));\r\n    setError(null);\r\n    if (name === 'username') {\r\n      setValidUsername({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    } else if (name === 'name') {\r\n      setValidName({\r\n        result: false,\r\n        message: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  // submit 이벤트\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password, passwordConfirm, name } = form;\r\n    // 하나라도 비어 있다면\r\n    if ([username, password, passwordConfirm].includes('')) {\r\n      setError('빈 칸을 모두 입력하세요.');\r\n      return;\r\n    }\r\n    // 비밀번호가 일치하지 않는다면\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      dispatch(changeFieid({ form: 'register', key: 'password', value: '' }));\r\n      dispatch(\r\n        changeFieid({ form: 'register', key: 'passwordConfirm', value: '' }),\r\n      );\r\n      return;\r\n    }\r\n    dispatch(register({ username, password, name }));\r\n  };\r\n\r\n  const isLoading = useRef(true);\r\n  // 컴포넌트가 처음 렌더링 될 때  form을 초기화함\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n    isLoading.current = false;\r\n  }, [dispatch]);\r\n\r\n  // 비동기 계정명 중복 체크\r\n  useEffect(() => {\r\n    if (isLoading.current) return;\r\n    if (form.username !== '') {\r\n      dispatch(checkExistUsername({ username: form.username }));\r\n    }\r\n  }, [isLoading, dispatch, form.username]);\r\n\r\n  // 비동기 이름 중복 체크\r\n  useEffect(() => {\r\n    if (isLoading.current) return;\r\n    const { username, name } = form;\r\n    if (name === '') return;\r\n    if (\r\n      !isNotExistUsername ||\r\n      (isNotExistUsername && !isNotExistUsername.result)\r\n    ) {\r\n      setValidName({\r\n        result: false,\r\n        message: '계정 이름이 유효하지 않습니다.',\r\n      });\r\n      return;\r\n    } else {\r\n      dispatch(checkExistName({ username, name }));\r\n    }\r\n  }, [isLoading, dispatch, form, isNotExistUsername]);\r\n\r\n  // 계정명 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistUsernameError) {\r\n      setValidUsername({\r\n        result: false,\r\n        message: '인증 서버 연결에 실패했습니다.',\r\n      });\r\n    } else if (!isNotExistUsername) return;\r\n    else if (isNotExistUsername.result) {\r\n      setValidUsername({ result: true, message: '' });\r\n    } else {\r\n      setValidUsername({\r\n        result: false,\r\n        message: isNotExistUsername ? isNotExistUsername.message : '',\r\n      });\r\n    }\r\n  }, [isNotExistUsername, isNotExistUsernameError]);\r\n\r\n  // 이름 중복 체크 결과 반영\r\n  useEffect(() => {\r\n    if (isNotExistNameError) {\r\n      setValidName({\r\n        result: false,\r\n        message: '인증 서버 연결에 실패했습니다.',\r\n      });\r\n    } else if (!isNotExistName) return;\r\n    else if (isNotExistName.result) {\r\n      setValidName({ result: true, message: '' });\r\n    } else {\r\n      setValidName({\r\n        result: false,\r\n        message: isNotExistName ? isNotExistName.message : '',\r\n      });\r\n    }\r\n  }, [isNotExistName, isNotExistNameError]);\r\n  // 회원가입 성공/실패 처리\r\n  useEffect(() => {\r\n    if (registerResultError) {\r\n      // 계정명이 이미 존재할 때\r\n      if (registerResultError.response.status === 409) {\r\n        setError('이미 존재하는 계정입니다.');\r\n        return;\r\n      }\r\n      // 기타 이유\r\n      setError('회원가입 실패');\r\n      return;\r\n    }\r\n    if (registerResult) {\r\n      history.replace('/login');\r\n    }\r\n  }, [registerResult, registerResultError, dispatch, history]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      validUsername={validUsername}\r\n      validName={validName}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import palette from './open-color';\r\n\r\nexport const lightTheme = {\r\n  /* Common */\r\n  body: '#fff',\r\n  text: palette.gray[9],\r\n  hoverText: palette.gray[6],\r\n  categoryBorder: palette.cyan[7],\r\n  themeColorBody: palette.cyan[7],\r\n  themeColorHoverBody: palette.cyan[5],\r\n  progressBar: palette.cyan[3],\r\n  progressBody: palette.cyan[1],\r\n  sliderTrack: palette.cyan[3],\r\n  sliderRail: palette.cyan[1],\r\n  /* Header */\r\n  hoverList: palette.gray[2],\r\n  inputBody: palette.gray[1],\r\n  placeholder: palette.gray[7],\r\n  btnSearchBody: palette.gray[1],\r\n  dropdownBody: '#fff',\r\n  /* AuthForm */\r\n  loginBody: palette.gray[2],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[7],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: palette.gray[7],\r\n  darkThemeSwitchTrack: palette.gray[5],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[4],\r\n  editorText: palette.gray[8],\r\n  editorTagComponentBorder: palette.gray[4],\r\n  editorTagBoxBorder: palette.gray[9],\r\n  editorTagTitle: palette.gray[8],\r\n  editorTagButtonBody: palette.gray[8],\r\n  editorHoverTagButtonBody: palette.gray[6],\r\n  editorTagButtonText: '#fff',\r\n  editorTagText: palette.gray[6],\r\n  /* Footer */\r\n  footerText: palette.gray[8],\r\n  /* Button */\r\n  btnBody: palette.gray[9],\r\n  btnHoverBody: palette.gray[7],\r\n  btnText: '#fff',\r\n  btnDisableBody: palette.cyan[2],\r\n  btnDisableColor: palette.gray[9],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[4],\r\n  postSubInfoText: palette.gray[6],\r\n  postSubInfoHoverText: palette.gray[7],\r\n  postTagText: palette.cyan[7],\r\n  postTagHoverText: palette.cyan[5],\r\n  postActionButtonText: palette.gray[7],\r\n  postActionButtonHoverText: palette.gray[6],\r\n  postActionButtonBody: palette.gray[2],\r\n  postActionButtonHoverBody: palette.gray[1],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[5],\r\n  wikiActionButtonBody: palette.gray[2],\r\n  wikiActionButtonHoverBody: palette.gray[1],\r\n  wikiActionButtonText: palette.gray[7],\r\n  wikitActionButtonHoverText: palette.gray[6],\r\n  wikiBorder: palette.gray[4],\r\n  wikiHistoryLinkText: palette.cyan[7],\r\n  wikiHistoryLinkHoverText: palette.cyan[5],\r\n  /* Error */\r\n  errorText: palette.red[5],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.cyan[0],\r\n  profileInputValid: palette.cyan[2],\r\n  profileInputInValid: palette.red[3],\r\n  /* Searck */\r\n  searchBorder: palette.gray[4],\r\n};\r\n\r\nexport const darkTheme = {\r\n  /* Common */\r\n  body: palette.gray[9],\r\n  text: '#fff',\r\n  hoverText: palette.gray[3],\r\n  categoryBorder: palette.violet[5],\r\n  themeColorBody: palette.violet[5],\r\n  themeColorHoverBody: palette.violet[3],\r\n  progressBar: palette.violet[3],\r\n  progressBody: palette.violet[1],\r\n  sliderTrack: palette.violet[3],\r\n  sliderRail: palette.violet[1],\r\n  /* Header */\r\n  hoverList: palette.gray[7],\r\n  inputBody: palette.gray[7],\r\n  placeholder: palette.gray[2],\r\n  btnSearchBody: palette.gray[8],\r\n  dropdownBody: palette.gray[9],\r\n  /* AuthForm */\r\n  loginBody: palette.gray[7],\r\n  loginInputBorder: palette.gray[5],\r\n  loginInputBorderFocus: palette.gray[3],\r\n  /* DarkThemeSwitch */\r\n  darkThemeSwitchBody: '#fff',\r\n  darkThemeSwitchTrack: palette.gray[2],\r\n  /* Editor */\r\n  editorTitleBorder: palette.gray[5],\r\n  editorText: palette.gray[5],\r\n  editorTagComponentBorder: palette.gray[5],\r\n  editorTagBoxBorder: palette.gray[5],\r\n  editorTagTitle: palette.gray[6],\r\n  editorTagButtonBody: palette.gray[2],\r\n  editorHoverTagButtonBody: palette.gray[4],\r\n  editorTagButtonText: palette.gray[9],\r\n  editorTagText: palette.gray[4],\r\n  /* Footer */\r\n  footerText: palette.gray[2],\r\n  /* Button */\r\n  btnBody: '#fff',\r\n  btnHoverBody: palette.gray[4],\r\n  btnText: palette.gray[9],\r\n  btnDisableBody: palette.violet[3],\r\n  btnDisableColor: palette.gray[9],\r\n  /* PostViewer */\r\n  postBorder: palette.gray[5],\r\n  postSubInfoText: palette.gray[5],\r\n  postSubInfoHoverText: palette.gray[4],\r\n  postTagText: palette.violet[7],\r\n  postTagHoverText: palette.violet[5],\r\n  postActionButtonText: palette.gray[5],\r\n  postActionButtonHoverText: palette.gray[3],\r\n  postActionButtonBody: palette.gray[8],\r\n  postActionButtonHoverBody: palette.gray[7],\r\n  /* Wiki */\r\n  wikiMenuBorder: palette.gray[7],\r\n  wikiActionButtonBody: palette.gray[8],\r\n  wikiActionButtonHoverBody: palette.gray[7],\r\n  wikiActionButtonText: palette.gray[5],\r\n  wikitActionButtonHoverText: palette.gray[3],\r\n  wikiBorder: palette.gray[5],\r\n  wikiHistoryLinkText: palette.violet[7],\r\n  wikiHistoryLinkHoverText: palette.violet[5],\r\n  /* Error */\r\n  errorText: palette.red[9],\r\n  /* Profile */\r\n  profileInfoValueBody: palette.violet[5],\r\n  profileInputValid: palette.violet[3],\r\n  profileInputInValid: palette.red[3],\r\n  /* Searck */\r\n  searchBorder: palette.gray[5],\r\n};\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\n/* action type */\r\nconst SET_THEME = 'theme/SET_THEME';\r\n\r\n/* action */\r\nexport const setTheme = createAction(SET_THEME);\r\n\r\n/* redux-saga */\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  isDarkTheme: false,\r\n};\r\n\r\n/* reducer */\r\nconst theme = handleActions(\r\n  {\r\n    [SET_THEME]: (state, { payload: isDarkTheme }) => ({\r\n      ...state,\r\n      isDarkTheme,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default theme;\r\n","import styled from 'styled-components';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n/**\r\n * 커스텀 스위치(Dark Theme)\r\n */\r\n\r\nexport const DarkThemeSwitch = styled(Switch)`\r\n  .MuiSwitch-colorSecondary.Mui-checked + .MuiSwitch-track {\r\n    background-color: ${({ theme }) => theme.darkThemeSwitchTrack};\r\n  }\r\n  .MuiSwitch-switchBase {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n  .MuiSwitch-colorSecondary.Mui-checked {\r\n    color: ${({ theme }) => theme.darkThemeSwitchBody};\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faSearch,\r\n  faEllipsisH,\r\n  faEllipsisV,\r\n  faUserCircle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport Button from './Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { DarkThemeSwitch } from './CustomSwitch';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setTheme } from '../../module/redux/theme';\r\n\r\n// Header 컴포넌트의 css 정의\r\nconst HeaderBlock = styled.nav`\r\n  position: fixed;\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.body};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  z-index: 10;\r\n  li {\r\n    list-style-type: none !important;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n  }\r\n  .header-mid {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .header-right {\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .logo {\r\n    margin-left: 0.25rem;\r\n    margin-right: 0.25rem;\r\n    font-size: 1rem;\r\n    letter-spacing: 0.5px;\r\n    font-family: 'DancingScript';\r\n    font-weight: 700;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .menu {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .main-menu {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .menu div > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .main-menu {\r\n      display: none;\r\n    }\r\n    .all-menu p {\r\n      margin: 0.5rem 0.5rem 0;\r\n      color: ${({ theme }) => theme.hoverText};\r\n      font-family: 'Raleway';\r\n      font-weight: 600;\r\n    }\r\n    .all-menu li {\r\n      margin: 0;\r\n      padding: 0.25rem 0.5rem;\r\n    }\r\n  }\r\n  @media screen and (min-width: 501px) {\r\n    .all-menu {\r\n      display: none;\r\n    }\r\n  }\r\n  .btn-sign-in {\r\n    margin-right: 0.5rem;\r\n    margin-left: 1rem;\r\n  }\r\n  .user-info {\r\n    margin-right: 0.5rem;\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .dropdown {\r\n    position: fixed;\r\n    z-index: 2000;\r\n  }\r\n  .dropdown.dropdown-menu {\r\n    width: 14rem;\r\n    top: 2.5rem;\r\n    background: ${({ theme }) => theme.dropdownBody};\r\n    color: ${({ theme }) => theme.text};\r\n    border: none;\r\n    border-radius: 3px;\r\n    box-shadow: ${({ theme }) =>\r\n      theme.body === '#fff'\r\n        ? '0 0 5px 2px rgba(0, 0, 0, 0.15)'\r\n        : '0 0 5px 2px rgba(0, 0, 0, 0.35)'};\r\n    font-size: 0.8rem;\r\n  }\r\n  .dropdown.dropdown-menu hr {\r\n    margin: 0 0.25rem;\r\n    border: 0;\r\n    height: 1px;\r\n    background: ${palette.gray[5]};\r\n  }\r\n  .dropdown.dropdown-menu ul {\r\n    padding: 0.5rem 0.25rem;\r\n    margin: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n  .dropdown.dropdown-menu > ul li {\r\n    margin-top: 0.25rem;\r\n    padding: 0.5rem;\r\n  }\r\n  .dropdown.dropdown-menu > ul li:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  .dropdown.dropdown-menu li:hover {\r\n    background: ${({ theme }) => theme.hoverList};\r\n  }\r\n  .dropdown.dropdown-menu.dropdown-user-info {\r\n    width: 16rem;\r\n    right: 0.5rem;\r\n  }\r\n  .etc-menu,\r\n  .logout-menu {\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  .profile-menu p {\r\n    margin: 0.5rem 0.5rem 0;\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: 'Raleway';\r\n    font-weight: 600;\r\n  }\r\n  .profile-menu li {\r\n    margin: 0;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n  .profile-menu-mypage {\r\n    font-family: 'Raleway';\r\n    font-weight: 400;\r\n  }\r\n  .logout-menu {\r\n    font-size: 0.9rem;\r\n  }\r\n  .dropdown.dropdown-search-input {\r\n    display: flex;\r\n    top: 2.75rem;\r\n    right: 6.625rem;\r\n    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.55);\r\n  }\r\n  .none-user {\r\n    color: ${({ theme }) => theme.text};\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\n// 메뉴 영역 컴포넌트\r\nconst Menu = styled.div`\r\n  &:first-child {\r\n    margin-left: 1rem;\r\n  }\r\n  & + & {\r\n    margin-left: 1rem;\r\n  }\r\n  &:last-child {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\n// 반응형 검색 컴포넌트\r\nconst SearchResponsive = styled.div`\r\n  @media screen and (min-width: 769px) {\r\n    .search-input {\r\n      display: flex;\r\n    }\r\n    .search-btn {\r\n      display: none;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    .search-input {\r\n      display: none;\r\n    }\r\n    .search-btn {\r\n      display: inherit;\r\n      color: ${({ theme }) => theme.text};\r\n      margin: 0 1rem;\r\n    }\r\n    .search-btn > a:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n    }\r\n  }\r\n`;\r\n\r\n// 검색 컴포넌트 Wrapper\r\nconst SearchInputWrapper = styled.div`\r\n  height: 2rem;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n// 검색 컴포넌트의 input style 정의\r\nconst SearchInput = styled.input`\r\n  height: 1.875rem;\r\n  border: none;\r\n  border-top-left-radius: 3px;\r\n  border-bottom-left-radius: 3px;\r\n  padding-left: 0.5rem;\r\n  padding-right: 0.5rem;\r\n  background: ${({ theme }) => theme.inputBody};\r\n  color: ${({ theme }) => theme.text};\r\n  &::placeholder {\r\n    font-family: 'NanumBarunGothic';\r\n    color: ${({ theme }) => theme.placeholder};\r\n  }\r\n  &:focus {\r\n    outline: 2px solid ${palette.indigo[9]};\r\n  }\r\n`;\r\n\r\n// 검색 컴포넌트 드롭다운 버튼\r\nconst SearchBtn = styled(Link)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: ${({ theme }) => theme.btnSearchBody};\r\n  color: ${({ theme }) => theme.text};\r\n  border-top-right-radius: 3px;\r\n  border-bottom-right-radius: 3px;\r\n  &:hover {\r\n    background: ${palette.gray[6]};\r\n  }\r\n`;\r\n\r\n// 기타메뉴 드롭다운 컴포넌트\r\nconst EtcDropDown = ({ state }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu\">\r\n        <div className=\"all-menu\">\r\n          <p>MAIN MENU</p>\r\n          <ul>\r\n            <Link to=\"/w\">\r\n              <li>WIKI</li>\r\n            </Link>\r\n            <Link to=\"/blog\">\r\n              <li>blog</li>\r\n            </Link>\r\n          </ul>\r\n          <hr />\r\n        </div>\r\n        <ul className=\"etc-menu\">\r\n          <Link to=\"/wiki/request\">\r\n            <li>작성이 필요한 문서[WIKI]</li>\r\n          </Link>\r\n          {/* <li>외부사이트 검색(구현 중...)</li>\r\n          <li>바코드 / QR코드 만들기(구현 중...)</li>\r\n          <li>실시간 검색어 순위(구현 중...)</li>\r\n          <li>TODO(구현 중...)</li> */}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nconst MemoizedEtcDropDown = React.memo(EtcDropDown);\r\n\r\n// 검색 컴포넌트 드롭다운 처리\r\nconst SearchDropDown = ({ state, currentPath }) => {\r\n  return (\r\n    state && (\r\n      <SearchInputPackage\r\n        type=\"dropdown dropdown-search-input\"\r\n        currentPath={currentPath}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\n// 유저 정보 드롭다운\r\nconst ProfileInfo = ({ user }) => {\r\n  return (\r\n    <div className=\"profile-menu\">\r\n      <p>{user.name}</p>\r\n      <ul>\r\n        <Link to={'/mypage'}>\r\n          <li className=\"profile-menu-mypage\">My Page</li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 옵션 메뉴 드롭다운\r\nconst OptionMenu = ({ isDarkTheme }) => {\r\n  const useStyles = makeStyles(() => ({\r\n    darkTheme: { fontFamily: 'Raleway' },\r\n  }));\r\n  const classes = useStyles();\r\n  // 다크 모드 상태 저장\r\n  const [darkTheme, setDarkTheme] = useState(false);\r\n  // 다크모드 액션 적용\r\n  const dispatch = useDispatch();\r\n  const handleDarkThemeToggle = () => {\r\n    dispatch(setTheme(!darkTheme));\r\n    try {\r\n      // 로컬스토리지에 다크모드 상태값 저장\r\n      localStorage.setItem('darkTheme', !darkTheme + '');\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n    setDarkTheme(!darkTheme);\r\n  };\r\n  useEffect(() => {\r\n    if (isDarkTheme) {\r\n      setDarkTheme(true);\r\n    }\r\n  }, [isDarkTheme]);\r\n\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Typography component=\"div\">\r\n          <Grid\r\n            component=\"label\"\r\n            container\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justify=\"space-between\"\r\n            style={{\r\n              fontSize: '0.9rem',\r\n              fontFamily: 'sans-serif',\r\n              letterSpacing: '0',\r\n            }}\r\n          >\r\n            <Grid className={classes.darkTheme} item>\r\n              DARK THEME\r\n            </Grid>\r\n            <Grid item>\r\n              <DarkThemeSwitch\r\n                checked={darkTheme}\r\n                onChange={handleDarkThemeToggle}\r\n                name=\"darkTheme\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Typography>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\n// 로그아웃 메뉴\r\nconst LogoutMenu = ({ onLogout, currentPath }) => (\r\n  <ul className=\"logout-menu\">\r\n    <Link to={currentPath} onClick={onLogout}>\r\n      <li>로그아웃</li>\r\n    </Link>\r\n  </ul>\r\n);\r\n\r\n// 로그인 상태일 때 옵션 메뉴\r\nconst UserDropDown = ({ state, user, onLogout, isDarkTheme, currentPath }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <ProfileInfo user={user} />\r\n        <hr />\r\n        <OptionMenu isDarkTheme={isDarkTheme} />\r\n        <hr />\r\n        <LogoutMenu onLogout={onLogout} currentPath={currentPath} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\n// 비로그인 상태일 때 옵션 메뉴\r\nconst NoneUserDropDown = ({ state, isDarkTheme }) => {\r\n  return (\r\n    state && (\r\n      <div className=\"dropdown dropdown-menu dropdown-user-info\">\r\n        <OptionMenu isDarkTheme={isDarkTheme} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\n// 검색 input과 액션 버튼을 패키징\r\nconst SearchInputPackage = ({\r\n  type,\r\n  searchQuery,\r\n  handleSearchInput,\r\n  handleSearchKeyUp,\r\n}) => (\r\n  <div className={type} tabIndex=\"-1\">\r\n    <SearchInputWrapper>\r\n      <SearchInput\r\n        placeholder=\"검색\"\r\n        value={searchQuery}\r\n        onChange={handleSearchInput}\r\n        onKeyUp={(event) => {\r\n          if (event.keyCode === 13) {\r\n            handleSearchKeyUp(searchQuery);\r\n          }\r\n        }}\r\n      />\r\n    </SearchInputWrapper>\r\n    <SearchBtn to={`/search?query=${searchQuery}`}>\r\n      <FontAwesomeIcon icon=\"search\" />\r\n    </SearchBtn>\r\n  </div>\r\n);\r\n\r\n// Header는 position 처리했으므로 공간을 띄워준다\r\nconst Spacer = styled.div`\r\n  height: 3rem;\r\n`;\r\n\r\nconst Header = ({\r\n  user,\r\n  onLogout,\r\n  isDarkTheme,\r\n  currentPath,\r\n  searchQuery,\r\n  handleSearchInput,\r\n  handleSearchKeyUp,\r\n}) => {\r\n  library.add([faSearch, faEllipsisH, faEllipsisV, faUserCircle]);\r\n  // 드롭다운 관련 핸들러\r\n  const [etc, setEtc] = useState(false);\r\n  const [search, setSearch] = useState(false);\r\n  const [userinfo, setUserinfo] = useState(false);\r\n  const [noneuser, setNoneUser] = useState(false);\r\n  const handleEtcToggle = () => {\r\n    setEtc((prevOpen) => !prevOpen);\r\n  };\r\n  const handleEtcClose = () => {\r\n    setEtc(false);\r\n  };\r\n  const handleSearchToggle = () => {\r\n    setSearch((prevOpen) => !prevOpen);\r\n  };\r\n  const handleSearchClose = () => {\r\n    setSearch(false);\r\n  };\r\n  const handleUserInfoToggle = () => {\r\n    setUserinfo((prevOpen) => !prevOpen);\r\n  };\r\n  const handleUserInfoClose = () => {\r\n    setUserinfo(false);\r\n  };\r\n  const handleNoneUserToggle = () => {\r\n    setNoneUser((prevOpen) => !prevOpen);\r\n  };\r\n  const handleNoneUserClose = () => {\r\n    setNoneUser(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <div className=\"header-left\">\r\n          <Link to=\"/\" className=\"logo\">\r\n            MAKE UP HARA\r\n          </Link>\r\n          <div className=\"menu\">\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/w\">WIKI</Link>\r\n            </Menu>\r\n            <Menu className=\"main-menu\">\r\n              <Link to=\"/blog\">Blog</Link>\r\n            </Menu>\r\n            <ClickAwayListener onClickAway={handleEtcClose}>\r\n              <Menu>\r\n                <Link\r\n                  to={currentPath}\r\n                  onClick={handleEtcToggle}\r\n                  aria-haspopup=\"true\"\r\n                >\r\n                  <FontAwesomeIcon icon=\"ellipsis-h\" />\r\n                </Link>\r\n                <MemoizedEtcDropDown state={etc} />\r\n              </Menu>\r\n            </ClickAwayListener>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-mid\">\r\n          <SearchResponsive>\r\n            <SearchInputPackage\r\n              type=\"search-input\"\r\n              searchQuery={searchQuery}\r\n              handleSearchInput={handleSearchInput}\r\n              handleSearchKeyUp={handleSearchKeyUp}\r\n            />\r\n          </SearchResponsive>\r\n        </div>\r\n        <div className=\"header-rigit\">\r\n          <SearchResponsive\r\n            style={{\r\n              display: 'inherit',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <ClickAwayListener onClickAway={handleSearchClose}>\r\n              <div className=\"search-btn\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleSearchToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"search\" />\r\n                </Link>\r\n                <SearchDropDown state={search} currentPath={currentPath} />\r\n              </div>\r\n            </ClickAwayListener>\r\n          </SearchResponsive>\r\n          {user ? (\r\n            <ClickAwayListener onClickAway={handleUserInfoClose}>\r\n              <div className=\"user-info\">\r\n                <Link\r\n                  to={currentPath}\r\n                  aria-haspopup=\"true\"\r\n                  onClick={handleUserInfoToggle}\r\n                >\r\n                  <FontAwesomeIcon icon=\"user-circle\" size=\"lg\" />\r\n                </Link>\r\n                <UserDropDown\r\n                  state={userinfo}\r\n                  user={user}\r\n                  onLogout={onLogout}\r\n                  isDarkTheme={isDarkTheme}\r\n                  currentPath={currentPath}\r\n                />\r\n              </div>\r\n            </ClickAwayListener>\r\n          ) : (\r\n            <div className=\"none-user\">\r\n              <ClickAwayListener onClickAway={handleNoneUserClose}>\r\n                <div className=\"\">\r\n                  <Link to={currentPath} onClick={handleNoneUserToggle}>\r\n                    <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n                  </Link>\r\n                  <NoneUserDropDown\r\n                    state={noneuser}\r\n                    isDarkTheme={isDarkTheme}\r\n                  />\r\n                </div>\r\n              </ClickAwayListener>\r\n              <Button className=\"btn-sign-in\" transparent=\"true\" to=\"/login\">\r\n                로그인\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../module/redux/user';\r\nimport Header from '../../components/common/Header';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { changeInput } from '../../module/redux/search';\r\nimport loadable from '@loadable/component';\r\n\r\nconst AuthTemplate = loadable(() =>\r\n  import('../../components/auth/AuthTemplate'),\r\n);\r\nconst LoginForm = loadable(() => import('../../containers/auth/LoginForm'), {});\r\nconst RegisterForm = loadable(() =>\r\n  import('../../containers/auth/RegisterForm'),\r\n);\r\n\r\nconst HeaderContainer = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { user, isDarkTheme, searchQuery } = useSelector(\r\n    ({ user, theme, search }) => ({\r\n      user: user.user,\r\n      isDarkTheme: theme.isDarkTheme,\r\n      searchQuery: search.query,\r\n    }),\r\n  );\r\n\r\n  const currentPath = location.pathname + location.search;\r\n  const onLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const handleSearchKeyUp = (searchQuery) => {\r\n    history.push(`/search?query=${searchQuery}`);\r\n  };\r\n\r\n  const handleSearchInput = (event) => {\r\n    dispatch(changeInput(event.target.value));\r\n  };\r\n\r\n  // 사용자 인증 관련 컴포넌트를 미리 로딩\r\n  useEffect(() => {\r\n    AuthTemplate.preload();\r\n    LoginForm.preload();\r\n    RegisterForm.preload();\r\n  }, []);\r\n\r\n  return (\r\n    <Header\r\n      user={user}\r\n      onLogout={onLogout}\r\n      isDarkTheme={isDarkTheme}\r\n      currentPath={currentPath}\r\n      searchQuery={searchQuery}\r\n      handleSearchInput={handleSearchInput}\r\n      handleSearchKeyUp={handleSearchKeyUp}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(HeaderContainer);\r\n","import styled from 'styled-components';\r\n\r\n/**\r\n * 다크모드 활성화에 따른 배경색 변경을 위한 컴포넌트\r\n */\r\n\r\nconst BodyBlock = styled.div`\r\n  position: fixed;\r\n  top: ${(props) => (props.includeHeader ? '3rem' : 0)};\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: ${({ theme }) => theme.body};\r\n  z-index: -1;\r\n`;\r\n\r\nexport default BodyBlock;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst MainContainer = loadable(() =>\r\n  import('../../containers/main/MainContainer'),\r\n);\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <MainContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport loadable from '@loadable/component';\r\n\r\nconst EditorContainer = loadable(() =>\r\n  import('../../containers/post/write/EditorContainer'),\r\n);\r\nconst TagBoxContainer = loadable(() =>\r\n  import('../../containers/post/write/TagBoxContainer'),\r\n);\r\nconst WriteActionButtonsContainer = loadable(() =>\r\n  import('../../containers/post/write/WriteActionButtonsContainer'),\r\n);\r\nconst EditorFooter = loadable(() =>\r\n  import('../../components/common/editor/EditorFooter'),\r\n);\r\n\r\nconst PostWritePage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>POST 작성 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <TagBoxContainer />\r\n      <WriteActionButtonsContainer />\r\n      <EditorFooter />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(PostWritePage);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PostViewerContainer = loadable(() =>\r\n  import('../../containers/post/PostViewerContainer'),\r\n);\r\n\r\nconst PostPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst PostListContainer = loadable(() =>\r\n  import('../../containers/post/PostListContainer'),\r\n);\r\n\r\nconst PostListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <PostListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostListPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport LoginForm from '../../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>로그인 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <LoginForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport AuthTemplate from '../../components/auth/AuthTemplate';\r\nimport RegisterForm from '../../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <AuthTemplate>\r\n      <Helmet>\r\n        <title>회원가입 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <RegisterForm />\r\n    </AuthTemplate>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithNaver } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithNaverPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, state, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_NAVER_CLIENT_SECRET;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithNaver({ client_id, client_secret, code, state }));\r\n  }, [dispatch, client_id, client_secret, code, state]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithNaverPage);\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginWithKakao } from '../../../module/redux/auth';\r\nimport { check } from '../../../module/redux/user';\r\n\r\nconst LoginWithKakaoPage = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n  const { auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n  const { code, error } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  if (error) {\r\n    history.replace('/login');\r\n  }\r\n  const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n  const client_secret = process.env.REACT_APP_KAKAO_CLIENT_SECRET;\r\n  const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n\r\n  useEffect(() => {\r\n    dispatch(loginWithKakao({ client_id, client_secret, redirect_uri, code }));\r\n  }, [dispatch, client_id, client_secret, code, redirect_uri]);\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n    if (authError) {\r\n      history.replace('/login');\r\n    }\r\n  }, [dispatch, auth, authError, history]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      try {\r\n        sessionStorage.setItem('user', JSON.stringify(user));\r\n        history.replace('/');\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n  }, [user, history]);\r\n  return (\r\n    <>\r\n      <div />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginWithKakaoPage);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst WikiViewerContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiViewerContainer'),\r\n);\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\n\r\nconst WikiPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiViewerContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiPage;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Responsive from '../../components/common/Responsive';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst EditorContainer = loadable(() =>\r\n  import('../../containers/wiki/edit/EditorContainer'),\r\n);\r\nconst EditorFooter = loadable(() =>\r\n  import('../../components/common/editor/EditorFooter'),\r\n);\r\nconst WriteActionButtonsContainer = loadable(() =>\r\n  import('../../containers/wiki/edit/WriteActionButtonsContainer'),\r\n);\r\n\r\nconst WikiEditPage = ({ history }) => {\r\n  const { user } = useSelector(({ user }) => ({ user: user.user }));\r\n  if (!user) {\r\n    history.replace('/login');\r\n  }\r\n  return (\r\n    <Responsive>\r\n      <Helmet>\r\n        <title>WIKI 에디터 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <BodyBlock />\r\n      <EditorContainer />\r\n      <EditorFooter type=\"wiki\" />\r\n      <WriteActionButtonsContainer />\r\n    </Responsive>\r\n  );\r\n};\r\n\r\nexport default withRouter(WikiEditPage);\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst WikiRequestContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiRequestContainer'),\r\n);\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\n\r\nconst WikiRequestPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>작성이 필요한 문서 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiRequestContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiRequestPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\nconst WikiHistoryContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiHistoryContainer'),\r\n);\r\n\r\nconst WikiHistoryPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>문서 역사 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiHistoryContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiHistoryPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst WikiSearchContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiSearchContainer'),\r\n);\r\nconst WikiListContainer = loadable(() =>\r\n  import('../../containers/wiki/WikiListContainer'),\r\n);\r\n\r\nconst WikiListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <WikiSearchContainer />\r\n      <WikiListContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WikiListPage;\r\n","import styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\n\r\n/**\r\n * 최상의 flex 컴포넌트\r\n */\r\n\r\nconst FlexContentBlock = styled(Responsive)`\r\n  display: flex;\r\n  flex-direction: ${(props) =>\r\n    props.direction === 'column' ? 'column' : 'row'};\r\n`;\r\n\r\nexport default FlexContentBlock;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\nconst ProfileContainer = loadable(() =>\r\n  import('../../containers/profile/ProfileContainer'),\r\n);\r\n\r\nconst MyPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>MY PAGE - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ProfileContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst SecurityContainer = loadable(() =>\r\n  import('../../containers/profile/SecurityContainer'),\r\n);\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\n\r\nconst SecurityPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>보안 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <SecurityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SecurityPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport FlexContentBlock from '../../components/common/FlexContentBlock';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport loadable from '@loadable/component';\r\n\r\nconst MyPageMenuContainer = loadable(() =>\r\n  import('../../containers/profile/MyPageMenuContainer'),\r\n);\r\nconst ActivityContainer = loadable(() =>\r\n  import('../../containers/profile/ActivityContainer'),\r\n);\r\n\r\nconst ActivityPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>활동 기록 - MAKE UP HARA</title>\r\n      </Helmet>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <FlexContentBlock>\r\n        <MyPageMenuContainer />\r\n        <ActivityContainer />\r\n      </FlexContentBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityPage;\r\n","import React from 'react';\r\nimport HeaderContainer from '../../containers/common/HeaderContainer';\r\nimport BodyBlock from '../../components/common/BodyBlock';\r\nimport loadable from '@loadable/component';\r\n\r\nconst LocalSearchContainer = loadable(() =>\r\n  import('../../containers/search/LocalSearchContainer'),\r\n);\r\n\r\nconst LocalSearchPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <BodyBlock includeHeader />\r\n      <LocalSearchContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LocalSearchPage;\r\n","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme } from './lib/styles/theme';\nimport { darkTheme } from './lib/styles/theme';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setTheme } from './module/redux/theme';\nimport { Helmet } from 'react-helmet-async';\nimport MainPage from './pages/main/MainPage';\nimport PostWritePage from './pages/post/PostWritePage';\nimport PostPage from './pages/post/PostPage';\nimport PostListPage from './pages/post/PostListPage';\nimport LoginPage from './pages/auth/LoginPage';\nimport RegisterPage from './pages/auth/RegisterPage';\nimport LoginWithNaverPage from './pages/auth/callback/LoginWithNaverPage';\nimport LoginWithKakaoPage from './pages/auth/callback/LoginWithKakaoPage';\nimport WikiPage from './pages/wiki/WikiPage';\nimport WikiEditPage from './pages/wiki/WikiEditPage';\nimport WikiRequestPage from './pages/wiki/WikiRequestPage';\nimport WikiHistoryPage from './pages/wiki/WikiHistoryPage';\nimport WikiListPage from './pages/wiki/WikiListPage';\nimport MyPage from './pages/profile/MyPage';\nimport SecurityPage from './pages/profile/SecurityPage';\nimport ActivityPage from './pages/profile/ActivityPage';\nimport LocalSearchPage from './pages/search/LocalSearchPage';\n\nconst App = () => {\n  const { isDarkTheme } = useSelector(({ theme }) => ({\n    isDarkTheme: theme.isDarkTheme,\n  }));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      const storageTheme = localStorage.getItem('darkTheme');\n      if (storageTheme === 'true') {\n        dispatch(setTheme(true));\n      }\n    } catch (error) {\n      throw error;\n    }\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n      <>\n        <Helmet>\n          <title>MAKE UP HARA</title>\n        </Helmet>\n        <Route component={MainPage} path={['/']} exact />\n        <Route component={LoginPage} path={'/login'} exact />\n        <Route component={LoginWithNaverPage} path={'/login/naver'} />\n        <Route component={LoginWithKakaoPage} path={'/login/kakao'} />\n        <Route component={RegisterPage} path={'/register'} />\n        <Route\n          component={PostListPage}\n          path={['/blog', '/blog/@:username']}\n          exact\n        />\n        <Route component={PostWritePage} path={'/blog/write'} />\n        <Route component={PostPage} path={'/blog/@:username/:postId'} exact />\n        <Route component={WikiPage} path={['/w', '/w/:docName']} exact />\n        <Route component={WikiEditPage} path={'/wiki/edit'} exact />\n        <Route component={WikiRequestPage} path={'/wiki/request'} exact />\n        <Route\n          component={WikiHistoryPage}\n          path={'/wiki/history/:docName'}\n          exact\n        />\n        <Route component={WikiListPage} path={'/wiki/list'} exact />\n        <Route component={MyPage} path={'/mypage'} exact />\n        <Route component={SecurityPage} path={'/mypage/security'} exact />\n        <Route component={ActivityPage} path={'/mypage/activity'} exact />\n        <Route component={LocalSearchPage} path={'/search'} exact />\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport loading from './loading';\r\nimport auth, { authSaga } from './auth';\r\nimport user, { userSaga } from './user';\r\nimport post, { postSaga } from './post';\r\nimport wiki, { wikiSaga } from './wiki';\r\nimport theme from './theme';\r\nimport search from './search';\r\n\r\n/* root reducer */\r\nconst rootReducer = combineReducers({\r\n  loading,\r\n  auth,\r\n  user,\r\n  theme,\r\n  post,\r\n  wiki,\r\n  search,\r\n});\r\n\r\n/* root saga */\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), postSaga(), wikiSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer, { rootSaga } from './module/redux/index';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { tempSetUser, check } from './module/redux/user';\nimport { HelmetProvider } from 'react-helmet-async';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n  // applyMiddleware(sagaMiddleware);\n);\n\nsagaMiddleware.run(rootSaga);\nconst loadUser = () => {\n  try {\n    const user = sessionStorage.getItem('user');\n    if (!user) return;\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (error) {\n    throw error;\n  }\n};\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, debounce } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n  'auth/REGISTER',\r\n);\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n  'auth/LOGIN',\r\n);\r\nconst [\r\n  LOGIN_WITH_GOOGLE,\r\n  LOGIN_WITH_GOOGLE_SUCCESS,\r\n  LOGIN_WITH_GOOGLE_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_GOOGLE');\r\nconst [\r\n  LOGIN_WITH_NAVER,\r\n  LOGIN_WITH_NAVER_SUCCESS,\r\n  LOGIN_WITH_NAVER_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_NAVER');\r\nconst [\r\n  LOGIN_WITH_KAKAO,\r\n  LOGIN_WITH_KAKAO_SUCCESS,\r\n  LOGIN_WITH_KAKAO_FAILURE,\r\n] = createRequestActionTypes('auth/LOGIN_WITH_KAKAO');\r\n// api - check username\r\nconst [\r\n  CHECK_EXIST_USERNAME,\r\n  CHECK_EXIST_USERNAME_SUCCESS,\r\n  CHECK_EXIST_USERNAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_USERNAME');\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('auth/CHECK_EXIST_NAME');\r\n\r\n/* action */\r\nexport const changeFieid = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({\r\n    form, // register, login\r\n    key, // username, password, passwordConfirm\r\n    value, // 변경 하려는 값\r\n  }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form);\r\nexport const register = createAction(\r\n  REGISTER,\r\n  ({ username, password, name }) => ({\r\n    username,\r\n    password,\r\n    name,\r\n  }),\r\n);\r\nexport const login = createAction(LOGIN, ({ username, password }) => ({\r\n  username,\r\n  password,\r\n}));\r\nexport const loginWithGoogle = createAction(\r\n  LOGIN_WITH_GOOGLE,\r\n  ({ id_token }) => ({ id_token }),\r\n);\r\nexport const loginWithNaver = createAction(\r\n  LOGIN_WITH_NAVER,\r\n  ({ client_id, client_secret, code, state }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  }),\r\n);\r\nexport const loginWithKakao = createAction(\r\n  LOGIN_WITH_KAKAO,\r\n  ({ client_id, client_secret, code, redirect_uri }) => ({\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  }),\r\n);\r\nexport const checkExistUsername = createAction(\r\n  CHECK_EXIST_USERNAME,\r\n  (username) => username,\r\n);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\n\r\n/* redux-saga */\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nconst loginWithGoogleSaga = createRequestSaga(\r\n  LOGIN_WITH_GOOGLE,\r\n  authAPI.loginWithGoogle,\r\n);\r\nconst loginWithNaverSaga = createRequestSaga(\r\n  LOGIN_WITH_NAVER,\r\n  authAPI.loginWithNaver,\r\n);\r\nconst loginWithKakaoSaga = createRequestSaga(\r\n  LOGIN_WITH_KAKAO,\r\n  authAPI.loginWithKakao,\r\n);\r\nconst checkExistUsernameSaga = createRequestSaga(\r\n  CHECK_EXIST_USERNAME,\r\n  userAPI.checkExistUsername,\r\n);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(LOGIN_WITH_GOOGLE, loginWithGoogleSaga);\r\n  yield takeLatest(LOGIN_WITH_NAVER, loginWithNaverSaga);\r\n  yield takeLatest(LOGIN_WITH_KAKAO, loginWithKakaoSaga);\r\n  yield debounce(500, CHECK_EXIST_USERNAME, checkExistUsernameSaga);\r\n  yield debounce(500, CHECK_EXIST_NAME, checkExistNameSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  register: {\r\n    username: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    name: '',\r\n  },\r\n  login: {\r\n    username: '',\r\n    password: '',\r\n  },\r\n  checkExistUsernameResult: null,\r\n  checkExistUsernameResultError: null,\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  auth: null,\r\n  authError: null,\r\n  registerResult: null,\r\n  registerResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst auth = handleActions(\r\n  {\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\r\n      ...state,\r\n      [form]: initialState[form],\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n      registerResult: null,\r\n      registerResultError: null, // 폼 전환 시 회원인증 에러 초기화\r\n    }),\r\n    [REGISTER_SUCCESS]: (state, { payload: registerResult }) => ({\r\n      ...state,\r\n      registerResultError: null,\r\n      registerResult,\r\n    }),\r\n    [REGISTER_FAILURE]: (state, { payload: registerResultError }) => ({\r\n      ...state,\r\n      registerResultError,\r\n    }),\r\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_GOOGLE_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_NAVER_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_NAVER_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_SUCCESS]: (state, { payload: auth }) => ({\r\n      ...state,\r\n      authError: null,\r\n      auth,\r\n    }),\r\n    [LOGIN_WITH_KAKAO_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      authError: error,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_SUCCESS]: (\r\n      state,\r\n      { payload: checkExistUsernameResult },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult,\r\n      checkExistUsernameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_USERNAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistUsernameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistUsernameResult: null,\r\n      checkExistUsernameResultError,\r\n    }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default auth;\r\n","import {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport { createAction, handleActions } from 'redux-actions';\r\nimport * as authAPI from '../../lib/api/auth';\r\nimport * as userAPI from '../../lib/api/user';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\r\n  'user/CHECK',\r\n);\r\nconst LOGOUT = 'user/LOGOUT';\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\n// api - check name\r\nconst [\r\n  CHECK_EXIST_NAME,\r\n  CHECK_EXIST_NAME_SUCCESS,\r\n  CHECK_EXIST_NAME_FAILURE,\r\n] = createRequestActionTypes('user/CHECK_EXIST_NAME');\r\nconst CHANGE_FIELD = 'user/CHANGE_FIELD';\r\n// api- update name\r\nconst [\r\n  UPDATE_NAME,\r\n  UPDATE_NAME_SUCCESS,\r\n  UPDATE_NAME_FAILURE,\r\n] = createRequestActionTypes('user/UPDATE_NAME');\r\nconst INITIALIZE_UPDATE_NAME = 'user/INITIALIZE_UPDATE_NAME';\r\n// api - change password\r\nconst [\r\n  CHANGE_PASSWORD,\r\n  CHANGE_PASSWORD_SUCCESS,\r\n  CHANGE_PASSWORD_FAILURE,\r\n] = createRequestActionTypes('user/CHANGE_PASSWORD');\r\nconst INITIALIZE_CHANGE_PASSWORD = 'user/INITIALIZE_CHANGE_PASSWORD';\r\n\r\n/* action */\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\nexport const tempSetUser = createAction(TEMP_SET_USER);\r\nexport const checkExistName = createAction(\r\n  CHECK_EXIST_NAME,\r\n  ({ username, name }) => ({ username, name }),\r\n);\r\nexport const changeField = createAction(\r\n  CHANGE_FIELD,\r\n  ({ form, key, value }) => ({ form, key, value }),\r\n);\r\nexport const updateName = createAction(UPDATE_NAME, ({ id, name }) => ({\r\n  id,\r\n  name,\r\n}));\r\nexport const initializeUpdateName = createAction(INITIALIZE_UPDATE_NAME);\r\nexport const changePassword = createAction(\r\n  CHANGE_PASSWORD,\r\n  ({ id, password, newPassword }) => ({ id, password, newPassword }),\r\n);\r\nexport const initializeChangePassword = createAction(\r\n  INITIALIZE_CHANGE_PASSWORD,\r\n);\r\n\r\n/* redux-saga */\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\nconst checkExistNameSaga = createRequestSaga(\r\n  CHECK_EXIST_NAME,\r\n  userAPI.checkExistName,\r\n);\r\nconst updateNameSaga = createRequestSaga(UPDATE_NAME, userAPI.updateName);\r\nconst changePasswordSaga = createRequestSaga(\r\n  CHANGE_PASSWORD,\r\n  userAPI.changePassword,\r\n);\r\n\r\nconst checkFailureSaga = () => {\r\n  try {\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    sessionStorage.removeItem('user');\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n  yield takeLatest(CHECK_EXIST_NAME, checkExistNameSaga);\r\n  yield takeLatest(UPDATE_NAME, updateNameSaga);\r\n  yield takeLatest(CHANGE_PASSWORD, changePasswordSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n  profile: {\r\n    name: '',\r\n  },\r\n  password: {\r\n    curPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n  checkExistNameResult: null,\r\n  checkExistNameResultError: null,\r\n  updateUser: null,\r\n  updateUserError: null,\r\n  changePasswordResult: null,\r\n  changePasswordError: null,\r\n};\r\n\r\n/* reducer */\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: (state) => ({\r\n      ...state,\r\n      user: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft[form][key] = value;\r\n      }),\r\n    [CHECK_EXIST_NAME_SUCCESS]: (state, { payload: checkExistNameResult }) => ({\r\n      ...state,\r\n      checkExistNameResult,\r\n    }),\r\n    [CHECK_EXIST_NAME_FAILURE]: (\r\n      state,\r\n      { payload: checkExistNameResultError },\r\n    ) => ({\r\n      ...state,\r\n      checkExistNameResultError,\r\n    }),\r\n    [UPDATE_NAME_SUCCESS]: (state, { payload: updateUser }) => ({\r\n      ...state,\r\n      updateUser,\r\n    }),\r\n    [UPDATE_NAME_FAILURE]: (state, { payload: updateUserError }) => ({\r\n      ...state,\r\n      updateUserError,\r\n    }),\r\n    [INITIALIZE_UPDATE_NAME]: (state) => ({\r\n      ...state,\r\n      updateUser: null,\r\n      updateUserError: null,\r\n      checkExistNameResult: null,\r\n      checkExistNameResultError: null,\r\n    }),\r\n    [CHANGE_PASSWORD_SUCCESS]: (state, { payload: changePasswordResult }) => ({\r\n      ...state,\r\n      changePasswordResult: !!changePasswordResult,\r\n    }),\r\n    [CHANGE_PASSWORD_FAILURE]: (state, { payload: changePasswordError }) => ({\r\n      ...state,\r\n      changePasswordResult: false,\r\n      changePasswordError,\r\n    }),\r\n    [INITIALIZE_CHANGE_PASSWORD]: (state) => ({\r\n      ...state,\r\n      changePasswordResult: null,\r\n      changePasswordError: null,\r\n      password: {\r\n        curPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n","import client from './client';\r\n\r\nexport const register = ({ username, password, name }) =>\r\n  client.post('/api/auth/register', { username, password, name });\r\n\r\nexport const login = ({ username, password }) =>\r\n  client.post('/api/auth/login', { username, password });\r\n\r\nexport const loginWithGoogle = ({ id_token }) =>\r\n  client.post('/api/auth/login/google', { id_token });\r\n\r\nexport const loginWithNaver = ({ client_id, client_secret, code, state }) =>\r\n  client.post('/api/auth/login/naver', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    state,\r\n  });\r\n\r\nexport const loginWithKakao = ({\r\n  client_id,\r\n  client_secret,\r\n  code,\r\n  redirect_uri,\r\n}) =>\r\n  client.post('/api/auth/login/kakao', {\r\n    client_id,\r\n    client_secret,\r\n    code,\r\n    redirect_uri,\r\n  });\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/open-color';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 소셜 로그인 버튼에서 css를 사용하기 위해 export\r\n * 소셜 로그인은 ref를 설정해주어야 하기 때문에 prop 전달이 어려움\r\n */\r\n\r\nexport const buttonStyle = css`\r\n  border: none;\r\n  border-radius: 2px;\r\n  font-size: 1rem;\r\n  font-family:'NanumBarunGothic';\r\n  font-weight: normal;\r\n  padding: 0.25rem 1rem;\r\n  color: ${({ theme }) => theme.btnText};\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: ${({ theme }) => theme.btnBody};\r\n\r\n  &:hover {\r\n    background: ${({ theme }) => theme.btnHoverBody};\r\n  }\r\n\r\n  &:disabled,\r\n  &[disabled] {\r\n    cursor: default;\r\n    background: ${({ theme }) => theme.btnDisableBody};\r\n    color: ${({ theme }) => theme.btnDisableColor};\r\n    &:hover{\r\n      background: ${({ theme }) => theme.btnDisableBody};\r\n    }\r\n  }\r\n\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      display: inline-block;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.indigo &&\r\n    css`\r\n      background: ${palette.indigo[9]};\r\n      &:hover {\r\n        background: ${palette.indigo[7]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.violet &&\r\n    css`\r\n      background: ${palette.violet[9]};\r\n      color: #fff;\r\n      &:hover {\r\n        background: ${palette.violet[7]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.red &&\r\n    css`\r\n      background: ${palette.red[8]};\r\n      &:hover {\r\n        background: ${palette.red[6]};\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[6]};\r\n      &:hover {\r\n        background: ${palette.cyan[4]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.yellow &&\r\n    css`\r\n      background: ${palette.yellow[5]};\r\n      &:hover {\r\n        background: ${palette.yellow[3]};\r\n      }\r\n    `}\r\n  ${(props) =>\r\n    props.transparent &&\r\n    css`\r\n      background: none;\r\n      color: ${({ theme }) => theme.text};\r\n      border: 1px solid ${({ theme }) => theme.text};\r\n      &:hover {\r\n        background: ${palette.gray[1]};\r\n        color: ${palette.gray[7]};\r\n      }\r\n    `}\r\n    \r\n  ${(props) =>\r\n    props.themeColor &&\r\n    css`\r\n      background: ${({ theme }) => theme.themeColorBody};\r\n      color: ${palette.gray[1]};\r\n      &:hover {\r\n        background: ${({ theme }) => theme.themeColorHoverBody};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  ${buttonStyle}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  return props.to ? <StyledLink {...props} /> : <StyledButton {...props} />;\r\n};\r\n\r\nexport default Button;\r\n","import client from './client';\r\n\r\nexport const checkExistUsername = ({ username }) =>\r\n  client.post('/api/user/check/username', { username });\r\n\r\nexport const checkExistName = ({ username, name }) =>\r\n  client.post('/api/user/check/name', { username, name });\r\n\r\nexport const updateName = ({ id, name }) =>\r\n  client.patch('/api/user/profile', { id, name });\r\n\r\nexport const changePassword = ({ id, password, newPassword }) =>\r\n  client.patch('/api/user/password', { id, password, newPassword });\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n/**\r\n * viewport에 따른 컨테이너 width 제어\r\n */\r\n\r\nconst ResponsiveBlock = styled.div`\r\n  padding: 0, 1rem;\r\n  width: 986px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 748px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    width: 98%;\r\n  }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest }) => {\r\n  return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>;\r\n};\r\n\r\nexport default Responsive;\r\n","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  requestType => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({ ...state, [action.payload]: true }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const writePost = ({ title, body, tags }) =>\r\n  client.post('/api/post/write', { title, body, tags });\r\n\r\nexport const readPost = (id) => client.get(`/api/post/${id}`);\r\n\r\nexport const updatePost = ({ id, title, body, tags }) =>\r\n  client.patch(`/api/post/${id}`, { title, body, tags });\r\n\r\nexport const removePost = (id) => client.delete(`/api/post/${id}`);\r\n\r\nexport const getList = ({ page, tag, username, query, block, oldest, day }) => {\r\n  const queryString = qs.stringify({\r\n    page,\r\n    tag,\r\n    username,\r\n    query,\r\n    block,\r\n    oldest,\r\n    day,\r\n  });\r\n  return client.get(`/api/post/list?${queryString}`);\r\n};\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport produce from 'immer';\r\n\r\n/* action type */\r\nconst CHANGE_INPUT = 'search/CHANGE_INPUT';\r\nconst CHANGE_OPTION = 'search/CHANGE_OPTION';\r\nconst INITIALIZE = 'search/INITIALIZE';\r\nconst INITIALIZE_OPTION = 'search/INITIALIZE_OPTION';\r\n\r\n/* action */\r\nexport const changeInput = createAction(CHANGE_INPUT, (value) => value);\r\nexport const changeOption = createAction(CHANGE_OPTION, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const initializeOption = createAction(INITIALIZE_OPTION);\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  query: '',\r\n  option: {\r\n    totalSort: '',\r\n    totalTerm: '',\r\n    wikiSort: '',\r\n    wikilength: '',\r\n    blogSort: '',\r\n    blogTerm: '',\r\n  },\r\n};\r\n\r\n/* reducer */\r\nconst search = handleActions(\r\n  {\r\n    [CHANGE_INPUT]: (state, { payload: value }) => ({ ...state, query: value }),\r\n    [CHANGE_OPTION]: (state, { payload: { key, value } }) =>\r\n      produce(state, (draft) => {\r\n        draft.option[key] = value;\r\n      }),\r\n    [INITIALIZE]: () => initialState,\r\n    [INITIALIZE_OPTION]: (state) => ({\r\n      ...state,\r\n      option: initialState.option,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default search;\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../module/redux/loading';\r\n\r\nexport const createRequestActionTypes = (type) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n  return [type, SUCCESS, FAILURE];\r\n};\r\n\r\nexport const createRequestSaga = (type, request) => {\r\n  const SUCCESS = `${type}_SUCCESS`;\r\n  const FAILURE = `${type}_FAILURE`;\r\n\r\n  return function* (action) {\r\n    yield put(startLoading(type));\r\n    try {\r\n      const response = yield call(request, action.payload);\r\n      yield put({\r\n        type: SUCCESS,\r\n        payload: response.data,\r\n        meta: response,\r\n      });\r\n    } catch (error) {\r\n      yield put({\r\n        type: FAILURE,\r\n        payload: error,\r\n        error: true,\r\n      });\r\n    }\r\n    yield put(finishLoading(type));\r\n  };\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * 로그인/회원가입 공통 컴포넌트\r\n */\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: ${({ theme }) => theme.loginBody};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ContentBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    text-align: center;\r\n    padding-bottom: 2rem;\r\n    font-size: 1.25rem;\r\n    letter-spacing: 1px;\r\n  }\r\n  .logo-area > a {\r\n    color: ${({ theme }) => theme.text};\r\n  }\r\n  .logo-area > a:hover {\r\n    color: ${({ theme }) => theme.hoverText};\r\n  }\r\n  box-shadow: 0 0 8px\r\n    ${({ theme }) =>\r\n      theme.body === '#fff' ? 'rgba(0, 0, 0, 0.25)' : 'rgba(0, 0, 0, 0.5)'};\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: ${({ theme }) => theme.body};\r\n  border-radius: 2px;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <ContentBox>\r\n        <div className=\"logo-area\">\r\n          <Link to=\"/\">MAKE UP HARA</Link>\r\n        </div>\r\n        {children}\r\n      </ContentBox>\r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React, { useEffect, useRef, useCallback } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Button, { buttonStyle } from '../common/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\nimport palette from '../../lib/styles/open-color';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${({ theme }) => theme.text};\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n  hr {\r\n    border: 0.5px solid ${({ theme }) => theme.loginInputBorder};\r\n  }\r\n  .social-login {\r\n    button + a {\r\n      margin-top: 0.5rem;\r\n    }\r\n    a + button {\r\n      margin-top: 0.5rem;\r\n    }\r\n  }\r\n  input.possible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputValid};\r\n  }\r\n  input.impossible {\r\n    border-bottom: 2px solid ${({ theme }) => theme.profileInputInValid};\r\n  }\r\n  .invalid-message {\r\n    color: ${({ theme }) => theme.errorText};\r\n    font-size: 0.75rem;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 2px solid ${({ theme }) => theme.loginInputBorder};\r\n  padding-bottom: 0.5rem;\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    border-bottom: 2px solid ${({ theme }) => theme.loginInputBorderFocus};\r\n    -webkit-transition: all 0.3s ease;\r\n    transition: all 0.3s ease;\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    font-family: 'NanumBarunGothic';\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  margin-top: 1rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${({ theme }) => theme.text};\r\n    &:hover {\r\n      color: ${({ theme }) => theme.hoverText};\r\n      text-decoration: underline !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst GoogleLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  border-radius: 0.375rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst socialBtnStyle = css`\r\n  border: none;\r\n  padding: 0;\r\n  display: block;\r\n  border-radius: 0.5rem;\r\n  img {\r\n    width: 100%;\r\n    display: flex;\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NaverLoginButton = styled.a`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst KakaoLoginButton = styled.button`\r\n  ${buttonStyle}\r\n  ${socialBtnStyle}\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  signinGoogle: '구글로 로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${palette.red[9]};\r\n  text-align: center;\r\n  font-size: 0.75rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({\r\n  type,\r\n  form,\r\n  onChange,\r\n  onSubmit,\r\n  error,\r\n  onSocialLogin,\r\n  validUsername,\r\n  validName,\r\n}) => {\r\n  const text = textMap[type];\r\n\r\n  // Login with Google\r\n  const googleLoginBtn = useRef(null);\r\n  const auth2 = useRef(null);\r\n\r\n  // Config Google Login API\r\n  const loadGoogleLoginApi = useCallback(() => {\r\n    // 로그인 버튼 이벤트 주입\r\n    const prepareLoginButton = () => {\r\n      auth2.current.attachClickHandler(\r\n        googleLoginBtn.current,\r\n        {},\r\n        (googleUser) => {\r\n          // const profile = googleUser.getBasicProfile();\r\n          // console.log('Token || ' + googleUser.getAuthResponse().id_token);\r\n          // console.log('ID: ' + profile.getId());\r\n          // console.log('Name: ' + profile.getName());\r\n          // console.log('Image URL: ' + profile.getImageUrl());\r\n          // console.log('Email: ' + profile.getEmail());\r\n\r\n          const id_token = googleUser.getAuthResponse().id_token;\r\n          onSocialLogin({ id_token });\r\n        },\r\n        (error) => {\r\n          // console.log(JSON.stringify(error, undefined, 2));\r\n        },\r\n      );\r\n    };\r\n\r\n    window['googleSDKLoaded'] = () => {\r\n      window['gapi'].load('auth2', () => {\r\n        auth2.current = window['gapi'].auth2.init({\r\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID,\r\n          cookiepolicy: 'single_host_origin',\r\n          scope: 'profile email',\r\n        });\r\n        prepareLoginButton();\r\n      });\r\n    };\r\n  }, [onSocialLogin]);\r\n\r\n  // 네이버 로그인 클릭 이벤트\r\n  const onNaverLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_NAVER_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_NAVER_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_NAVER_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://nid.naver.com/oauth2.0/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // 카카오 로그인 클릭 이벤트\r\n  const onKakaoLoginClick = useCallback(() => {\r\n    const client_id = process.env.REACT_APP_KAKAO_CLIENT_ID;\r\n    const redirect_uri = process.env.REACT_APP_KAKAO_LOGIN_REDIRECT_URI;\r\n    const state = process.env.REACT_APP_KAKAO_LOGIN_STATE;\r\n    let requestUrl =\r\n      'https://kauth.kakao.com/oauth/authorize?response_type=code';\r\n    requestUrl += '&client_id=' + client_id;\r\n    requestUrl += '&redirect_uri=' + redirect_uri;\r\n    requestUrl += '&state=' + state;\r\n    window.location = requestUrl;\r\n  }, []);\r\n\r\n  // Load Script\r\n  const loadScript = useCallback((document, script, id, srcValue) => {\r\n    const referenceNode = document.getElementsByTagName(script)[0];\r\n    if (document.getElementById(id)) {\r\n      return;\r\n    }\r\n    const googlejssdkNode = document.createElement(script);\r\n    googlejssdkNode.id = id;\r\n    googlejssdkNode.src = srcValue;\r\n    referenceNode.parentNode.insertBefore(googlejssdkNode, referenceNode);\r\n  }, []);\r\n\r\n  // 언마운트시 API 스크립트 제거\r\n  const removeApiScript = useCallback(() => {\r\n    const removeTag = (tagName, targetId) => {\r\n      const targetNode = document.getElementsByTagName(tagName);\r\n      [...targetNode].map(\r\n        (node) =>\r\n          node.src.indexOf(targetId) >= 0 && node.parentNode.removeChild(node),\r\n      );\r\n    };\r\n\r\n    removeTag('script', 'apis.google.com');\r\n\r\n    const removeJssdk = (id) => {\r\n      const sdkNode = document.getElementById(id);\r\n      if (sdkNode) {\r\n        sdkNode.parentNode.removeChild(sdkNode);\r\n      }\r\n    };\r\n\r\n    removeJssdk('google-jssdk');\r\n  }, []);\r\n\r\n  // 컴포넌트 업데이트시 소셜로그인 스크립트 로딩\r\n  // 언마운트시 스크립트 제거\r\n  useEffect(() => {\r\n    loadScript(\r\n      document,\r\n      'script',\r\n      'google-jssdk',\r\n      'https://apis.google.com/js/platform.js?onload=googleSDKLoaded',\r\n    );\r\n    loadGoogleLoginApi();\r\n\r\n    return () => {\r\n      removeApiScript();\r\n    };\r\n  }, [loadScript, removeApiScript, loadGoogleLoginApi]);\r\n\r\n  return (\r\n    <AuthFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          className={\r\n            type === 'register' &&\r\n            (validUsername.result === true\r\n              ? 'possible'\r\n              : validUsername.message !== '' && 'impossible')\r\n          }\r\n          name=\"username\"\r\n          placeholder=\"계정 이름\"\r\n          value={form.username}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' &&\r\n          validUsername.message &&\r\n          validUsername.message !== '' && (\r\n            <span className=\"invalid-message\">{validUsername.message}</span>\r\n          )}\r\n        <StyledInput\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          className={\r\n            type === 'register' &&\r\n            (form.password.length >= 8\r\n              ? 'possible'\r\n              : form.password !== '' && 'impossible')\r\n          }\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={form.password}\r\n          onChange={onChange}\r\n        />\r\n        {type === 'register' &&\r\n          form.password.length < 8 &&\r\n          form.password.length > 0 && (\r\n            <span className=\"invalid-message\">8자 이상 입력해야 합니다.</span>\r\n          )}\r\n        {type === 'register' && (\r\n          <>\r\n            <StyledInput\r\n              type=\"password\"\r\n              autoComplete=\"new-password\"\r\n              className={\r\n                form.passwordConfirm.length >= 8 &&\r\n                form.passwordConfirm === form.password\r\n                  ? 'possible'\r\n                  : form.passwordConfirm !== '' && 'impossible'\r\n              }\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"비밀번호 확인\"\r\n              value={form.passwordConfirm}\r\n              onChange={onChange}\r\n            />\r\n            {form.passwordConfirm.length >= 8 &&\r\n              form.passwordConfirm !== form.password && (\r\n                <span className=\"invalid-message\">\r\n                  비밀번호가 일치하지 않습니다.\r\n                </span>\r\n              )}\r\n            <StyledInput\r\n              type=\"text\"\r\n              className={\r\n                type === 'register' &&\r\n                (validName.result === true\r\n                  ? 'possible'\r\n                  : validName.message !== '' && 'impossible')\r\n              }\r\n              name=\"name\"\r\n              placeholder=\"활동명\"\r\n              value={form.name}\r\n              onChange={onChange}\r\n            />\r\n            {type === 'register' &&\r\n              validName.message &&\r\n              validName.message !== '' && (\r\n                <span className=\"invalid-message\">{validName.message}</span>\r\n              )}\r\n          </>\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonWithMarginTop cyan fullWidth>\r\n          {text}\r\n        </ButtonWithMarginTop>\r\n      </form>\r\n      {type === 'login' && (\r\n        <div className=\"social-login\">\r\n          <hr />\r\n          <GoogleLoginButton fullWidth indigo ref={googleLoginBtn}>\r\n            <FontAwesomeIcon icon={faGoogle} />\r\n            {' ' + textMap['signinGoogle']}\r\n            <span> </span>\r\n          </GoogleLoginButton>\r\n          <NaverLoginButton transparent onClick={() => onNaverLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/naver_login_btn.png'}\r\n              alt=\"naver-login-btn\"\r\n            />\r\n          </NaverLoginButton>\r\n          <KakaoLoginButton transparent onClick={() => onKakaoLoginClick()}>\r\n            <img\r\n              src={process.env.PUBLIC_URL + '/images/auth/kakao_login_btn.png'}\r\n              alt=\"kakao-login-btn\"\r\n            />\r\n          </KakaoLoginButton>\r\n          <hr />\r\n        </div>\r\n      )}\r\n\r\n      <Footer>\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Footer>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as wikiAPI from '../../lib/api/wiki';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// api - request list\r\nconst [\r\n  GET_REQUEST_LIST,\r\n  GET_REQUEST_LIST_SUCCESS,\r\n  GET_REQUEST_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_REQUEST_LIST');\r\n// edit - set title\r\nconst SET_TITLE = createRequestActionTypes('wiki/SET_TITLE');\r\n// edit - initialize\r\nconst INITIALIZE = 'wiki/INITIALIZE';\r\n// edit - change field\r\nconst CHANGE_FIELD = 'wiki/CHANGE_FIELD';\r\n// edit - write document\r\nconst [\r\n  WRITE_DOCUMENT,\r\n  WRITE_DOCUMENT_SUCCESS,\r\n  WRITE_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/WRITE_DOCUMENT');\r\n// api - read\r\nconst [\r\n  READ_DOCUMENT,\r\n  READ_DOCUMENT_SUCCESS,\r\n  READ_DOCUMENT_FAILURE,\r\n] = createRequestActionTypes('wiki/READ_DOCUMENT');\r\nconst UNLOAD_DOCUMENT = 'wiki/UNLOAD_DOCUMENT'; // 위키 문서 뷰 언마운트시 문서 정보 제거\r\nconst SET_ORIGINAL_DOCUMENT = 'wiki/SET_ORIGINAL_DOCUMENT'; // 위키 문서 편집 시 에디터에 문서 세팅\r\n// api - list\r\nconst [\r\n  GET_DOCUMENT_LIST,\r\n  GET_DOCUMENT_LIST_SUCCESS,\r\n  GET_DOCUMENT_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_LIST');\r\nconst UNLOAD_LIST = 'wiki/UNLOAD_LIST'; // 위키 리스트 뷰 언마운트시 document list 정보 제거\r\n// api - history list\r\nconst [\r\n  GET_HISTORY_LIST,\r\n  GET_HISTORY_LIST_SUCCESS,\r\n  GET_HISTORY_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_HISTORY_LIST');\r\n// api - search\r\nconst [\r\n  GET_SEARCH_LIST,\r\n  GET_SEARCH_LIST_SUCCESS,\r\n  GET_SEARCH_LIST_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_SEARCH_LIST');\r\n// api- search/direct\r\nconst [\r\n  GET_DIRECT_TITLE,\r\n  GET_DIRECT_TITLE_SUCCESS,\r\n  GET_DIRECT_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DIRECT_TITLE');\r\n// api - search/random\r\nconst [\r\n  GET_RANDOM_TITLE,\r\n  GET_RANDOM_TITLE_SUCCESS,\r\n  GET_RANDOM_TITLE_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_RANDOM_TITLE');\r\n// api - document count\r\nconst [\r\n  GET_DOCUMENT_COUNT,\r\n  GET_DOCUMENT_COUNT_SUCCESS,\r\n  GET_DOCUMENT_COUNT_FAILURE,\r\n] = createRequestActionTypes('wiki/GET_DOCUMENT_COUNT');\r\n// api = add barcode to document\r\nconst [\r\n  ADD_BARCODE_NUMBER,\r\n  ADD_BARCODE_NUMBER_SUCCESS,\r\n  ADD_BARCODE_NUMBER_FAILURE,\r\n] = createRequestActionTypes('wiki/ADD_BARCODE_NUMBER');\r\n\r\n/* action */\r\nexport const getRequestList = createAction(GET_REQUEST_LIST);\r\nexport const setTitle = createAction(SET_TITLE, (title) => title);\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writeDocument = createAction(WRITE_DOCUMENT, ({ id, body }) => ({\r\n  id,\r\n  body,\r\n}));\r\nexport const readDocument = createAction(READ_DOCUMENT, ({ id, r }) => ({\r\n  id,\r\n  r,\r\n}));\r\nexport const unloadDocument = createAction(UNLOAD_DOCUMENT);\r\nexport const setOriginalDocument = createAction(\r\n  SET_ORIGINAL_DOCUMENT,\r\n  (document) => document,\r\n);\r\nexport const getDocumentList = createAction(\r\n  GET_DOCUMENT_LIST,\r\n  (block) => block,\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\nexport const getHistoryList = createAction(GET_HISTORY_LIST, ({ id }) => ({\r\n  id,\r\n}));\r\nexport const getSearchList = createAction(\r\n  GET_SEARCH_LIST,\r\n  ({ query, oldest, shortest, longest, page, block }) => ({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  }),\r\n);\r\nexport const getDirectTitle = createAction(GET_DIRECT_TITLE, ({ query }) => ({\r\n  query,\r\n}));\r\nexport const getRandomTitle = createAction(GET_RANDOM_TITLE);\r\nexport const getDocumentCount = createAction(\r\n  GET_DOCUMENT_COUNT,\r\n  ({ username }) => ({ username }),\r\n);\r\nexport const addBarcodeNumber = createAction(\r\n  ADD_BARCODE_NUMBER,\r\n  ({ title, code }) => ({ title, code }),\r\n);\r\n\r\n/* redux-saga */\r\nconst getRequestListSaga = createRequestSaga(\r\n  GET_REQUEST_LIST,\r\n  wikiAPI.requestDocument,\r\n);\r\nconst writeDocumentSaga = createRequestSaga(\r\n  WRITE_DOCUMENT,\r\n  wikiAPI.writeDocument,\r\n);\r\nconst readDocumentSaga = createRequestSaga(READ_DOCUMENT, wikiAPI.readDocument);\r\nconst getDocumentListSaga = createRequestSaga(\r\n  GET_DOCUMENT_LIST,\r\n  wikiAPI.getDocumentList,\r\n);\r\nconst getHistoryListSaga = createRequestSaga(\r\n  GET_HISTORY_LIST,\r\n  wikiAPI.getHistoryList,\r\n);\r\nconst getSearchListSaga = createRequestSaga(\r\n  GET_SEARCH_LIST,\r\n  wikiAPI.getSearchList,\r\n);\r\nconst getDirectTitleSaga = createRequestSaga(\r\n  GET_DIRECT_TITLE,\r\n  wikiAPI.getDirectTitle,\r\n);\r\nconst getRandomTitleSaga = createRequestSaga(\r\n  GET_RANDOM_TITLE,\r\n  wikiAPI.getRandomTitle,\r\n);\r\nconst getDocumentCountSaga = createRequestSaga(\r\n  GET_DOCUMENT_COUNT,\r\n  wikiAPI.getDocumentCount,\r\n);\r\nconst addBarcodeNumberSaga = createRequestSaga(\r\n  ADD_BARCODE_NUMBER,\r\n  wikiAPI.addBarcodeNumber,\r\n);\r\n\r\nexport function* wikiSaga() {\r\n  yield takeLatest(GET_REQUEST_LIST, getRequestListSaga);\r\n  yield takeLatest(WRITE_DOCUMENT, writeDocumentSaga);\r\n  yield takeLatest(READ_DOCUMENT, readDocumentSaga);\r\n  yield takeLatest(GET_DOCUMENT_LIST, getDocumentListSaga);\r\n  yield takeLatest(GET_HISTORY_LIST, getHistoryListSaga);\r\n  yield takeLatest(GET_SEARCH_LIST, getSearchListSaga);\r\n  yield takeLatest(GET_DIRECT_TITLE, getDirectTitleSaga);\r\n  yield takeLatest(GET_RANDOM_TITLE, getRandomTitleSaga);\r\n  yield takeLatest(GET_DOCUMENT_COUNT, getDocumentCountSaga);\r\n  yield takeLatest(ADD_BARCODE_NUMBER, addBarcodeNumberSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: null,\r\n  titleError: null,\r\n  body: '',\r\n  document: null,\r\n  documentError: null,\r\n  editDocument: null,\r\n  editDocumentError: null,\r\n  requestList: [],\r\n  requestListError: null,\r\n  documentList: null,\r\n  documentListError: null,\r\n  historyList: null,\r\n  historyListError: null,\r\n  query: '',\r\n  searchList: [],\r\n  searchListError: null,\r\n  lastPage: 1,\r\n  directName: null,\r\n  directError: null,\r\n  randomTitle: null,\r\n  randomTitleError: null,\r\n  documentCount: 0,\r\n  documentCountError: null,\r\n  addBarcodeNumberResult: null,\r\n  addBarcodeNumberResultError: null,\r\n};\r\n\r\n/* reducer */\r\nconst wiki = handleActions(\r\n  {\r\n    [GET_REQUEST_LIST_SUCCESS]: (state, { payload: requestList }) => ({\r\n      ...state,\r\n      requestList,\r\n    }),\r\n    [GET_REQUEST_LIST_FAILURE]: (state, { payload: requestListError }) => ({\r\n      ...state,\r\n      requestListError,\r\n    }),\r\n    [SET_TITLE]: (state, { payload: title }) => ({\r\n      ...state,\r\n      title,\r\n    }),\r\n    [INITIALIZE]: (state) => ({\r\n      ...state,\r\n      title: null,\r\n      titleError: null,\r\n      body: '',\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n      query: '',\r\n      directName: null,\r\n      directError: null,\r\n      randomTitle: null,\r\n      randomTitleError: null,\r\n    }),\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키 값을 업데이트\r\n    }),\r\n    [WRITE_DOCUMENT_SUCCESS]: (state, { payload: editDocument }) => ({\r\n      ...state,\r\n      editDocument,\r\n    }),\r\n    [WRITE_DOCUMENT_FAILURE]: (state, { payload: editDocumentError }) => ({\r\n      ...state,\r\n      editDocumentError,\r\n    }),\r\n    [READ_DOCUMENT_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      document,\r\n    }),\r\n    [READ_DOCUMENT_FAILURE]: (state, { payload: documentError }) => ({\r\n      ...state,\r\n      documentError,\r\n    }),\r\n    [UNLOAD_DOCUMENT]: (state) => ({\r\n      ...state,\r\n      document: null,\r\n      documentError: null,\r\n    }),\r\n    [SET_ORIGINAL_DOCUMENT]: (state, { payload: document }) => ({\r\n      ...state,\r\n      title: document.title,\r\n      body: document.body,\r\n      editDocument: null,\r\n      editDocumentError: null,\r\n    }),\r\n    [GET_DOCUMENT_LIST_SUCCESS]: (state, { payload: documentList }) => ({\r\n      ...state,\r\n      documentList,\r\n    }),\r\n    [GET_DOCUMENT_LIST_FAILURE]: (state, { payload: documentListError }) => ({\r\n      ...state,\r\n      documentListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      documentList: null,\r\n      documentListError: null,\r\n    }),\r\n    [GET_HISTORY_LIST_SUCCESS]: (state, { payload: historyList }) => ({\r\n      ...state,\r\n      historyList,\r\n    }),\r\n    [GET_HISTORY_LIST_FAILURE]: (state, { payload: historyListError }) => ({\r\n      ...state,\r\n      historyListError,\r\n    }),\r\n    [GET_SEARCH_LIST_SUCCESS]: (\r\n      state,\r\n      { payload: searchList, meta: response },\r\n    ) => ({\r\n      ...state,\r\n      searchList,\r\n      lastPage: parseInt(response.headers['makeuphara-wiki-last-page'], '10'),\r\n    }),\r\n    [GET_SEARCH_LIST_FAILURE]: (state, { payload: searchListError }) => ({\r\n      ...state,\r\n      searchListError,\r\n    }),\r\n    [GET_DIRECT_TITLE_SUCCESS]: (state, { payload: document }) => ({\r\n      ...state,\r\n      directName: document.title.name,\r\n    }),\r\n    [GET_DIRECT_TITLE_FAILURE]: (state, { payload: directError }) => ({\r\n      ...state,\r\n      directError,\r\n    }),\r\n    [GET_RANDOM_TITLE_SUCCESS]: (state, { payload: title }) => ({\r\n      ...state,\r\n      randomTitle: title.name,\r\n    }),\r\n    [GET_RANDOM_TITLE_FAILURE]: (state, { payload: randomTitleError }) => ({\r\n      ...state,\r\n      randomTitleError,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_SUCCESS]: (state, { payload: documentCount }) => ({\r\n      ...state,\r\n      documentCount,\r\n    }),\r\n    [GET_DOCUMENT_COUNT_FAILURE]: (state, { payload: documentCountError }) => ({\r\n      ...state,\r\n      documentCountError,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_SUCCESS]: (\r\n      state,\r\n      { payload: addBarcodeNumberResult },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResult,\r\n    }),\r\n    [ADD_BARCODE_NUMBER_FAILURE]: (\r\n      state,\r\n      { payload: addBarcodeNumberResultError },\r\n    ) => ({\r\n      ...state,\r\n      addBarcodeNumberResultError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default wiki;\r\n","import client from './client';\r\nimport qs from 'qs';\r\n\r\nexport const requestDocument = () => client.get('/api/wiki/request');\r\n\r\nexport const writeDocument = ({ id, body }) =>\r\n  client.post(`/api/wiki/write/${id}`, { body });\r\n\r\nexport const readDocument = ({ id, r }) => {\r\n  const queryString = qs.stringify({ r });\r\n  return client.get(`/api/wiki/${id}?${queryString}`);\r\n};\r\n\r\nexport const getDocumentList = (block) => {\r\n  const queryString = qs.stringify({ block });\r\n  return client.get(`/api/wiki/list?${queryString}`);\r\n};\r\n\r\nexport const getHistoryList = ({ id }) => client.get(`/api/wiki/${id}/history`);\r\n\r\nexport const getSearchList = ({\r\n  query,\r\n  oldest,\r\n  shortest,\r\n  longest,\r\n  page,\r\n  block,\r\n}) => {\r\n  const queryString = qs.stringify({\r\n    query,\r\n    oldest,\r\n    shortest,\r\n    longest,\r\n    page,\r\n    block,\r\n  });\r\n  return client.get(`/api/wiki/search?${queryString}`);\r\n};\r\n\r\nexport const getDirectTitle = ({ query }) => {\r\n  const queryString = qs.stringify({ query });\r\n  return client.get(`/api/wiki/search/direct?${queryString}`);\r\n};\r\n\r\nexport const getRandomTitle = () => client.get('/api/wiki/search/random');\r\n\r\nexport const getDocumentCount = ({ username }) =>\r\n  client.post('/api/wiki/doc/count', { username });\r\n\r\nexport const addBarcodeNumber = ({ title, code }) =>\r\n  client.patch(`/api/wiki/${title}/barcode`, { code });\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport {\r\n  createRequestActionTypes,\r\n  createRequestSaga,\r\n} from '../../lib/createRequest';\r\nimport * as postAPI from '../../lib/api/post';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\n/* action type */\r\n// local\r\nconst INITIALIZE = 'post/INITIALIZE'; // 작성 내용 초기화\r\nconst CHANGE_FIELD = 'post/CHANGE_FIELD'; // 특정 key값 바꾸기\r\nconst SET_ORIGINAL_POST = 'post/SET_ORIGINAL_POST'; // 포스트 편집 시 에디터에 포스트 정보 세팅\r\nconst UNLOAD_POST = 'post/UNLOAD_POST'; // 포스트 뷰 언마운트시 post 정보 제거\r\n// api - write\r\nconst [\r\n  WRITE_POST,\r\n  WRITE_POST_SUCCESS,\r\n  WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('post/WRITE_POST');\r\n// api - read\r\nconst [\r\n  READ_POST,\r\n  READ_POST_SUCCESS,\r\n  READ_POST_FAILURE,\r\n] = createRequestActionTypes('post/READ_POST');\r\n// api - update\r\nconst [\r\n  UPDATE_POST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAILURE,\r\n] = createRequestActionTypes('post/UPDATE_POST');\r\n// api - list\r\nconst [GET_LIST, GET_LIST_SUCCESS, GET_LIST_FAILURE] = createRequestActionTypes(\r\n  'post/GET_LIST',\r\n);\r\nconst UNLOAD_LIST = 'post/UNLOAD_LIST'; // 포스트 리스트 뷰 언마운트시 post list 정보 제거\r\n\r\n/* action */\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, (post) => post);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\nexport const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\r\n  title,\r\n  body,\r\n  tags,\r\n}));\r\nexport const readPost = createAction(READ_POST, (id) => id);\r\nexport const updatePost = createAction(\r\n  UPDATE_POST,\r\n  ({ id, title, body, tags }) => ({ id, title, body, tags }),\r\n);\r\nexport const getList = createAction(\r\n  GET_LIST,\r\n  ({ page, tag, username, query, block, oldest, day }) => ({\r\n    page,\r\n    tag,\r\n    username,\r\n    query,\r\n    block,\r\n    oldest,\r\n    day,\r\n  }),\r\n);\r\nexport const unloadList = createAction(UNLOAD_LIST);\r\n\r\n/* redux-saga */\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\r\nconst readPostSaga = createRequestSaga(READ_POST, postAPI.readPost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postAPI.updatePost);\r\nconst getListSaga = createRequestSaga(GET_LIST, postAPI.getList);\r\n\r\nexport function* postSaga() {\r\n  yield takeLatest(WRITE_POST, writePostSaga);\r\n  yield takeLatest(READ_POST, readPostSaga);\r\n  yield takeLatest(UPDATE_POST, updatePostSaga);\r\n  yield takeLatest(GET_LIST, getListSaga);\r\n}\r\n\r\n/* initialize state */\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n  editPost: null,\r\n  editPostError: null,\r\n  post: null,\r\n  postError: null,\r\n  postList: [],\r\n  lastPage: 1,\r\n  postCount: 0,\r\n  postListError: null,\r\n  targetPostId: null,\r\n};\r\n\r\n/* reducer */\r\nconst post = handleActions(\r\n  {\r\n    [INITIALIZE]: () => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value, // 특정 키값을 업데이트\r\n    }),\r\n    [SET_ORIGINAL_POST]: (state, { payload: post }) => ({\r\n      ...state,\r\n      title: post.title,\r\n      body: post.body,\r\n      tags: post.tags,\r\n      targetPostId: post._id,\r\n    }),\r\n    [UNLOAD_POST]: (state) => ({\r\n      ...state,\r\n      post: null,\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST]: (state) => ({\r\n      ...state,\r\n      editPost: null,\r\n      neditPosttError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPostError,\r\n    }),\r\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n    }),\r\n    [READ_POST_FAILURE]: (state, { payload: postError }) => ({\r\n      ...state,\r\n      postError,\r\n    }),\r\n    [UPDATE_POST_SUCCESS]: (state, { payload: editPost }) => ({\r\n      ...state,\r\n      editPost,\r\n    }),\r\n    [UPDATE_POST_FAILURE]: (state, { payload: editPostError }) => ({\r\n      ...state,\r\n      editPostError,\r\n    }),\r\n    [GET_LIST_SUCCESS]: (state, { payload: postList, meta: response }) => ({\r\n      ...state,\r\n      postList,\r\n      postCount: parseInt(response.headers['makeuphara-post-count'], '10'),\r\n      lastPage: parseInt(response.headers['makeuphara-post-last-page'], '10'),\r\n    }),\r\n    [GET_LIST_FAILURE]: (state, { payload: postListError }) => ({\r\n      ...state,\r\n      postListError,\r\n    }),\r\n    [UNLOAD_LIST]: (state) => ({\r\n      ...state,\r\n      postList: [],\r\n      postListError: null,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default post;\r\n"],"sourceRoot":""}